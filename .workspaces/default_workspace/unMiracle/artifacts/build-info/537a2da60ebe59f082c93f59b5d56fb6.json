{
	"id": "537a2da60ebe59f082c93f59b5d56fb6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// import \"@openzeppelin/contracts/utils/Timers.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\ncontract test {\n\n\n    function keccak256test() public returns(bytes memory) {\n        // return uint256(keccak256(bytes(\"description\")));\n        // return bytes(\"description\");\n        // return uint256(keccak256(bytes(\"description\")));\n\n        return  abi.encode(1,45804,5000);\n    }\n\n    function abiEncode() public returns(bytes memory) {\n        return abi.encode(1,45804,5000);\n    }\n    function abiDecode(bytes memory data) public returns(uint _str1, uint _number, uint _str2) {\n        (_str1, _number, _str2) = abi.decode(data, (uint, uint, uint));            \n    }\n\n\n    function votingDelay() public pure returns(uint256) {\n        return 1;\n    }\n\n    function votingPeriod() public pure returns(uint256) {\n        return 45818; // 1week\n    }\n\n    function snapshot() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n\n        return snapshot;\n    }\n\n    function deadline() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n        uint64 deadline = snapshot + uint64(votingPeriod());\n\n        return deadline;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"test": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "abiDecode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_str1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_number",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_str2",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "abiEncode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deadline",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "keccak256test",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".workspaces/default_workspace/unMiracle/test.sol\":170:1309  contract test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":170:1309  contract test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x416bdc52\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x416bdc52\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6097e7a3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8c492a76\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9711715a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x02a251a3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29dcb0cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3932abb1\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":837:928  function votingPeriod() public pure returns(uint256) {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1093:1307  function deadline() public view returns(uint64) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":754:831  function votingDelay() public pure returns(uint256) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":565:747  function abiDecode(bytes memory data) public returns(uint _str1, uint _number, uint _str2) {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":462:560  function abiEncode() public returns(bytes memory) {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:456  function keccak256test() public returns(bytes memory) {... */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":934:1087  function snapshot() public view returns(uint64) {... */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":837:928  function votingPeriod() public pure returns(uint256) {... */\n    tag_12:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":881:888  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":907:912  45818 */\n      0xb2fa\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":900:912  return 45818 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":837:928  function votingPeriod() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1093:1307  function deadline() public view returns(uint64) {... */\n    tag_16:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1133:1139  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1151:1166  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1199:1212  votingDelay() */\n      tag_40\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1199:1210  votingDelay */\n      tag_20\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1199:1212  votingDelay() */\n      jump\t// in\n    tag_40:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1176:1188  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1169:1213  uint64(block.number) + uint64(votingDelay()) */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1151:1213  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1223:1238  uint64 deadline */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1259:1273  votingPeriod() */\n      tag_43\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1259:1271  votingPeriod */\n      tag_12\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1259:1273  votingPeriod() */\n      jump\t// in\n    tag_43:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1241:1249  snapshot */\n      dup3\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1241:1274  snapshot + uint64(votingPeriod()) */\n      tag_44\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_44:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1223:1274  uint64 deadline = snapshot + uint64(votingPeriod()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1292:1300  deadline */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1285:1300  return deadline */\n      swap3\n      pop\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1093:1307  function deadline() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":754:831  function votingDelay() public pure returns(uint256) {... */\n    tag_20:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":797:804  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":823:824  1 */\n      0x01\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":816:824  return 1 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":754:831  function votingDelay() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":565:747  function abiDecode(bytes memory data) public returns(uint _str1, uint _number, uint _str2) {... */\n    tag_25:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":618:628  uint _str1 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":630:642  uint _number */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":644:654  uint _str2 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":703:707  data */\n      dup4\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":692:728  abi.decode(data, (uint, uint, uint)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":666:728  (_str1, _number, _str2) = abi.decode(data, (uint, uint, uint)) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      dup3\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":565:747  function abiDecode(bytes memory data) public returns(uint _str1, uint _number, uint _str2) {... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":462:560  function abiEncode() public returns(bytes memory) {... */\n    tag_29:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":498:510  bytes memory */\n      0x60\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":540:541  1 */\n      0x01\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":542:547  45804 */\n      0xb2ec\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":548:552  5000 */\n      0x1388\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":529:553  abi.encode(1,45804,5000) */\n      add(0x20, mload(0x40))\n      tag_50\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":522:553  return abi.encode(1,45804,5000) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":462:560  function abiEncode() public returns(bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:456  function keccak256test() public returns(bytes memory) {... */\n    tag_33:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":232:244  bytes memory */\n      0x60\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":436:437  1 */\n      0x01\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":438:443  45804 */\n      0xb2ec\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":444:448  5000 */\n      0x1388\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":425:449  abi.encode(1,45804,5000) */\n      add(0x20, mload(0x40))\n      tag_53\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":417:449  return  abi.encode(1,45804,5000) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:456  function keccak256test() public returns(bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":934:1087  function snapshot() public view returns(uint64) {... */\n    tag_36:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":974:980  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":992:1007  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1040:1053  votingDelay() */\n      tag_55\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1040:1051  votingDelay */\n      tag_20\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1040:1053  votingDelay() */\n      jump\t// in\n    tag_55:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1017:1029  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1010:1054  uint64(block.number) + uint64(votingDelay()) */\n      tag_56\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_56:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":992:1054  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1072:1080  snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1065:1080  return snapshot */\n      swap2\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":934:1087  function snapshot() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:350   */\n    tag_58:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_60\n        /* \"#utility.yul\":125:173   */\n      tag_61\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":109:174   */\n      tag_63\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:251   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":290:291   */\n      0x00\n        /* \"#utility.yul\":287:288   */\n      dup1\n        /* \"#utility.yul\":280:292   */\n      revert\n        /* \"#utility.yul\":249:251   */\n    tag_64:\n        /* \"#utility.yul\":303:344   */\n      tag_65\n        /* \"#utility.yul\":337:343   */\n      dup5\n        /* \"#utility.yul\":332:335   */\n      dup3\n        /* \"#utility.yul\":327:330   */\n      dup6\n        /* \"#utility.yul\":303:344   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":90:350   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":369:640   */\n    tag_67:\n        /* \"#utility.yul\":424:429   */\n      0x00\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":466:470   */\n      0x1f\n        /* \"#utility.yul\":458:464   */\n      dup4\n        /* \"#utility.yul\":454:471   */\n      add\n        /* \"#utility.yul\":450:477   */\n      slt\n        /* \"#utility.yul\":440:442   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":491:492   */\n      0x00\n        /* \"#utility.yul\":488:489   */\n      dup1\n        /* \"#utility.yul\":481:493   */\n      revert\n        /* \"#utility.yul\":440:442   */\n    tag_69:\n        /* \"#utility.yul\":531:537   */\n      dup2\n        /* \"#utility.yul\":518:538   */\n      calldataload\n        /* \"#utility.yul\":556:634   */\n      tag_70\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":622:628   */\n      dup3\n        /* \"#utility.yul\":615:619   */\n      0x20\n        /* \"#utility.yul\":607:613   */\n      dup7\n        /* \"#utility.yul\":603:620   */\n      add\n        /* \"#utility.yul\":556:634   */\n      tag_58\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":547:634   */\n      swap2\n      pop\n        /* \"#utility.yul\":430:640   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:789   */\n    tag_71:\n        /* \"#utility.yul\":703:708   */\n      0x00\n        /* \"#utility.yul\":734:740   */\n      dup2\n        /* \"#utility.yul\":728:741   */\n      mload\n        /* \"#utility.yul\":719:741   */\n      swap1\n      pop\n        /* \"#utility.yul\":750:783   */\n      tag_73\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":750:783   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":709:789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":795:1168   */\n    tag_24:\n        /* \"#utility.yul\":863:869   */\n      0x00\n        /* \"#utility.yul\":912:914   */\n      0x20\n        /* \"#utility.yul\":900:909   */\n      dup3\n        /* \"#utility.yul\":891:898   */\n      dup5\n        /* \"#utility.yul\":887:910   */\n      sub\n        /* \"#utility.yul\":883:915   */\n      slt\n        /* \"#utility.yul\":880:882   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":928:929   */\n      0x00\n        /* \"#utility.yul\":925:926   */\n      dup1\n        /* \"#utility.yul\":918:930   */\n      revert\n        /* \"#utility.yul\":880:882   */\n    tag_76:\n        /* \"#utility.yul\":999:1000   */\n      0x00\n        /* \"#utility.yul\":988:997   */\n      dup3\n        /* \"#utility.yul\":984:1001   */\n      add\n        /* \"#utility.yul\":971:1002   */\n      calldataload\n        /* \"#utility.yul\":1029:1047   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1021:1027   */\n      dup2\n        /* \"#utility.yul\":1018:1048   */\n      gt\n        /* \"#utility.yul\":1015:1017   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":1061:1062   */\n      0x00\n        /* \"#utility.yul\":1058:1059   */\n      dup1\n        /* \"#utility.yul\":1051:1063   */\n      revert\n        /* \"#utility.yul\":1015:1017   */\n    tag_77:\n        /* \"#utility.yul\":1089:1151   */\n      tag_78\n        /* \"#utility.yul\":1143:1150   */\n      dup5\n        /* \"#utility.yul\":1134:1140   */\n      dup3\n        /* \"#utility.yul\":1123:1132   */\n      dup6\n        /* \"#utility.yul\":1119:1141   */\n      add\n        /* \"#utility.yul\":1089:1151   */\n      tag_67\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1079:1151   */\n      swap2\n      pop\n        /* \"#utility.yul\":942:1161   */\n      pop\n        /* \"#utility.yul\":870:1168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1174:1770   */\n    tag_48:\n        /* \"#utility.yul\":1262:1268   */\n      0x00\n        /* \"#utility.yul\":1270:1276   */\n      dup1\n        /* \"#utility.yul\":1278:1284   */\n      0x00\n        /* \"#utility.yul\":1327:1329   */\n      0x60\n        /* \"#utility.yul\":1315:1324   */\n      dup5\n        /* \"#utility.yul\":1306:1313   */\n      dup7\n        /* \"#utility.yul\":1302:1325   */\n      sub\n        /* \"#utility.yul\":1298:1330   */\n      slt\n        /* \"#utility.yul\":1295:1297   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1343:1344   */\n      0x00\n        /* \"#utility.yul\":1340:1341   */\n      dup1\n        /* \"#utility.yul\":1333:1345   */\n      revert\n        /* \"#utility.yul\":1295:1297   */\n    tag_80:\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1411:1475   */\n      tag_81\n        /* \"#utility.yul\":1467:1474   */\n      dup7\n        /* \"#utility.yul\":1458:1464   */\n      dup3\n        /* \"#utility.yul\":1447:1456   */\n      dup8\n        /* \"#utility.yul\":1443:1465   */\n      add\n        /* \"#utility.yul\":1411:1475   */\n      tag_71\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1401:1475   */\n      swap4\n      pop\n        /* \"#utility.yul\":1357:1485   */\n      pop\n        /* \"#utility.yul\":1524:1526   */\n      0x20\n        /* \"#utility.yul\":1550:1614   */\n      tag_82\n        /* \"#utility.yul\":1606:1613   */\n      dup7\n        /* \"#utility.yul\":1597:1603   */\n      dup3\n        /* \"#utility.yul\":1586:1595   */\n      dup8\n        /* \"#utility.yul\":1582:1604   */\n      add\n        /* \"#utility.yul\":1550:1614   */\n      tag_71\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1540:1614   */\n      swap3\n      pop\n        /* \"#utility.yul\":1495:1624   */\n      pop\n        /* \"#utility.yul\":1663:1665   */\n      0x40\n        /* \"#utility.yul\":1689:1753   */\n      tag_83\n        /* \"#utility.yul\":1745:1752   */\n      dup7\n        /* \"#utility.yul\":1736:1742   */\n      dup3\n        /* \"#utility.yul\":1725:1734   */\n      dup8\n        /* \"#utility.yul\":1721:1743   */\n      add\n        /* \"#utility.yul\":1689:1753   */\n      tag_71\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1679:1753   */\n      swap2\n      pop\n        /* \"#utility.yul\":1634:1763   */\n      pop\n        /* \"#utility.yul\":1285:1770   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1776:2136   */\n    tag_84:\n        /* \"#utility.yul\":1862:1865   */\n      0x00\n        /* \"#utility.yul\":1890:1928   */\n      tag_86\n        /* \"#utility.yul\":1922:1927   */\n      dup3\n        /* \"#utility.yul\":1890:1928   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1944:2014   */\n      tag_88\n        /* \"#utility.yul\":2007:2013   */\n      dup2\n        /* \"#utility.yul\":2002:2005   */\n      dup6\n        /* \"#utility.yul\":1944:2014   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1937:2014   */\n      swap4\n      pop\n        /* \"#utility.yul\":2023:2075   */\n      tag_90\n        /* \"#utility.yul\":2068:2074   */\n      dup2\n        /* \"#utility.yul\":2063:2066   */\n      dup6\n        /* \"#utility.yul\":2056:2060   */\n      0x20\n        /* \"#utility.yul\":2049:2054   */\n      dup7\n        /* \"#utility.yul\":2045:2061   */\n      add\n        /* \"#utility.yul\":2023:2075   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2100:2129   */\n      tag_92\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2100:2129   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2095:2098   */\n      dup5\n        /* \"#utility.yul\":2091:2130   */\n      add\n        /* \"#utility.yul\":2084:2130   */\n      swap2\n      pop\n        /* \"#utility.yul\":1866:2136   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2142:2285   */\n    tag_94:\n        /* \"#utility.yul\":2235:2278   */\n      tag_96\n        /* \"#utility.yul\":2272:2277   */\n      dup2\n        /* \"#utility.yul\":2235:2278   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2230:2233   */\n      dup3\n        /* \"#utility.yul\":2223:2279   */\n      mstore\n        /* \"#utility.yul\":2213:2285   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2291:2444   */\n    tag_98:\n        /* \"#utility.yul\":2389:2437   */\n      tag_100\n        /* \"#utility.yul\":2431:2436   */\n      dup2\n        /* \"#utility.yul\":2389:2437   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2384:2387   */\n      dup3\n        /* \"#utility.yul\":2377:2438   */\n      mstore\n        /* \"#utility.yul\":2367:2444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2450:2601   */\n    tag_102:\n        /* \"#utility.yul\":2547:2594   */\n      tag_104\n        /* \"#utility.yul\":2588:2593   */\n      dup2\n        /* \"#utility.yul\":2547:2594   */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2542:2545   */\n      dup3\n        /* \"#utility.yul\":2535:2595   */\n      mstore\n        /* \"#utility.yul\":2525:2601   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2607:2725   */\n    tag_106:\n        /* \"#utility.yul\":2694:2718   */\n      tag_108\n        /* \"#utility.yul\":2712:2717   */\n      dup2\n        /* \"#utility.yul\":2694:2718   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2689:2692   */\n      dup3\n        /* \"#utility.yul\":2682:2719   */\n      mstore\n        /* \"#utility.yul\":2672:2725   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2731:2846   */\n    tag_110:\n        /* \"#utility.yul\":2816:2839   */\n      tag_112\n        /* \"#utility.yul\":2833:2838   */\n      dup2\n        /* \"#utility.yul\":2816:2839   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2811:2814   */\n      dup3\n        /* \"#utility.yul\":2804:2840   */\n      mstore\n        /* \"#utility.yul\":2794:2846   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2852:3161   */\n    tag_31:\n        /* \"#utility.yul\":2963:2967   */\n      0x00\n        /* \"#utility.yul\":3001:3003   */\n      0x20\n        /* \"#utility.yul\":2990:2999   */\n      dup3\n        /* \"#utility.yul\":2986:3004   */\n      add\n        /* \"#utility.yul\":2978:3004   */\n      swap1\n      pop\n        /* \"#utility.yul\":3050:3059   */\n      dup2\n        /* \"#utility.yul\":3044:3048   */\n      dup2\n        /* \"#utility.yul\":3040:3060   */\n      sub\n        /* \"#utility.yul\":3036:3037   */\n      0x00\n        /* \"#utility.yul\":3025:3034   */\n      dup4\n        /* \"#utility.yul\":3021:3038   */\n      add\n        /* \"#utility.yul\":3014:3061   */\n      mstore\n        /* \"#utility.yul\":3078:3154   */\n      tag_115\n        /* \"#utility.yul\":3149:3153   */\n      dup2\n        /* \"#utility.yul\":3140:3146   */\n      dup5\n        /* \"#utility.yul\":3078:3154   */\n      tag_84\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3070:3154   */\n      swap1\n      pop\n        /* \"#utility.yul\":2968:3161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3167:3663   */\n    tag_51:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3383   */\n      0x60\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3384   */\n      add\n        /* \"#utility.yul\":3358:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3471   */\n      tag_117\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup7\n        /* \"#utility.yul\":3394:3471   */\n      tag_94\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3481:3564   */\n      tag_118\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3549:3558   */\n      dup4\n        /* \"#utility.yul\":3545:3563   */\n      add\n        /* \"#utility.yul\":3536:3542   */\n      dup6\n        /* \"#utility.yul\":3481:3564   */\n      tag_98\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3574:3656   */\n      tag_119\n        /* \"#utility.yul\":3652:3654   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      dup4\n        /* \"#utility.yul\":3637:3655   */\n      add\n        /* \"#utility.yul\":3628:3634   */\n      dup5\n        /* \"#utility.yul\":3574:3656   */\n      tag_102\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3348:3663   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3669:3891   */\n    tag_14:\n        /* \"#utility.yul\":3762:3766   */\n      0x00\n        /* \"#utility.yul\":3800:3802   */\n      0x20\n        /* \"#utility.yul\":3789:3798   */\n      dup3\n        /* \"#utility.yul\":3785:3803   */\n      add\n        /* \"#utility.yul\":3777:3803   */\n      swap1\n      pop\n        /* \"#utility.yul\":3813:3884   */\n      tag_121\n        /* \"#utility.yul\":3881:3882   */\n      0x00\n        /* \"#utility.yul\":3870:3879   */\n      dup4\n        /* \"#utility.yul\":3866:3883   */\n      add\n        /* \"#utility.yul\":3857:3863   */\n      dup5\n        /* \"#utility.yul\":3813:3884   */\n      tag_106\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3767:3891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:4339   */\n    tag_27:\n        /* \"#utility.yul\":4046:4050   */\n      0x00\n        /* \"#utility.yul\":4084:4086   */\n      0x60\n        /* \"#utility.yul\":4073:4082   */\n      dup3\n        /* \"#utility.yul\":4069:4087   */\n      add\n        /* \"#utility.yul\":4061:4087   */\n      swap1\n      pop\n        /* \"#utility.yul\":4097:4168   */\n      tag_123\n        /* \"#utility.yul\":4165:4166   */\n      0x00\n        /* \"#utility.yul\":4154:4163   */\n      dup4\n        /* \"#utility.yul\":4150:4167   */\n      add\n        /* \"#utility.yul\":4141:4147   */\n      dup7\n        /* \"#utility.yul\":4097:4168   */\n      tag_106\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4178:4250   */\n      tag_124\n        /* \"#utility.yul\":4246:4248   */\n      0x20\n        /* \"#utility.yul\":4235:4244   */\n      dup4\n        /* \"#utility.yul\":4231:4249   */\n      add\n        /* \"#utility.yul\":4222:4228   */\n      dup6\n        /* \"#utility.yul\":4178:4250   */\n      tag_106\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4260:4332   */\n      tag_125\n        /* \"#utility.yul\":4328:4330   */\n      0x40\n        /* \"#utility.yul\":4317:4326   */\n      dup4\n        /* \"#utility.yul\":4313:4331   */\n      add\n        /* \"#utility.yul\":4304:4310   */\n      dup5\n        /* \"#utility.yul\":4260:4332   */\n      tag_106\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4051:4339   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4345:4563   */\n    tag_18:\n        /* \"#utility.yul\":4436:4440   */\n      0x00\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"#utility.yul\":4463:4472   */\n      dup3\n        /* \"#utility.yul\":4459:4477   */\n      add\n        /* \"#utility.yul\":4451:4477   */\n      swap1\n      pop\n        /* \"#utility.yul\":4487:4556   */\n      tag_127\n        /* \"#utility.yul\":4553:4554   */\n      0x00\n        /* \"#utility.yul\":4542:4551   */\n      dup4\n        /* \"#utility.yul\":4538:4555   */\n      add\n        /* \"#utility.yul\":4529:4535   */\n      dup5\n        /* \"#utility.yul\":4487:4556   */\n      tag_110\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4441:4563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4569:4698   */\n    tag_63:\n        /* \"#utility.yul\":4603:4609   */\n      0x00\n        /* \"#utility.yul\":4630:4650   */\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4620:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4659:4692   */\n      tag_131\n        /* \"#utility.yul\":4687:4691   */\n      dup3\n        /* \"#utility.yul\":4679:4685   */\n      dup3\n        /* \"#utility.yul\":4659:4692   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4610:4698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4704:4779   */\n    tag_130:\n        /* \"#utility.yul\":4737:4743   */\n      0x00\n        /* \"#utility.yul\":4770:4772   */\n      0x40\n        /* \"#utility.yul\":4764:4773   */\n      mload\n        /* \"#utility.yul\":4754:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4744:4779   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":4785:5092   */\n    tag_62:\n        /* \"#utility.yul\":4846:4850   */\n      0x00\n        /* \"#utility.yul\":4936:4954   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4928:4934   */\n      dup3\n        /* \"#utility.yul\":4925:4955   */\n      gt\n        /* \"#utility.yul\":4922:4924   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":4958:4976   */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4922:4924   */\n    tag_135:\n        /* \"#utility.yul\":4996:5025   */\n      tag_138\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":4996:5025   */\n      tag_93\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4988:5025   */\n      swap1\n      pop\n        /* \"#utility.yul\":5080:5084   */\n      0x20\n        /* \"#utility.yul\":5074:5078   */\n      dup2\n        /* \"#utility.yul\":5070:5085   */\n      add\n        /* \"#utility.yul\":5062:5085   */\n      swap1\n      pop\n        /* \"#utility.yul\":4851:5092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5196   */\n    tag_87:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5183:5188   */\n      dup2\n        /* \"#utility.yul\":5177:5189   */\n      mload\n        /* \"#utility.yul\":5167:5189   */\n      swap1\n      pop\n        /* \"#utility.yul\":5156:5196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5202:5370   */\n    tag_89:\n        /* \"#utility.yul\":5285:5296   */\n      0x00\n        /* \"#utility.yul\":5319:5325   */\n      dup3\n        /* \"#utility.yul\":5314:5317   */\n      dup3\n        /* \"#utility.yul\":5307:5326   */\n      mstore\n        /* \"#utility.yul\":5359:5363   */\n      0x20\n        /* \"#utility.yul\":5354:5357   */\n      dup3\n        /* \"#utility.yul\":5350:5364   */\n      add\n        /* \"#utility.yul\":5335:5364   */\n      swap1\n      pop\n        /* \"#utility.yul\":5297:5370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5376:5630   */\n    tag_42:\n        /* \"#utility.yul\":5415:5418   */\n      0x00\n        /* \"#utility.yul\":5434:5453   */\n      tag_142\n        /* \"#utility.yul\":5451:5452   */\n      dup3\n        /* \"#utility.yul\":5434:5453   */\n      tag_113\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5429:5453   */\n      swap2\n      pop\n        /* \"#utility.yul\":5467:5486   */\n      tag_143\n        /* \"#utility.yul\":5484:5485   */\n      dup4\n        /* \"#utility.yul\":5467:5486   */\n      tag_113\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5462:5486   */\n      swap3\n      pop\n        /* \"#utility.yul\":5572:5573   */\n      dup3\n        /* \"#utility.yul\":5552:5570   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5548:5574   */\n      sub\n        /* \"#utility.yul\":5545:5546   */\n      dup3\n        /* \"#utility.yul\":5542:5575   */\n      gt\n        /* \"#utility.yul\":5539:5541   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5578:5596   */\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5539:5541   */\n    tag_144:\n        /* \"#utility.yul\":5622:5623   */\n      dup3\n        /* \"#utility.yul\":5619:5620   */\n      dup3\n        /* \"#utility.yul\":5615:5624   */\n      add\n        /* \"#utility.yul\":5608:5624   */\n      swap1\n      pop\n        /* \"#utility.yul\":5419:5630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5636:5725   */\n    tag_147:\n        /* \"#utility.yul\":5672:5679   */\n      0x00\n        /* \"#utility.yul\":5712:5718   */\n      0xffff\n        /* \"#utility.yul\":5705:5710   */\n      dup3\n        /* \"#utility.yul\":5701:5719   */\n      and\n        /* \"#utility.yul\":5690:5719   */\n      swap1\n      pop\n        /* \"#utility.yul\":5680:5725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5731:5808   */\n    tag_109:\n        /* \"#utility.yul\":5768:5775   */\n      0x00\n        /* \"#utility.yul\":5797:5802   */\n      dup2\n        /* \"#utility.yul\":5786:5802   */\n      swap1\n      pop\n        /* \"#utility.yul\":5776:5808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5814:5915   */\n    tag_113:\n        /* \"#utility.yul\":5850:5857   */\n      0x00\n        /* \"#utility.yul\":5890:5908   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5883:5888   */\n      dup3\n        /* \"#utility.yul\":5879:5909   */\n      and\n        /* \"#utility.yul\":5868:5909   */\n      swap1\n      pop\n        /* \"#utility.yul\":5858:5915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5921:6007   */\n    tag_151:\n        /* \"#utility.yul\":5956:5963   */\n      0x00\n        /* \"#utility.yul\":5996:6000   */\n      0xff\n        /* \"#utility.yul\":5989:5994   */\n      dup3\n        /* \"#utility.yul\":5985:6001   */\n      and\n        /* \"#utility.yul\":5974:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:6007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6013:6130   */\n    tag_97:\n        /* \"#utility.yul\":6069:6078   */\n      0x00\n        /* \"#utility.yul\":6102:6124   */\n      tag_154\n        /* \"#utility.yul\":6118:6123   */\n      dup3\n        /* \"#utility.yul\":6102:6124   */\n      tag_151\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6089:6124   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6136:6259   */\n    tag_101:\n        /* \"#utility.yul\":6197:6206   */\n      0x00\n        /* \"#utility.yul\":6230:6253   */\n      tag_156\n        /* \"#utility.yul\":6247:6252   */\n      dup3\n        /* \"#utility.yul\":6230:6253   */\n      tag_147\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":6217:6253   */\n      swap1\n      pop\n        /* \"#utility.yul\":6207:6259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6265:6387   */\n    tag_105:\n        /* \"#utility.yul\":6325:6334   */\n      0x00\n        /* \"#utility.yul\":6358:6381   */\n      tag_158\n        /* \"#utility.yul\":6375:6380   */\n      dup3\n        /* \"#utility.yul\":6358:6381   */\n      tag_147\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":6345:6381   */\n      swap1\n      pop\n        /* \"#utility.yul\":6335:6387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6393:6547   */\n    tag_66:\n        /* \"#utility.yul\":6477:6483   */\n      dup3\n        /* \"#utility.yul\":6472:6475   */\n      dup2\n        /* \"#utility.yul\":6467:6470   */\n      dup4\n        /* \"#utility.yul\":6454:6484   */\n      calldatacopy\n        /* \"#utility.yul\":6539:6540   */\n      0x00\n        /* \"#utility.yul\":6530:6536   */\n      dup4\n        /* \"#utility.yul\":6525:6528   */\n      dup4\n        /* \"#utility.yul\":6521:6537   */\n      add\n        /* \"#utility.yul\":6514:6541   */\n      mstore\n        /* \"#utility.yul\":6444:6547   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6860   */\n    tag_91:\n        /* \"#utility.yul\":6621:6622   */\n      0x00\n        /* \"#utility.yul\":6631:6744   */\n    tag_161:\n        /* \"#utility.yul\":6645:6651   */\n      dup4\n        /* \"#utility.yul\":6642:6643   */\n      dup2\n        /* \"#utility.yul\":6639:6652   */\n      lt\n        /* \"#utility.yul\":6631:6744   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":6730:6731   */\n      dup1\n        /* \"#utility.yul\":6725:6728   */\n      dup3\n        /* \"#utility.yul\":6721:6732   */\n      add\n        /* \"#utility.yul\":6715:6733   */\n      mload\n        /* \"#utility.yul\":6711:6712   */\n      dup2\n        /* \"#utility.yul\":6706:6709   */\n      dup5\n        /* \"#utility.yul\":6702:6713   */\n      add\n        /* \"#utility.yul\":6695:6734   */\n      mstore\n        /* \"#utility.yul\":6667:6669   */\n      0x20\n        /* \"#utility.yul\":6664:6665   */\n      dup2\n        /* \"#utility.yul\":6660:6670   */\n      add\n        /* \"#utility.yul\":6655:6670   */\n      swap1\n      pop\n        /* \"#utility.yul\":6631:6744   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":6762:6768   */\n      dup4\n        /* \"#utility.yul\":6759:6760   */\n      dup2\n        /* \"#utility.yul\":6756:6769   */\n      gt\n        /* \"#utility.yul\":6753:6755   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":6842:6843   */\n      0x00\n        /* \"#utility.yul\":6833:6839   */\n      dup5\n        /* \"#utility.yul\":6828:6831   */\n      dup5\n        /* \"#utility.yul\":6824:6840   */\n      add\n        /* \"#utility.yul\":6817:6844   */\n      mstore\n        /* \"#utility.yul\":6753:6755   */\n    tag_164:\n        /* \"#utility.yul\":6602:6860   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6866:7147   */\n    tag_132:\n        /* \"#utility.yul\":6949:6976   */\n      tag_166\n        /* \"#utility.yul\":6971:6975   */\n      dup3\n        /* \"#utility.yul\":6949:6976   */\n      tag_93\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6941:6947   */\n      dup2\n        /* \"#utility.yul\":6937:6977   */\n      add\n        /* \"#utility.yul\":7079:7085   */\n      dup2\n        /* \"#utility.yul\":7067:7077   */\n      dup2\n        /* \"#utility.yul\":7064:7086   */\n      lt\n        /* \"#utility.yul\":7043:7061   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7031:7041   */\n      dup3\n        /* \"#utility.yul\":7028:7062   */\n      gt\n        /* \"#utility.yul\":7025:7087   */\n      or\n        /* \"#utility.yul\":7022:7024   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":7090:7108   */\n      tag_168\n      tag_137\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":7022:7024   */\n    tag_167:\n        /* \"#utility.yul\":7130:7140   */\n      dup1\n        /* \"#utility.yul\":7126:7128   */\n      0x40\n        /* \"#utility.yul\":7119:7141   */\n      mstore\n        /* \"#utility.yul\":6909:7147   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7153:7333   */\n    tag_146:\n        /* \"#utility.yul\":7201:7278   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7198:7199   */\n      0x00\n        /* \"#utility.yul\":7191:7279   */\n      mstore\n        /* \"#utility.yul\":7298:7302   */\n      0x11\n        /* \"#utility.yul\":7295:7296   */\n      0x04\n        /* \"#utility.yul\":7288:7303   */\n      mstore\n        /* \"#utility.yul\":7322:7326   */\n      0x24\n        /* \"#utility.yul\":7319:7320   */\n      0x00\n        /* \"#utility.yul\":7312:7327   */\n      revert\n        /* \"#utility.yul\":7339:7519   */\n    tag_137:\n        /* \"#utility.yul\":7387:7464   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7384:7385   */\n      0x00\n        /* \"#utility.yul\":7377:7465   */\n      mstore\n        /* \"#utility.yul\":7484:7488   */\n      0x41\n        /* \"#utility.yul\":7481:7482   */\n      0x04\n        /* \"#utility.yul\":7474:7489   */\n      mstore\n        /* \"#utility.yul\":7508:7512   */\n      0x24\n        /* \"#utility.yul\":7505:7506   */\n      0x00\n        /* \"#utility.yul\":7498:7513   */\n      revert\n        /* \"#utility.yul\":7525:7627   */\n    tag_93:\n        /* \"#utility.yul\":7566:7572   */\n      0x00\n        /* \"#utility.yul\":7617:7619   */\n      0x1f\n        /* \"#utility.yul\":7613:7620   */\n      not\n        /* \"#utility.yul\":7608:7610   */\n      0x1f\n        /* \"#utility.yul\":7601:7606   */\n      dup4\n        /* \"#utility.yul\":7597:7611   */\n      add\n        /* \"#utility.yul\":7593:7621   */\n      and\n        /* \"#utility.yul\":7583:7621   */\n      swap1\n      pop\n        /* \"#utility.yul\":7573:7627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7633:7755   */\n    tag_74:\n        /* \"#utility.yul\":7706:7730   */\n      tag_173\n        /* \"#utility.yul\":7724:7729   */\n      dup2\n        /* \"#utility.yul\":7706:7730   */\n      tag_109\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7699:7704   */\n      dup2\n        /* \"#utility.yul\":7696:7731   */\n      eq\n        /* \"#utility.yul\":7686:7688   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":7745:7746   */\n      0x00\n        /* \"#utility.yul\":7742:7743   */\n      dup1\n        /* \"#utility.yul\":7735:7747   */\n      revert\n        /* \"#utility.yul\":7686:7688   */\n    tag_174:\n        /* \"#utility.yul\":7676:7755   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206b29e89bb975de26a765875daf6ac0324da2927cde9f0758b772a097a8168e9a64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610702806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063416bdc521161005b578063416bdc52146100dc5780636097e7a31461010e5780638c492a761461012c5780639711715a1461014a5761007d565b806302a251a31461008257806329dcb0cf146100a05780633932abb1146100be575b600080fd5b61008a610168565b6040516100979190610447565b60405180910390f35b6100a8610172565b6040516100b59190610499565b60405180910390f35b6100c66101a9565b6040516100d39190610447565b60405180910390f35b6100f660048036038101906100f191906102da565b6101b2565b60405161010593929190610462565b60405180910390f35b6101166101de565b60405161012391906103ee565b60405180910390f35b61013461020e565b60405161014191906103ee565b60405180910390f35b61015261023e565b60405161015f9190610499565b60405180910390f35b600061b2fa905090565b60008061017d6101a9565b436101889190610526565b90506000610194610168565b8261019f9190610526565b9050809250505090565b60006001905090565b6000806000838060200190518101906101cb919061031b565b8093508194508295505050509193909250565b6060600161b2ec6113886040516020016101fa93929190610410565b604051602081830303815290604052905090565b6060600161b2ec61138860405160200161022a93929190610410565b604051602081830303815290604052905090565b6000806102496101a9565b436102549190610526565b90508091505090565b600061027061026b846104d9565b6104b4565b90508281526020810184848401111561028857600080fd5b6102938482856105d3565b509392505050565b600082601f8301126102ac57600080fd5b81356102bc84826020860161025d565b91505092915050565b6000815190506102d4816106b5565b92915050565b6000602082840312156102ec57600080fd5b600082013567ffffffffffffffff81111561030657600080fd5b6103128482850161029b565b91505092915050565b60008060006060848603121561033057600080fd5b600061033e868287016102c5565b935050602061034f868287016102c5565b9250506040610360868287016102c5565b9150509250925092565b60006103758261050a565b61037f8185610515565b935061038f8185602086016105e2565b610398816106a4565b840191505092915050565b6103ac8161059d565b82525050565b6103bb816105af565b82525050565b6103ca816105c1565b82525050565b6103d981610572565b82525050565b6103e88161057c565b82525050565b60006020820190508181036000830152610408818461036a565b905092915050565b600060608201905061042560008301866103a3565b61043260208301856103b2565b61043f60408301846103c1565b949350505050565b600060208201905061045c60008301846103d0565b92915050565b600060608201905061047760008301866103d0565b61048460208301856103d0565b61049160408301846103d0565b949350505050565b60006020820190506104ae60008301846103df565b92915050565b60006104be6104cf565b90506104ca8282610615565b919050565b6000604051905090565b600067ffffffffffffffff8211156104f4576104f3610675565b5b6104fd826106a4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006105318261057c565b915061053c8361057c565b92508267ffffffffffffffff0382111561055957610558610646565b5b828201905092915050565b600061ffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b60006105a882610590565b9050919050565b60006105ba82610564565b9050919050565b60006105cc82610564565b9050919050565b82818337600083830152505050565b60005b838110156106005780820151818401526020810190506105e5565b8381111561060f576000848401525b50505050565b61061e826106a4565b810181811067ffffffffffffffff8211171561063d5761063c610675565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6106be81610572565b81146106c957600080fd5b5056fea26469706673582212206b29e89bb975de26a765875daf6ac0324da2927cde9f0758b772a097a8168e9a64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x702 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x416BDC52 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x416BDC52 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x6097E7A3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x8C492A76 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x14A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17D PUSH2 0x1A9 JUMP JUMPDEST NUMBER PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x194 PUSH2 0x168 JUMP JUMPDEST DUP3 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0xB2EC PUSH2 0x1388 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0xB2EC PUSH2 0x1388 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x249 PUSH2 0x1A9 JUMP JUMPDEST NUMBER PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270 PUSH2 0x26B DUP5 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x293 DUP5 DUP3 DUP6 PUSH2 0x5D3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D4 DUP2 PUSH2 0x6B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x312 DUP5 DUP3 DUP6 ADD PUSH2 0x29B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP7 DUP3 DUP8 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x34F DUP7 DUP3 DUP8 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x360 DUP7 DUP3 DUP8 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x375 DUP3 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x37F DUP2 DUP6 PUSH2 0x515 JUMP JUMPDEST SWAP4 POP PUSH2 0x38F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x59D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3BB DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D9 DUP2 PUSH2 0x572 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0x57C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x408 DUP2 DUP5 PUSH2 0x36A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x425 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x432 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x43F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x477 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x484 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x491 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BE PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP PUSH2 0x4CA DUP3 DUP3 PUSH2 0x615 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F4 JUMPI PUSH2 0x4F3 PUSH2 0x675 JUMP JUMPDEST JUMPDEST PUSH2 0x4FD DUP3 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP3 PUSH2 0x57C JUMP JUMPDEST SWAP2 POP PUSH2 0x53C DUP4 PUSH2 0x57C JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x646 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 DUP3 PUSH2 0x590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP3 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP3 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x600 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5E5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x61E DUP3 PUSH2 0x6A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x675 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BE DUP2 PUSH2 0x572 JUMP JUMPDEST DUP2 EQ PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x29E89BB975DE26A765875DAF PUSH11 0xC0324DA2927CDE9F0758B7 PUSH19 0xA097A8168E9A64736F6C634300080400330000 ",
							"sourceMap": "170:1139:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7758:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:260:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "287:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "290:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "280:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:2"
															},
															"nodeType": "YulIf",
															"src": "249:2:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "327:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "332:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "337:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "303:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "303:41:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:2",
														"type": ""
													}
												],
												"src": "7:343:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "430:210:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "479:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "488:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "491:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "481:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "481:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "481:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "458:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "466:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "473:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:35:2"
															},
															"nodeType": "YulIf",
															"src": "440:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "504:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "518:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:20:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "508:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "547:87:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "607:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "615:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "603:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "603:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "622:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "630:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "556:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:78:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "547:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "408:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "416:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "424:5:2",
														"type": ""
													}
												],
												"src": "369:271:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "734:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "728:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "719:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "777:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "750:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "687:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "695:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "703:5:2",
														"type": ""
													}
												],
												"src": "646:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "870:298:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "916:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "925:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "928:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "918:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "918:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "918:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "891:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "900:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "887:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "887:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "912:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:32:2"
															},
															"nodeType": "YulIf",
															"src": "880:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "942:219:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "957:45:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "988:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "999:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "984:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "984:17:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "971:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:31:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "961:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1049:16:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1058:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1061:1:2",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:12:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1051:12:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1021:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1029:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1018:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "1015:2:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1079:72:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1123:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1134:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1119:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1119:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1143:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1089:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1089:62:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1079:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "840:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "851:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "863:6:2",
														"type": ""
													}
												],
												"src": "795:373:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1285:485:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1331:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1340:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1343:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1333:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1333:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1333:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1306:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1302:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1302:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1327:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1298:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:32:2"
															},
															"nodeType": "YulIf",
															"src": "1295:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1357:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1401:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1447:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1458:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1443:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1443:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1467:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1411:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1411:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1401:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1495:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1510:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1514:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1540:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1586:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1597:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1582:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1606:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1550:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1540:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1634:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1649:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1653:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1679:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1725:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1736:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1721:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1721:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1745:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1689:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1679:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1239:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1250:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1262:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1270:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1278:6:2",
														"type": ""
													}
												],
												"src": "1174:596:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1866:270:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1876:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1922:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1890:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1880:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1937:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2002:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1944:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1937:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2049:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2056:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2045:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2063:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2068:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2023:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2023:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2084:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2095:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2122:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2100:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2100:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2091:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2084:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1847:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1854:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1862:3:2",
														"type": ""
													}
												],
												"src": "1776:360:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2213:72:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2230:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2272:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2235:36:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2235:43:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2223:56:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2201:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2208:3:2",
														"type": ""
													}
												],
												"src": "2142:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2367:77:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2384:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2431:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_45804_by_1_to_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "2389:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2389:48:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2377:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2377:61:2"
														}
													]
												},
												"name": "abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2362:3:2",
														"type": ""
													}
												],
												"src": "2291:153:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2525:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2588:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_5000_by_1_to_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "2547:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:47:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:60:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2535:60:2"
														}
													]
												},
												"name": "abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2513:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2520:3:2",
														"type": ""
													}
												],
												"src": "2450:151:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2672:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2689:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2712:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2694:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2694:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2682:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2660:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2667:3:2",
														"type": ""
													}
												],
												"src": "2607:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2794:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2833:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "2816:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2816:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2804:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2804:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2782:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2789:3:2",
														"type": ""
													}
												],
												"src": "2731:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:193:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2978:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2990:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2986:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2978:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3025:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3036:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3044:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3050:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3070:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3140:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3149:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3078:61:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3070:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2940:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2952:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2963:4:2",
														"type": ""
													}
												],
												"src": "2852:309:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3348:315:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3358:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3394:49:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:77:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3536:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3481:54:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:83:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:83:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3628:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3641:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3652:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3574:53:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:82:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3574:82:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1_t_rational_45804_by_1_t_rational_5000_by_1__to_t_uint8_t_uint16_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3304:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3316:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3324:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3332:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3343:4:2",
														"type": ""
													}
												],
												"src": "3167:496:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3767:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3777:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3789:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3800:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3785:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3777:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3857:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3813:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3813:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3739:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3751:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3762:4:2",
														"type": ""
													}
												],
												"src": "3669:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4051:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4061:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4073:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4069:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4061:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4141:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4154:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4165:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4150:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4150:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4097:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4222:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4235:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4246:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4231:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4178:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4178:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4304:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4260:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4007:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4019:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4027:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4035:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4046:4:2",
														"type": ""
													}
												],
												"src": "3897:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4441:122:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4451:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4463:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4474:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4459:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4459:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4451:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4529:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4542:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4553:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4538:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4538:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4487:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:69:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4413:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4425:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4436:4:2",
														"type": ""
													}
												],
												"src": "4345:218:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4610:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4620:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4630:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4679:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4687:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4659:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4659:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4594:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4603:6:2",
														"type": ""
													}
												],
												"src": "4569:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4744:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4754:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4764:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4737:6:2",
														"type": ""
													}
												],
												"src": "4704:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4851:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4956:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4958:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4958:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4958:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4928:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4936:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4925:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:30:2"
															},
															"nodeType": "YulIf",
															"src": "4922:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5018:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4996:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5062:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5074:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5080:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5070:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5062:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4835:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4846:4:2",
														"type": ""
													}
												],
												"src": "4785:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5156:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5167:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5183:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5177:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5177:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5139:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5149:6:2",
														"type": ""
													}
												],
												"src": "5098:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5297:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5319:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5307:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5307:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5335:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5354:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5359:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5350:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5350:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5335:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5269:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5274:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5285:11:2",
														"type": ""
													}
												],
												"src": "5202:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5419:211:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5429:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5451:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "5434:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:19:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5429:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5462:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5484:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "5467:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5467:19:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5462:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5576:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5578:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5578:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5578:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5545:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5552:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5572:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5548:26:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5542:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:33:2"
															},
															"nodeType": "YulIf",
															"src": "5539:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5608:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5619:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5622:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5608:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5406:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5409:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5415:3:2",
														"type": ""
													}
												],
												"src": "5376:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5680:45:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5690:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5705:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5712:6:2",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5701:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5701:18:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5690:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5662:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5672:7:2",
														"type": ""
													}
												],
												"src": "5636:89:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5776:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5786:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5797:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5786:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5758:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5768:7:2",
														"type": ""
													}
												],
												"src": "5731:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5858:57:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5868:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5883:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5890:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5879:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5879:30:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5868:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5840:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5850:7:2",
														"type": ""
													}
												],
												"src": "5814:101:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5964:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5974:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5989:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5996:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5985:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5985:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5974:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5946:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5956:7:2",
														"type": ""
													}
												],
												"src": "5921:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6079:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6089:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6118:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "6102:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6102:22:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6089:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6059:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6069:9:2",
														"type": ""
													}
												],
												"src": "6013:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6207:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6217:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6247:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "6230:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:23:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6217:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_45804_by_1_to_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6187:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6197:9:2",
														"type": ""
													}
												],
												"src": "6136:123:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6335:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6345:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6375:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "6358:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:23:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6345:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_5000_by_1_to_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6315:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6325:9:2",
														"type": ""
													}
												],
												"src": "6265:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6444:103:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6467:3:2"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6472:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6477:6:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6454:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6454:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6454:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6525:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6530:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6521:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6521:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:27:2"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6426:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6431:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6436:6:2",
														"type": ""
													}
												],
												"src": "6393:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6602:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6612:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6621:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6616:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6681:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6706:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6711:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6702:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6702:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6725:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6730:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6721:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6721:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6715:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6715:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6695:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6695:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6695:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6642:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6645:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6639:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6653:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6655:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6664:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6667:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6660:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6660:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6655:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6635:3:2",
																"statements": []
															},
															"src": "6631:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6778:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6828:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6833:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6824:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6824:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6842:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6817:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6817:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6817:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6759:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6762:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6756:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6756:13:2"
															},
															"nodeType": "YulIf",
															"src": "6753:2:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6584:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6589:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6594:6:2",
														"type": ""
													}
												],
												"src": "6553:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6909:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6919:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6941:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6971:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6949:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6949:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6937:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6937:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6923:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7088:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7090:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7090:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7090:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7031:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7043:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7028:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7028:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7067:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7079:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7064:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7064:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7025:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7025:62:2"
															},
															"nodeType": "YulIf",
															"src": "7022:2:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7126:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7130:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7119:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7119:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6895:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6903:4:2",
														"type": ""
													}
												],
												"src": "6866:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7181:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7198:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7201:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7191:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7191:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7191:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7295:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7298:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7288:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7288:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7288:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7319:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7322:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7312:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7312:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7153:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7367:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7387:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7377:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7377:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7481:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7484:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7505:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7508:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7498:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7339:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7573:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7583:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7601:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7608:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7597:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7617:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7613:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7613:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7593:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7593:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7583:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7556:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7566:6:2",
														"type": ""
													}
												],
												"src": "7525:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7676:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7733:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7742:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7745:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7735:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7735:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7735:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7699:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7724:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7706:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7706:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7696:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7696:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7689:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:43:2"
															},
															"nodeType": "YulIf",
															"src": "7686:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7669:5:2",
														"type": ""
													}
												],
												"src": "7633:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_45804_by_1_to_t_uint16(value))\n    }\n\n    function abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_5000_by_1_to_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1_t_rational_45804_by_1_t_rational_5000_by_1__to_t_uint8_t_uint16_t_uint16__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(value)\n    }\n\n    function convert_t_rational_45804_by_1_to_t_uint16(value) -> converted {\n        converted := cleanup_t_uint16(value)\n    }\n\n    function convert_t_rational_5000_by_1_to_t_uint16(value) -> converted {\n        converted := cleanup_t_uint16(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063416bdc521161005b578063416bdc52146100dc5780636097e7a31461010e5780638c492a761461012c5780639711715a1461014a5761007d565b806302a251a31461008257806329dcb0cf146100a05780633932abb1146100be575b600080fd5b61008a610168565b6040516100979190610447565b60405180910390f35b6100a8610172565b6040516100b59190610499565b60405180910390f35b6100c66101a9565b6040516100d39190610447565b60405180910390f35b6100f660048036038101906100f191906102da565b6101b2565b60405161010593929190610462565b60405180910390f35b6101166101de565b60405161012391906103ee565b60405180910390f35b61013461020e565b60405161014191906103ee565b60405180910390f35b61015261023e565b60405161015f9190610499565b60405180910390f35b600061b2fa905090565b60008061017d6101a9565b436101889190610526565b90506000610194610168565b8261019f9190610526565b9050809250505090565b60006001905090565b6000806000838060200190518101906101cb919061031b565b8093508194508295505050509193909250565b6060600161b2ec6113886040516020016101fa93929190610410565b604051602081830303815290604052905090565b6060600161b2ec61138860405160200161022a93929190610410565b604051602081830303815290604052905090565b6000806102496101a9565b436102549190610526565b90508091505090565b600061027061026b846104d9565b6104b4565b90508281526020810184848401111561028857600080fd5b6102938482856105d3565b509392505050565b600082601f8301126102ac57600080fd5b81356102bc84826020860161025d565b91505092915050565b6000815190506102d4816106b5565b92915050565b6000602082840312156102ec57600080fd5b600082013567ffffffffffffffff81111561030657600080fd5b6103128482850161029b565b91505092915050565b60008060006060848603121561033057600080fd5b600061033e868287016102c5565b935050602061034f868287016102c5565b9250506040610360868287016102c5565b9150509250925092565b60006103758261050a565b61037f8185610515565b935061038f8185602086016105e2565b610398816106a4565b840191505092915050565b6103ac8161059d565b82525050565b6103bb816105af565b82525050565b6103ca816105c1565b82525050565b6103d981610572565b82525050565b6103e88161057c565b82525050565b60006020820190508181036000830152610408818461036a565b905092915050565b600060608201905061042560008301866103a3565b61043260208301856103b2565b61043f60408301846103c1565b949350505050565b600060208201905061045c60008301846103d0565b92915050565b600060608201905061047760008301866103d0565b61048460208301856103d0565b61049160408301846103d0565b949350505050565b60006020820190506104ae60008301846103df565b92915050565b60006104be6104cf565b90506104ca8282610615565b919050565b6000604051905090565b600067ffffffffffffffff8211156104f4576104f3610675565b5b6104fd826106a4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006105318261057c565b915061053c8361057c565b92508267ffffffffffffffff0382111561055957610558610646565b5b828201905092915050565b600061ffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b60006105a882610590565b9050919050565b60006105ba82610564565b9050919050565b60006105cc82610564565b9050919050565b82818337600083830152505050565b60005b838110156106005780820151818401526020810190506105e5565b8381111561060f576000848401525b50505050565b61061e826106a4565b810181811067ffffffffffffffff8211171561063d5761063c610675565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6106be81610572565b81146106c957600080fd5b5056fea26469706673582212206b29e89bb975de26a765875daf6ac0324da2927cde9f0758b772a097a8168e9a64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x416BDC52 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x416BDC52 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x6097E7A3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x8C492A76 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x14A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17D PUSH2 0x1A9 JUMP JUMPDEST NUMBER PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x194 PUSH2 0x168 JUMP JUMPDEST DUP3 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0xB2EC PUSH2 0x1388 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0xB2EC PUSH2 0x1388 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x249 PUSH2 0x1A9 JUMP JUMPDEST NUMBER PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270 PUSH2 0x26B DUP5 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x293 DUP5 DUP3 DUP6 PUSH2 0x5D3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D4 DUP2 PUSH2 0x6B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x312 DUP5 DUP3 DUP6 ADD PUSH2 0x29B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP7 DUP3 DUP8 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x34F DUP7 DUP3 DUP8 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x360 DUP7 DUP3 DUP8 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x375 DUP3 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x37F DUP2 DUP6 PUSH2 0x515 JUMP JUMPDEST SWAP4 POP PUSH2 0x38F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x59D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3BB DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D9 DUP2 PUSH2 0x572 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0x57C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x408 DUP2 DUP5 PUSH2 0x36A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x425 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x432 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x43F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x477 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x484 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x491 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BE PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP PUSH2 0x4CA DUP3 DUP3 PUSH2 0x615 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F4 JUMPI PUSH2 0x4F3 PUSH2 0x675 JUMP JUMPDEST JUMPDEST PUSH2 0x4FD DUP3 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP3 PUSH2 0x57C JUMP JUMPDEST SWAP2 POP PUSH2 0x53C DUP4 PUSH2 0x57C JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x646 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 DUP3 PUSH2 0x590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP3 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP3 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x600 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5E5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x61E DUP3 PUSH2 0x6A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x675 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BE DUP2 PUSH2 0x572 JUMP JUMPDEST DUP2 EQ PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x29E89BB975DE26A765875DAF PUSH11 0xC0324DA2927CDE9F0758B7 PUSH19 0xA097A8168E9A64736F6C634300080400330000 ",
							"sourceMap": "170:1139:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1093:214;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;754:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;565:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;462:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;192:264;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;934:153;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;837:91;881:7;907:5;900:12;;837:91;:::o;1093:214::-;1133:6;1151:15;1199:13;:11;:13::i;:::-;1176:12;1169:44;;;;:::i;:::-;1151:62;;1223:15;1259:14;:12;:14::i;:::-;1241:8;:33;;;;:::i;:::-;1223:51;;1292:8;1285:15;;;;1093:214;:::o;754:77::-;797:7;823:1;816:8;;754:77;:::o;565:182::-;618:10;630:12;644:10;703:4;692:36;;;;;;;;;;;;:::i;:::-;666:62;;;;;;;;;;;;565:182;;;;;:::o;462:98::-;498:12;540:1;542:5;548:4;529:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;522:31;;462:98;:::o;192:264::-;232:12;436:1;438:5;444:4;425:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;417:32;;192:264;:::o;934:153::-;974:6;992:15;1040:13;:11;:13::i;:::-;1017:12;1010:44;;;;:::i;:::-;992:62;;1072:8;1065:15;;;934:153;:::o;7:343:2:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;369:271::-;424:5;473:3;466:4;458:6;454:17;450:27;440:2;;491:1;488;481:12;440:2;531:6;518:20;556:78;630:3;622:6;615:4;607:6;603:17;556:78;:::i;:::-;547:87;;430:210;;;;;:::o;646:143::-;703:5;734:6;728:13;719:22;;750:33;777:5;750:33;:::i;:::-;709:80;;;;:::o;795:373::-;863:6;912:2;900:9;891:7;887:23;883:32;880:2;;;928:1;925;918:12;880:2;999:1;988:9;984:17;971:31;1029:18;1021:6;1018:30;1015:2;;;1061:1;1058;1051:12;1015:2;1089:62;1143:7;1134:6;1123:9;1119:22;1089:62;:::i;:::-;1079:72;;942:219;870:298;;;;:::o;1174:596::-;1262:6;1270;1278;1327:2;1315:9;1306:7;1302:23;1298:32;1295:2;;;1343:1;1340;1333:12;1295:2;1386:1;1411:64;1467:7;1458:6;1447:9;1443:22;1411:64;:::i;:::-;1401:74;;1357:128;1524:2;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1495:129;1663:2;1689:64;1745:7;1736:6;1725:9;1721:22;1689:64;:::i;:::-;1679:74;;1634:129;1285:485;;;;;:::o;1776:360::-;1862:3;1890:38;1922:5;1890:38;:::i;:::-;1944:70;2007:6;2002:3;1944:70;:::i;:::-;1937:77;;2023:52;2068:6;2063:3;2056:4;2049:5;2045:16;2023:52;:::i;:::-;2100:29;2122:6;2100:29;:::i;:::-;2095:3;2091:39;2084:46;;1866:270;;;;;:::o;2142:143::-;2235:43;2272:5;2235:43;:::i;:::-;2230:3;2223:56;2213:72;;:::o;2291:153::-;2389:48;2431:5;2389:48;:::i;:::-;2384:3;2377:61;2367:77;;:::o;2450:151::-;2547:47;2588:5;2547:47;:::i;:::-;2542:3;2535:60;2525:76;;:::o;2607:118::-;2694:24;2712:5;2694:24;:::i;:::-;2689:3;2682:37;2672:53;;:::o;2731:115::-;2816:23;2833:5;2816:23;:::i;:::-;2811:3;2804:36;2794:52;;:::o;2852:309::-;2963:4;3001:2;2990:9;2986:18;2978:26;;3050:9;3044:4;3040:20;3036:1;3025:9;3021:17;3014:47;3078:76;3149:4;3140:6;3078:76;:::i;:::-;3070:84;;2968:193;;;;:::o;3167:496::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3394:77;3468:1;3457:9;3453:17;3444:6;3394:77;:::i;:::-;3481:83;3560:2;3549:9;3545:18;3536:6;3481:83;:::i;:::-;3574:82;3652:2;3641:9;3637:18;3628:6;3574:82;:::i;:::-;3348:315;;;;;;:::o;3669:222::-;3762:4;3800:2;3789:9;3785:18;3777:26;;3813:71;3881:1;3870:9;3866:17;3857:6;3813:71;:::i;:::-;3767:124;;;;:::o;3897:442::-;4046:4;4084:2;4073:9;4069:18;4061:26;;4097:71;4165:1;4154:9;4150:17;4141:6;4097:71;:::i;:::-;4178:72;4246:2;4235:9;4231:18;4222:6;4178:72;:::i;:::-;4260;4328:2;4317:9;4313:18;4304:6;4260:72;:::i;:::-;4051:288;;;;;;:::o;4345:218::-;4436:4;4474:2;4463:9;4459:18;4451:26;;4487:69;4553:1;4542:9;4538:17;4529:6;4487:69;:::i;:::-;4441:122;;;;:::o;4569:129::-;4603:6;4630:20;;:::i;:::-;4620:30;;4659:33;4687:4;4679:6;4659:33;:::i;:::-;4610:88;;;:::o;4704:75::-;4737:6;4770:2;4764:9;4754:19;;4744:35;:::o;4785:307::-;4846:4;4936:18;4928:6;4925:30;4922:2;;;4958:18;;:::i;:::-;4922:2;4996:29;5018:6;4996:29;:::i;:::-;4988:37;;5080:4;5074;5070:15;5062:23;;4851:241;;;:::o;5098:98::-;5149:6;5183:5;5177:12;5167:22;;5156:40;;;:::o;5202:168::-;5285:11;5319:6;5314:3;5307:19;5359:4;5354:3;5350:14;5335:29;;5297:73;;;;:::o;5376:254::-;5415:3;5434:19;5451:1;5434:19;:::i;:::-;5429:24;;5467:19;5484:1;5467:19;:::i;:::-;5462:24;;5572:1;5552:18;5548:26;5545:1;5542:33;5539:2;;;5578:18;;:::i;:::-;5539:2;5622:1;5619;5615:9;5608:16;;5419:211;;;;:::o;5636:89::-;5672:7;5712:6;5705:5;5701:18;5690:29;;5680:45;;;:::o;5731:77::-;5768:7;5797:5;5786:16;;5776:32;;;:::o;5814:101::-;5850:7;5890:18;5883:5;5879:30;5868:41;;5858:57;;;:::o;5921:86::-;5956:7;5996:4;5989:5;5985:16;5974:27;;5964:43;;;:::o;6013:117::-;6069:9;6102:22;6118:5;6102:22;:::i;:::-;6089:35;;6079:51;;;:::o;6136:123::-;6197:9;6230:23;6247:5;6230:23;:::i;:::-;6217:36;;6207:52;;;:::o;6265:122::-;6325:9;6358:23;6375:5;6358:23;:::i;:::-;6345:36;;6335:52;;;:::o;6393:154::-;6477:6;6472:3;6467;6454:30;6539:1;6530:6;6525:3;6521:16;6514:27;6444:103;;;:::o;6553:307::-;6621:1;6631:113;6645:6;6642:1;6639:13;6631:113;;;6730:1;6725:3;6721:11;6715:18;6711:1;6706:3;6702:11;6695:39;6667:2;6664:1;6660:10;6655:15;;6631:113;;;6762:6;6759:1;6756:13;6753:2;;;6842:1;6833:6;6828:3;6824:16;6817:27;6753:2;6602:258;;;;:::o;6866:281::-;6949:27;6971:4;6949:27;:::i;:::-;6941:6;6937:40;7079:6;7067:10;7064:22;7043:18;7031:10;7028:34;7025:62;7022:2;;;7090:18;;:::i;:::-;7022:2;7130:10;7126:2;7119:22;6909:238;;;:::o;7153:180::-;7201:77;7198:1;7191:88;7298:4;7295:1;7288:15;7322:4;7319:1;7312:15;7339:180;7387:77;7384:1;7377:88;7484:4;7481:1;7474:15;7508:4;7505:1;7498:15;7525:102;7566:6;7617:2;7613:7;7608:2;7601:5;7597:14;7593:28;7583:38;;7573:54;;;:::o;7633:122::-;7706:24;7724:5;7706:24;:::i;:::-;7699:5;7696:35;7686:2;;7745:1;7742;7735:12;7686:2;7676:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "358800",
								"executionCost": "399",
								"totalCost": "359199"
							},
							"external": {
								"abiDecode(bytes)": "infinite",
								"abiEncode()": "infinite",
								"deadline()": "infinite",
								"keccak256test()": "infinite",
								"snapshot()": "infinite",
								"votingDelay()": "382",
								"votingPeriod()": "338"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1309,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b29e89bb975de26a765875daf6ac0324da2927cde9f0758b772a097a8168e9a64736f6c63430008040033",
									".code": [
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "416BDC52"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "416BDC52"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "6097E7A3"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "8C492A76"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "9711715A"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "2A251A3"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "29DCB0CF"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "3932ABB1"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1309,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 837,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 881,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA"
										},
										{
											"begin": 900,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 900,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 928,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1188,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1169,
											"end": 1213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1169,
											"end": 1213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1213,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1169,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 1274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1241,
											"end": 1274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1274,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1307,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 797,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 816,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 816,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 618,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 692,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 692,
											"end": 728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 692,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 462,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 542,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "B2EC"
										},
										{
											"begin": 548,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "1388"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 560,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 192,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 436,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 443,
											"name": "PUSH",
											"source": 0,
											"value": "B2EC"
										},
										{
											"begin": 444,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "1388"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 456,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 974,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1010,
											"end": 1054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1010,
											"end": 1054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1054,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1010,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1087,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 350,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 7,
											"end": 350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 249,
											"end": 251,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 249,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 292,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 249,
											"end": 251,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 337,
											"end": 343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 332,
											"end": 335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 327,
											"end": 330,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 350,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 369,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 424,
											"end": 429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 466,
											"end": 470,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 450,
											"end": 477,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 440,
											"end": 442,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 481,
											"end": 493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 440,
											"end": 442,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 440,
											"end": 442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 518,
											"end": 538,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 622,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 603,
											"end": 620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 556,
											"end": 634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 634,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 556,
											"end": 634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 547,
											"end": 634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 547,
											"end": 634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 640,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 430,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 789,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 646,
											"end": 789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 703,
											"end": 708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 719,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 741,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 789,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 709,
											"end": 789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 709,
											"end": 789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 709,
											"end": 789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 709,
											"end": 789,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 795,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 795,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 863,
											"end": 869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 900,
											"end": 909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 891,
											"end": 898,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 887,
											"end": 910,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 883,
											"end": 915,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 928,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 926,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 918,
											"end": 930,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 997,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1063,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1143,
											"end": 1150,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1140,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1141,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1089,
											"end": 1151,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1151,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1089,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 1161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 870,
											"end": 1168,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 870,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 870,
											"end": 1168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 870,
											"end": 1168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 870,
											"end": 1168,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1174,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1174,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1306,
											"end": 1313,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1467,
											"end": 1474,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1456,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1411,
											"end": 1475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1411,
											"end": 1475,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1411,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1475,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1745,
											"end": 1752,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1689,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1689,
											"end": 1753,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1689,
											"end": 1753,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1689,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1770,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1770,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1770,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1776,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1776,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1944,
											"end": 2014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 2014,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1944,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2014,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2023,
											"end": 2075,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2023,
											"end": 2075,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2023,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2136,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2136,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2142,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2142,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2272,
											"end": 2277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2235,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2291,
											"end": 2444,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2291,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2431,
											"end": 2436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2387,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2444,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2450,
											"end": 2601,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2450,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2547,
											"end": 2594,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2594,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2547,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2607,
											"end": 2725,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2607,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2731,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2731,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2846,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2852,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2852,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3060,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3036,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3034,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3149,
											"end": 3153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3078,
											"end": 3154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3154,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3078,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3070,
											"end": 3154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3070,
											"end": 3154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3161,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3161,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3167,
											"end": 3663,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3167,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3394,
											"end": 3471,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3394,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3394,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3542,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3481,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3652,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3574,
											"end": 3656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3656,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3574,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3663,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3663,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3663,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3669,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3669,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3802,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3863,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3813,
											"end": 3884,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3813,
											"end": 3884,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3813,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3891,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3897,
											"end": 4339,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3897,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4069,
											"end": 4087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4097,
											"end": 4168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4097,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4097,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4235,
											"end": 4244,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4178,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4304,
											"end": 4310,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4339,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4339,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4339,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4345,
											"end": 4563,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4345,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4487,
											"end": 4556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4487,
											"end": 4556,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4487,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4563,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4563,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4569,
											"end": 4698,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4569,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4687,
											"end": 4691,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4698,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4704,
											"end": 4779,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4704,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4764,
											"end": 4773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4785,
											"end": 5092,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4785,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4928,
											"end": 4934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4996,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4996,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4996,
											"end": 5025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4996,
											"end": 5025,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4996,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4988,
											"end": 5025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4988,
											"end": 5025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5080,
											"end": 5084,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5074,
											"end": 5078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5070,
											"end": 5085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 5092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 5092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 5092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 5092,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5098,
											"end": 5196,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5098,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5177,
											"end": 5189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5167,
											"end": 5189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5167,
											"end": 5189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5156,
											"end": 5196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5156,
											"end": 5196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5156,
											"end": 5196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5156,
											"end": 5196,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5202,
											"end": 5370,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5202,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5307,
											"end": 5326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5350,
											"end": 5364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5370,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5370,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5376,
											"end": 5630,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5376,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5467,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5467,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5467,
											"end": 5486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5467,
											"end": 5486,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5467,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5570,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5548,
											"end": 5574,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 5575,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5636,
											"end": 5725,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5636,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5672,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5718,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 5705,
											"end": 5710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5690,
											"end": 5719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5690,
											"end": 5719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5725,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5731,
											"end": 5808,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5731,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5786,
											"end": 5802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5786,
											"end": 5802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5808,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5814,
											"end": 5915,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5814,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5850,
											"end": 5857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5908,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5883,
											"end": 5888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 5909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 5909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5915,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5921,
											"end": 6007,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5921,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6000,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5989,
											"end": 5994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5985,
											"end": 6001,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5974,
											"end": 6001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 6007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 6007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 6007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 6007,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6013,
											"end": 6130,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6013,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6118,
											"end": 6123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6102,
											"end": 6124,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6124,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6102,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6089,
											"end": 6124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6089,
											"end": 6124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6079,
											"end": 6130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6079,
											"end": 6130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6079,
											"end": 6130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6079,
											"end": 6130,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6136,
											"end": 6259,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6136,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6247,
											"end": 6252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6230,
											"end": 6253,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6230,
											"end": 6253,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6230,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6207,
											"end": 6259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6207,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6207,
											"end": 6259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6207,
											"end": 6259,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6265,
											"end": 6387,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6265,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6375,
											"end": 6380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6358,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6358,
											"end": 6381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6358,
											"end": 6381,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6358,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6387,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6393,
											"end": 6547,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 6393,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6472,
											"end": 6475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6470,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6454,
											"end": 6484,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6525,
											"end": 6528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6541,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6547,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6553,
											"end": 6860,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6553,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6621,
											"end": 6622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6652,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6725,
											"end": 6728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6706,
											"end": 6709,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6702,
											"end": 6713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6667,
											"end": 6669,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6670,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6631,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6762,
											"end": 6768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6756,
											"end": 6769,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 6755,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 6753,
											"end": 6755,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6842,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6828,
											"end": 6831,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 6755,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 6753,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6860,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6866,
											"end": 7147,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6866,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6971,
											"end": 6975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6949,
											"end": 6976,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6949,
											"end": 6976,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6949,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 6977,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7067,
											"end": 7077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7086,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7043,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7031,
											"end": 7041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7028,
											"end": 7062,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7087,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7130,
											"end": 7140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7126,
											"end": 7128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6909,
											"end": 7147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6909,
											"end": 7147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6909,
											"end": 7147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6909,
											"end": 7147,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7153,
											"end": 7333,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7153,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7278,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7198,
											"end": 7199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7288,
											"end": 7303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7322,
											"end": 7326,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7319,
											"end": 7320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7519,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7339,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7387,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7384,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7481,
											"end": 7482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7474,
											"end": 7489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7525,
											"end": 7627,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 7525,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7608,
											"end": 7610,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7601,
											"end": 7606,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7597,
											"end": 7611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7593,
											"end": 7621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7627,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7633,
											"end": 7755,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7633,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7724,
											"end": 7729,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7696,
											"end": 7731,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7745,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 7747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7676,
											"end": 7755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7676,
											"end": 7755,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"abiDecode(bytes)": "416bdc52",
							"abiEncode()": "6097e7a3",
							"deadline()": "29dcb0cf",
							"keccak256test()": "8c492a76",
							"snapshot()": "9711715a",
							"votingDelay()": "3932abb1",
							"votingPeriod()": "02a251a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"abiDecode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_str1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_str2\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"abiEncode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keccak256test\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".workspaces/default_workspace/unMiracle/test.sol\":\"test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".workspaces/default_workspace/unMiracle/test.sol\":{\"keccak256\":\"0xafb88a542ed22c10f1bbae56b891f1e5834f6b4561e9fb8e6ebcb65ee30dc1e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4222d076e89f0d1c9c565e084c0fbd90940d4108f78eabc88905a6f88ec28660\",\"dweb:/ipfs/QmYftUcRTUGUDVDDrYG61pKxGAjvUJWbYSshBFt9MZsijk\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
									".code": [
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:35:9:\n   |\n35 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:34:5:\n   |\n34 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1087,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 934
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1007,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 992
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:41:9:\n   |\n41 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:34:5:\n   |\n34 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1087,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 934
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1166,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 1151
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:42:9:\n   |\n42 |         uint64 deadline = snapshot + uint64(votingPeriod());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:40:5:\n   |\n40 |     function deadline() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1307,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 1093
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1238,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 1223
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> .workspaces/default_workspace/unMiracle/test.sol:10:5:\n   |\n10 |     function keccak256test() public returns(bytes memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 456,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 192
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> .workspaces/default_workspace/unMiracle/test.sol:18:5:\n   |\n18 |     function abiEncode() public returns(bytes memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 560,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 462
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> .workspaces/default_workspace/unMiracle/test.sol:21:5:\n   |\n21 |     function abiDecode(bytes memory data) public returns(uint _str1, uint _number, uint _str2) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 747,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 565
				},
				"type": "Warning"
			}
		],
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"ast": {
					"absolutePath": ".workspaces/default_workspace/unMiracle/test.sol",
					"exportedSymbols": {
						"SafeCast": [
							521
						],
						"test": [
							128
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 129,
							"sourceUnit": 522,
							"src": "111:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "test",
							"nameLocation": "179:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "246:210:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "436:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "3435383034",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "438:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45804_by_1",
																"typeString": "int_const 45804"
															},
															"value": "45804"
														},
														{
															"hexValue": "35303030",
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_45804_by_1",
																"typeString": "int_const 45804"
															},
															{
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															}
														],
														"expression": {
															"id": 7,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "425:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "425:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 6,
												"id": 13,
												"nodeType": "Return",
												"src": "417:32:0"
											}
										]
									},
									"functionSelector": "8c492a76",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak256test",
									"nameLocation": "201:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "232:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:14:0"
									},
									"scope": 128,
									"src": "192:264:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "512:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "540:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "3435383034",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45804_by_1",
																"typeString": "int_const 45804"
															},
															"value": "45804"
														},
														{
															"hexValue": "35303030",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "548:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_45804_by_1",
																"typeString": "int_const 45804"
															},
															{
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															}
														],
														"expression": {
															"id": 20,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "529:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "529:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "529:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 19,
												"id": 26,
												"nodeType": "Return",
												"src": "522:31:0"
											}
										]
									},
									"functionSelector": "6097e7a3",
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abiEncode",
									"nameLocation": "471:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "498:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 17,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:14:0"
									},
									"scope": 128,
									"src": "462:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "656:91:0",
										"statements": [
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 39,
																"name": "_str1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "667:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 40,
																"name": "_number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "674:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 41,
																"name": "_str2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "683:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 42,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "666:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 45,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "703:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 47,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "710:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 46,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "710:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "716:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 48,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "716:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 51,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "722:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 50,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "722:4:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 52,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "709:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
																	"typeString": "tuple(type(uint256),type(uint256),type(uint256))"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
																	"typeString": "tuple(type(uint256),type(uint256),type(uint256))"
																}
															],
															"expression": {
																"id": 43,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "692:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "692:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "692:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"src": "666:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "666:62:0"
											}
										]
									},
									"functionSelector": "416bdc52",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abiDecode",
									"nameLocation": "574:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "597:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "584:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 29,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:19:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_str1",
												"nameLocation": "623:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "635:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "630:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "630:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_str2",
												"nameLocation": "649:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "644:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "644:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:38:0"
									},
									"scope": 128,
									"src": "565:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "806:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "823:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 61,
												"id": 63,
												"nodeType": "Return",
												"src": "816:8:0"
											}
										]
									},
									"functionSelector": "3932abb1",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingDelay",
									"nameLocation": "763:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:9:0"
									},
									"scope": 128,
									"src": "754:77:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "890:38:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3435383138",
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45818_by_1",
														"typeString": "int_const 45818"
													},
													"value": "45818"
												},
												"functionReturnParameters": 69,
												"id": 71,
												"nodeType": "Return",
												"src": "900:12:0"
											}
										]
									},
									"functionSelector": "02a251a3",
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingPeriod",
									"nameLocation": "846:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:9:0"
									},
									"scope": 128,
									"src": "837:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "982:105:0",
										"statements": [
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "999:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "992:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 78,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "992:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 82,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1017:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "1017:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1010:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 80,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1010:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1010:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 87,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1040:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1040:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1033:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 85,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1033:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1033:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1010:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "992:62:0"
											},
											{
												"expression": {
													"id": 92,
													"name": "snapshot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 79,
													"src": "1072:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 77,
												"id": 93,
												"nodeType": "Return",
												"src": "1065:15:0"
											}
										]
									},
									"functionSelector": "9711715a",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "snapshot",
									"nameLocation": "943:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "974:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 75,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:8:0"
									},
									"scope": 128,
									"src": "934:153:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1141:166:0",
										"statements": [
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "1158:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 126,
														"src": "1151:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 100,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 104,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "1176:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 102,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1169:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1169:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 109,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1199:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1199:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 107,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1192:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1192:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1169:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1151:62:0"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "deadline",
														"nameLocation": "1230:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 126,
														"src": "1223:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 114,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1223:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 116,
														"name": "snapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1241:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 119,
																	"name": "votingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1259:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 117,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1252:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1252:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1241:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1223:51:0"
											},
											{
												"expression": {
													"id": 124,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 115,
													"src": "1292:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 99,
												"id": 125,
												"nodeType": "Return",
												"src": "1285:15:0"
											}
										]
									},
									"functionSelector": "29dcb0cf",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deadline",
									"nameLocation": "1102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1133:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 97,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1133:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:8:0"
									},
									"scope": 128,
									"src": "1093:214:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 129,
							"src": "170:1139:0",
							"usedErrors": []
						}
					],
					"src": "32:1277:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							521
						]
					},
					"id": 522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "117:709:1",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
							},
							"fullyImplemented": true,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "SafeCast",
							"nameLocation": "835:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "1201:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "1219:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1233:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 142,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "1233:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			}
																		],
																		"id": 141,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1228:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1228:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint224",
																		"typeString": "type(uint224)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1228:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															},
															"src": "1219:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1247:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															},
															"value": "SafeCast: value doesn't fit in 224 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1211:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1314:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1306:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 150,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "1306:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 138,
												"id": 154,
												"nodeType": "Return",
												"src": "1299:21:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "850:280:1",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "1144:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1162:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1154:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:15:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1192:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 136,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:9:1"
									},
									"scope": 521,
									"src": "1135:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1684:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 165,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "1702:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1716:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 167,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "1716:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			}
																		],
																		"id": 166,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1711:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1711:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint128",
																		"typeString": "type(uint128)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1711:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1702:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1730:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1694:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1694:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1797:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1789:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 175,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1789:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 163,
												"id": 179,
												"nodeType": "Return",
												"src": "1782:21:1"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "1333:280:1",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "1627:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1645:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1637:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1675:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 161,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:9:1"
									},
									"scope": 521,
									"src": "1618:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2161:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 190,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "2179:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2193:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			},
																			"typeName": {
																				"id": 192,
																				"name": "uint96",
																				"nodeType": "ElementaryTypeName",
																				"src": "2193:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			}
																		],
																		"id": 191,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2188:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2188:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint96",
																		"typeString": "type(uint96)"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2188:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "2179:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2206:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															},
															"value": "SafeCast: value doesn't fit in 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2171:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "2171:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2271:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2264:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 200,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2264:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 188,
												"id": 204,
												"nodeType": "Return",
												"src": "2257:20:1"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1816:276:1",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "2106:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2123:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2115:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:15:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2153:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 186,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2153:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:8:1"
									},
									"scope": 521,
									"src": "2097:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2635:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "2653:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2667:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 217,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "2667:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			}
																		],
																		"id": 216,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2662:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2662:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint64",
																		"typeString": "type(uint64)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2662:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "2653:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2680:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2645:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2745:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2738:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 225,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "2738:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 213,
												"id": 229,
												"nodeType": "Return",
												"src": "2731:20:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2290:276:1",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "2580:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2597:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2589:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:15:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2627:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 211,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2627:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:8:1"
									},
									"scope": 521,
									"src": "2571:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3109:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "3127:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3141:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 242,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3141:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			}
																		],
																		"id": 241,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3136:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3136:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint32",
																		"typeString": "type(uint32)"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3136:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "3127:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3154:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3119:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3119:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3119:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 252,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "3219:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3212:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 250,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3212:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 238,
												"id": 254,
												"nodeType": "Return",
												"src": "3205:20:1"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2764:276:1",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "3054:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3071:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3063:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:15:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3101:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 236,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3101:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:8:1"
									},
									"scope": 521,
									"src": "3045:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3583:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 265,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "3601:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3615:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 267,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "3615:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			}
																		],
																		"id": 266,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3610:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3610:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint16",
																		"typeString": "type(uint16)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3610:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "3601:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3628:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "3593:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3693:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3686:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 275,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3686:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3686:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 263,
												"id": 279,
												"nodeType": "Return",
												"src": "3679:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "3238:276:1",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "3528:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3545:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3537:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:15:1"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3575:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 261,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3575:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:8:1"
									},
									"scope": 521,
									"src": "3519:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "4052:120:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "4070:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4084:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 292,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "4084:5:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		],
																		"id": 291,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4079:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4079:11:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint8",
																		"typeString": "type(uint8)"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "4079:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4070:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4096:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "4062:74:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4159:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4153:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 300,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4153:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 288,
												"id": 304,
												"nodeType": "Return",
												"src": "4146:19:1"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "3712:273:1",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "3999:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:15:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4045:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 286,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4045:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:7:1"
									},
									"scope": 521,
									"src": "3990:182:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4408:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 315,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "4426:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4435:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4426:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c7565206d75737420626520706f736974697665",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4438:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															},
															"value": "SafeCast: value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4418:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4418:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "4418:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4498:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4490:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4490:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4490:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 325,
												"nodeType": "Return",
												"src": "4483:21:1"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "4178:160:1",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "4352:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4369:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4362:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 308,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:14:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4399:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:9:1"
									},
									"scope": 521,
									"src": "4343:168:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "4935:153:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 336,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "4953:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4967:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 338,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4967:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 337,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4962:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4962:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "4962:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4953:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 343,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "4982:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 345,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4996:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 344,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4991:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4991:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "4991:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4982:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4953:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5009:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4945:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4945:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "4945:106:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5068:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 354,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "5068:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5068:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 334,
												"id": 358,
												"nodeType": "Return",
												"src": "5061:20:1"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4517:350:1",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "4881:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4897:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4890:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 329,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4890:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:14:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4927:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 332,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4927:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4926:8:1"
									},
									"scope": 521,
									"src": "4872:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "5505:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "5523:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5537:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 371,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5537:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 370,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5532:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5532:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "5532:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5523:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 376,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "5551:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5565:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 378,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5565:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 377,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5560:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5560:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5560:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5551:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5523:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5577:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "5515:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 389,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "5641:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5635:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int64_$",
															"typeString": "type(int64)"
														},
														"typeName": {
															"id": 387,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "5635:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5635:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 367,
												"id": 391,
												"nodeType": "Return",
												"src": "5628:19:1"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "5094:345:1",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "5453:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5461:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 362,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5461:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:14:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5498:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 365,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "5498:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:7:1"
									},
									"scope": 521,
									"src": "5444:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "6071:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "6089:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 404,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6103:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 403,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6098:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6098:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6089:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "6117:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6131:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 411,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6131:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 410,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6126:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6126:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6126:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6117:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6089:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6143:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6081:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "6081:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6207:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6201:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int32_$",
															"typeString": "type(int32)"
														},
														"typeName": {
															"id": 420,
															"name": "int32",
															"nodeType": "ElementaryTypeName",
															"src": "6201:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"functionReturnParameters": 400,
												"id": 424,
												"nodeType": "Return",
												"src": "6194:19:1"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "5660:345:1",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "6019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6034:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6027:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 395,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6027:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:14:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6064:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 398,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "6064:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6063:7:1"
									},
									"scope": 521,
									"src": "6010:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "6637:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 435,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "6655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6669:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 437,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6669:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 436,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6664:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6664:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6664:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6655:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "6683:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6697:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 444,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6697:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 443,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6692:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6692:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6692:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6683:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6655:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6709:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6647:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6647:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "6647:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "6773:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6767:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int16_$",
															"typeString": "type(int16)"
														},
														"typeName": {
															"id": 453,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "6767:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6767:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"functionReturnParameters": 433,
												"id": 457,
												"nodeType": "Return",
												"src": "6760:19:1"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "6226:345:1",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "6585:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6600:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "6593:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 428,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:14:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "6630:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 431,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "6630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6629:7:1"
									},
									"scope": 521,
									"src": "6576:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "7197:145:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "7215:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7229:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 470,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7229:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 469,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7224:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7224:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "7224:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7215:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 475,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "7242:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7256:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 477,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7256:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 476,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7251:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7251:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7251:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7242:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7215:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7267:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7207:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "7207:100:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7329:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7324:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 486,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "7324:4:1",
															"typeDescriptions": {}
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7324:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"functionReturnParameters": 466,
												"id": 490,
												"nodeType": "Return",
												"src": "7317:18:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "6792:341:1",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "7147:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7161:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7154:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 461,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7154:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:14:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7191:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 464,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "7191:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7190:6:1"
									},
									"scope": 521,
									"src": "7138:204:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "7582:233:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "7699:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7721:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 505,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7721:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					}
																				],
																				"id": 504,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "7716:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7716:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_int256",
																				"typeString": "type(int256)"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "7716:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7708:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 502,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7708:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7708:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7699:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7735:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															},
															"value": "SafeCast: value doesn't fit in an int256"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7691:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7691:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "7691:87:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "7802:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7795:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 514,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7795:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 499,
												"id": 518,
												"nodeType": "Return",
												"src": "7788:20:1"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "7348:165:1",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "7527:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7544:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "7536:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:15:1"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "7574:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 497,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7574:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:8:1"
									},
									"scope": 521,
									"src": "7518:297:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 522,
							"src": "827:6990:1",
							"usedErrors": []
						}
					],
					"src": "92:7726:1"
				},
				"id": 1
			}
		}
	}
}