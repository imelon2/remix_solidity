{
	"id": "1799068325bc4bf7105330320c802ac7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// import \"@openzeppelin/contracts/utils/Timers.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\ncontract test {\n\n    function votingDelay() public pure returns(uint256) {\n        return 1;\n    }\n\n    function votingPeriod() public pure returns(uint256) {\n        return 45818; // 1week\n    }\n\n    function snapshot() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n\n        return snapshot;\n    }\n\n    function deadline() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n        uint64 deadline = snapshot + uint64(votingPeriod());\n\n        return deadline;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"test": {
					"abi": [
						{
							"inputs": [],
							"name": "deadline",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".workspaces/default_workspace/unMiracle/test.sol\":170:746  contract test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":170:746  contract test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02a251a3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29dcb0cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3932abb1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9711715a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":274:365  function votingPeriod() public pure returns(uint256) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":530:744  function deadline() public view returns(uint64) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":191:268  function votingDelay() public pure returns(uint256) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":371:524  function snapshot() public view returns(uint64) {... */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":274:365  function votingPeriod() public pure returns(uint256) {... */\n    tag_8:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":318:325  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":344:349  45818 */\n      0xb2fa\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":337:349  return 45818 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":274:365  function votingPeriod() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":530:744  function deadline() public view returns(uint64) {... */\n    tag_12:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":570:576  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":588:603  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":636:649  votingDelay() */\n      tag_23\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":636:647  votingDelay */\n      tag_16\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":636:649  votingDelay() */\n      jump\t// in\n    tag_23:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":613:625  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":606:650  uint64(block.number) + uint64(votingDelay()) */\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":588:650  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":660:675  uint64 deadline */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":696:710  votingPeriod() */\n      tag_26\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":696:708  votingPeriod */\n      tag_8\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":696:710  votingPeriod() */\n      jump\t// in\n    tag_26:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":678:686  snapshot */\n      dup3\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":678:711  snapshot + uint64(votingPeriod()) */\n      tag_27\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_27:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":660:711  uint64 deadline = snapshot + uint64(votingPeriod()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":729:737  deadline */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":722:737  return deadline */\n      swap3\n      pop\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":530:744  function deadline() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":191:268  function votingDelay() public pure returns(uint256) {... */\n    tag_16:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":234:241  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":260:261  1 */\n      0x01\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":253:261  return 1 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":191:268  function votingDelay() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":371:524  function snapshot() public view returns(uint64) {... */\n    tag_19:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":411:417  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":429:444  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":477:490  votingDelay() */\n      tag_30\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":477:488  votingDelay */\n      tag_16\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":477:490  votingDelay() */\n      jump\t// in\n    tag_30:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":454:466  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":447:491  uint64(block.number) + uint64(votingDelay()) */\n      tag_31\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":429:491  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":509:517  snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":502:517  return snapshot */\n      swap2\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":371:524  function snapshot() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_33:\n        /* \"#utility.yul\":94:118   */\n      tag_35\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:246   */\n    tag_37:\n        /* \"#utility.yul\":216:239   */\n      tag_39\n        /* \"#utility.yul\":233:238   */\n      dup2\n        /* \"#utility.yul\":216:239   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":211:214   */\n      dup3\n        /* \"#utility.yul\":204:240   */\n      mstore\n        /* \"#utility.yul\":194:246   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":252:474   */\n    tag_10:\n        /* \"#utility.yul\":345:349   */\n      0x00\n        /* \"#utility.yul\":383:385   */\n      0x20\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":368:386   */\n      add\n        /* \"#utility.yul\":360:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":396:467   */\n      tag_42\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":453:462   */\n      dup4\n        /* \"#utility.yul\":449:466   */\n      add\n        /* \"#utility.yul\":440:446   */\n      dup5\n        /* \"#utility.yul\":396:467   */\n      tag_33\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":350:474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":480:698   */\n    tag_14:\n        /* \"#utility.yul\":571:575   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":598:607   */\n      dup3\n        /* \"#utility.yul\":594:612   */\n      add\n        /* \"#utility.yul\":586:612   */\n      swap1\n      pop\n        /* \"#utility.yul\":622:691   */\n      tag_44\n        /* \"#utility.yul\":688:689   */\n      0x00\n        /* \"#utility.yul\":677:686   */\n      dup4\n        /* \"#utility.yul\":673:690   */\n      add\n        /* \"#utility.yul\":664:670   */\n      dup5\n        /* \"#utility.yul\":622:691   */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":576:698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":704:958   */\n    tag_25:\n        /* \"#utility.yul\":743:746   */\n      0x00\n        /* \"#utility.yul\":762:781   */\n      tag_46\n        /* \"#utility.yul\":779:780   */\n      dup3\n        /* \"#utility.yul\":762:781   */\n      tag_40\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":757:781   */\n      swap2\n      pop\n        /* \"#utility.yul\":795:814   */\n      tag_47\n        /* \"#utility.yul\":812:813   */\n      dup4\n        /* \"#utility.yul\":795:814   */\n      tag_40\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":790:814   */\n      swap3\n      pop\n        /* \"#utility.yul\":900:901   */\n      dup3\n        /* \"#utility.yul\":880:898   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":876:902   */\n      sub\n        /* \"#utility.yul\":873:874   */\n      dup3\n        /* \"#utility.yul\":870:903   */\n      gt\n        /* \"#utility.yul\":867:869   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":906:924   */\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":867:869   */\n    tag_48:\n        /* \"#utility.yul\":950:951   */\n      dup3\n        /* \"#utility.yul\":947:948   */\n      dup3\n        /* \"#utility.yul\":943:952   */\n      add\n        /* \"#utility.yul\":936:952   */\n      swap1\n      pop\n        /* \"#utility.yul\":747:958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":964:1041   */\n    tag_36:\n        /* \"#utility.yul\":1001:1008   */\n      0x00\n        /* \"#utility.yul\":1030:1035   */\n      dup2\n        /* \"#utility.yul\":1019:1035   */\n      swap1\n      pop\n        /* \"#utility.yul\":1009:1041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1148   */\n    tag_40:\n        /* \"#utility.yul\":1083:1090   */\n      0x00\n        /* \"#utility.yul\":1123:1141   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1116:1121   */\n      dup3\n        /* \"#utility.yul\":1112:1142   */\n      and\n        /* \"#utility.yul\":1101:1142   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1154:1334   */\n    tag_50:\n        /* \"#utility.yul\":1202:1279   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1199:1200   */\n      0x00\n        /* \"#utility.yul\":1192:1280   */\n      mstore\n        /* \"#utility.yul\":1299:1303   */\n      0x11\n        /* \"#utility.yul\":1296:1297   */\n      0x04\n        /* \"#utility.yul\":1289:1304   */\n      mstore\n        /* \"#utility.yul\":1323:1327   */\n      0x24\n        /* \"#utility.yul\":1320:1321   */\n      0x00\n        /* \"#utility.yul\":1313:1328   */\n      revert\n\n    auxdata: 0xa26469706673582212200f0c02a2a3fd65aa9be2b73af66c35f9d9da7f55406b16b048757bd061008ec064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610247806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806302a251a31461005157806329dcb0cf1461006f5780633932abb11461008d5780639711715a146100ab575b600080fd5b6100596100c9565b6040516100669190610150565b60405180910390f35b6100776100d3565b604051610084919061016b565b60405180910390f35b61009561010a565b6040516100a29190610150565b60405180910390f35b6100b3610113565b6040516100c0919061016b565b60405180910390f35b600061b2fa905090565b6000806100de61010a565b436100e99190610186565b905060006100f56100c9565b826101009190610186565b9050809250505090565b60006001905090565b60008061011e61010a565b436101299190610186565b90508091505090565b61013b816101c4565b82525050565b61014a816101ce565b82525050565b60006020820190506101656000830184610132565b92915050565b60006020820190506101806000830184610141565b92915050565b6000610191826101ce565b915061019c836101ce565b92508267ffffffffffffffff038211156101b9576101b86101e2565b5b828201905092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212200f0c02a2a3fd65aa9be2b73af66c35f9d9da7f55406b16b048757bd061008ec064736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDE PUSH2 0x10A JUMP JUMPDEST NUMBER PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF5 PUSH2 0xC9 JUMP JUMPDEST DUP3 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11E PUSH2 0x10A JUMP JUMPDEST NUMBER PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13B DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191 DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP2 POP PUSH2 0x19C DUP4 PUSH2 0x1CE JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x1E2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xC MUL LOG2 LOG3 REVERT PUSH6 0xAA9BE2B73AF6 PUSH13 0x35F9D9DA7F55406B16B048757B 0xD0 PUSH2 0x8E 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "170:576:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1337:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:2",
														"type": ""
													}
												],
												"src": "7:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "194:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "211:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "233:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "216:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "216:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "204:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "204:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "182:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "189:3:2",
														"type": ""
													}
												],
												"src": "131:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "350:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "360:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "383:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "368:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "360:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "440:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "453:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "464:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "449:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "449:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "396:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "396:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "396:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "322:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "334:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "345:4:2",
														"type": ""
													}
												],
												"src": "252:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "576:122:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "586:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "609:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "594:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "586:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "664:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "677:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "688:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "673:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "673:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "622:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:69:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "548:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "560:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "571:4:2",
														"type": ""
													}
												],
												"src": "480:218:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "747:211:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "757:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "779:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "762:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:19:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "757:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "790:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "812:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "795:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:19:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "790:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "904:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "906:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "906:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "906:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "873:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "880:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "900:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "876:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "876:26:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "870:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:33:2"
															},
															"nodeType": "YulIf",
															"src": "867:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "936:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "947:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "950:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "734:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "737:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "743:3:2",
														"type": ""
													}
												],
												"src": "704:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1009:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1019:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1030:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1019:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "991:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1001:7:2",
														"type": ""
													}
												],
												"src": "964:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:57:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1101:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1116:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1123:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1112:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1112:30:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1101:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1073:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1083:7:2",
														"type": ""
													}
												],
												"src": "1047:101:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1182:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1199:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1202:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1192:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1192:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1296:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1299:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1289:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1289:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1320:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1313:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1154:180:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806302a251a31461005157806329dcb0cf1461006f5780633932abb11461008d5780639711715a146100ab575b600080fd5b6100596100c9565b6040516100669190610150565b60405180910390f35b6100776100d3565b604051610084919061016b565b60405180910390f35b61009561010a565b6040516100a29190610150565b60405180910390f35b6100b3610113565b6040516100c0919061016b565b60405180910390f35b600061b2fa905090565b6000806100de61010a565b436100e99190610186565b905060006100f56100c9565b826101009190610186565b9050809250505090565b60006001905090565b60008061011e61010a565b436101299190610186565b90508091505090565b61013b816101c4565b82525050565b61014a816101ce565b82525050565b60006020820190506101656000830184610132565b92915050565b60006020820190506101806000830184610141565b92915050565b6000610191826101ce565b915061019c836101ce565b92508267ffffffffffffffff038211156101b9576101b86101e2565b5b828201905092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212200f0c02a2a3fd65aa9be2b73af66c35f9d9da7f55406b16b048757bd061008ec064736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDE PUSH2 0x10A JUMP JUMPDEST NUMBER PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF5 PUSH2 0xC9 JUMP JUMPDEST DUP3 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11E PUSH2 0x10A JUMP JUMPDEST NUMBER PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13B DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191 DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP2 POP PUSH2 0x19C DUP4 PUSH2 0x1CE JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x1E2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xC MUL LOG2 LOG3 REVERT PUSH6 0xAA9BE2B73AF6 PUSH13 0x35F9D9DA7F55406B16B048757B 0xD0 PUSH2 0x8E 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "170:576:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;530:214;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;191:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;371:153;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;274:91;318:7;344:5;337:12;;274:91;:::o;530:214::-;570:6;588:15;636:13;:11;:13::i;:::-;613:12;606:44;;;;:::i;:::-;588:62;;660:15;696:14;:12;:14::i;:::-;678:8;:33;;;;:::i;:::-;660:51;;729:8;722:15;;;;530:214;:::o;191:77::-;234:7;260:1;253:8;;191:77;:::o;371:153::-;411:6;429:15;477:13;:11;:13::i;:::-;454:12;447:44;;;;:::i;:::-;429:62;;509:8;502:15;;;371:153;:::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:115::-;216:23;233:5;216:23;:::i;:::-;211:3;204:36;194:52;;:::o;252:222::-;345:4;383:2;372:9;368:18;360:26;;396:71;464:1;453:9;449:17;440:6;396:71;:::i;:::-;350:124;;;;:::o;480:218::-;571:4;609:2;598:9;594:18;586:26;;622:69;688:1;677:9;673:17;664:6;622:69;:::i;:::-;576:122;;;;:::o;704:254::-;743:3;762:19;779:1;762:19;:::i;:::-;757:24;;795:19;812:1;795:19;:::i;:::-;790:24;;900:1;880:18;876:26;873:1;870:33;867:2;;;906:18;;:::i;:::-;867:2;950:1;947;943:9;936:16;;747:211;;;;:::o;964:77::-;1001:7;1030:5;1019:16;;1009:32;;;:::o;1047:101::-;1083:7;1123:18;1116:5;1112:30;1101:41;;1091:57;;;:::o;1154:180::-;1202:77;1199:1;1192:88;1299:4;1296:1;1289:15;1323:4;1320:1;1313:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "116600",
								"executionCost": "165",
								"totalCost": "116765"
							},
							"external": {
								"deadline()": "infinite",
								"snapshot()": "infinite",
								"votingDelay()": "359",
								"votingPeriod()": "315"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 170,
									"end": 746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 746,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f0c02a2a3fd65aa9be2b73af66c35f9d9da7f55406b16b048757bd061008ec064736f6c63430008040033",
									".code": [
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "2A251A3"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "29DCB0CF"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "3932ABB1"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "9711715A"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 746,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 274,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA"
										},
										{
											"begin": 337,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 365,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 530,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 636,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 636,
											"end": 649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 636,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 625,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 606,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 606,
											"end": 650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 606,
											"end": 650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 606,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 696,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 696,
											"end": 710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 696,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 696,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 660,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 722,
											"end": 737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 722,
											"end": 737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 191,
											"end": 268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 234,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 253,
											"end": 261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 268,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 411,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 477,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 477,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 477,
											"end": 490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 477,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 466,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 447,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 447,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 447,
											"end": 491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 429,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 502,
											"end": 517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 524,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 246,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 131,
											"end": 246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 233,
											"end": 238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 216,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 216,
											"end": 239,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 216,
											"end": 239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 214,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 204,
											"end": 240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 194,
											"end": 246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 194,
											"end": 246,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 252,
											"end": 474,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 345,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 368,
											"end": 386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 360,
											"end": 386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 360,
											"end": 386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 449,
											"end": 466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 396,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 396,
											"end": 467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 467,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 396,
											"end": 467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 350,
											"end": 474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 350,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 474,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 480,
											"end": 698,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 480,
											"end": 698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 571,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 607,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 594,
											"end": 612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 688,
											"end": 689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 622,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 622,
											"end": 691,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 691,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 622,
											"end": 691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 576,
											"end": 698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 576,
											"end": 698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 576,
											"end": 698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 576,
											"end": 698,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 958,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 704,
											"end": 958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 743,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 762,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 757,
											"end": 781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 757,
											"end": 781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 814,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 795,
											"end": 814,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 795,
											"end": 814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 814,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 790,
											"end": 814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 900,
											"end": 901,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 880,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 876,
											"end": 902,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 873,
											"end": 874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 870,
											"end": 903,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 867,
											"end": 869,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 867,
											"end": 869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 906,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 906,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 906,
											"end": 924,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 924,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 906,
											"end": 924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 867,
											"end": 869,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 867,
											"end": 869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 950,
											"end": 951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 943,
											"end": 952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 936,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 958,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 747,
											"end": 958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 958,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 964,
											"end": 1041,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 964,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1148,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1148,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1154,
											"end": 1334,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1154,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1199,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1280,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1304,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1320,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deadline()": "29dcb0cf",
							"snapshot()": "9711715a",
							"votingDelay()": "3932abb1",
							"votingPeriod()": "02a251a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".workspaces/default_workspace/unMiracle/test.sol\":\"test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".workspaces/default_workspace/unMiracle/test.sol\":{\"keccak256\":\"0x49a3e554ea1676915a7dcfd883b163c07953d997bef55c99b4b9d089301a0ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://022ceb65acd3bad4fa9e25d5986fc8cb11e3715d00cd43a47554cbb328b2c99f\",\"dweb:/ipfs/QmSpKsKhyNvHga1B8DNadWSA6Spwh7hYir4ixZgvB1CrQF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
									".code": [
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:18:9:\n   |\n18 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:17:5:\n   |\n17 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 524,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 371
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 444,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 429
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:24:9:\n   |\n24 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:17:5:\n   |\n17 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 524,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 371
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 603,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 588
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:25:9:\n   |\n25 |         uint64 deadline = snapshot + uint64(votingPeriod());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:23:5:\n   |\n23 |     function deadline() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 744,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 530
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 675,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 660
				},
				"type": "Warning"
			}
		],
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"ast": {
					"absolutePath": ".workspaces/default_workspace/unMiracle/test.sol",
					"exportedSymbols": {
						"SafeCast": [
							466
						],
						"test": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 74,
							"sourceUnit": 467,
							"src": "111:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "test",
							"nameLocation": "179:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "243:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "260:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 6,
												"id": 8,
												"nodeType": "Return",
												"src": "253:8:0"
											}
										]
									},
									"functionSelector": "3932abb1",
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingDelay",
									"nameLocation": "200:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "234:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:9:0"
									},
									"scope": 73,
									"src": "191:77:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "327:38:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3435383138",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45818_by_1",
														"typeString": "int_const 45818"
													},
													"value": "45818"
												},
												"functionReturnParameters": 14,
												"id": 16,
												"nodeType": "Return",
												"src": "337:12:0"
											}
										]
									},
									"functionSelector": "02a251a3",
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingPeriod",
									"nameLocation": "283:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "318:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:9:0"
									},
									"scope": 73,
									"src": "274:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "419:105:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "436:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 39,
														"src": "429:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 23,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "429:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 27,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "454:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "454:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "447:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 25,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "447:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "447:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 32,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "477:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "477:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 30,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "470:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "470:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "447:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "429:62:0"
											},
											{
												"expression": {
													"id": 37,
													"name": "snapshot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "509:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 22,
												"id": 38,
												"nodeType": "Return",
												"src": "502:15:0"
											}
										]
									},
									"functionSelector": "9711715a",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "snapshot",
									"nameLocation": "380:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "411:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 20,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "411:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:8:0"
									},
									"scope": 73,
									"src": "371:153:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "578:166:0",
										"statements": [
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "595:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "588:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 45,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 49,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "613:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "613:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 47,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "606:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "606:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "636:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "636:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 52,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "629:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "629:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "606:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "588:62:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "deadline",
														"nameLocation": "667:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "660:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 59,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "snapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "678:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 64,
																	"name": "votingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "696:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "696:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "689:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 62,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "689:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "689:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "678:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "660:51:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 60,
													"src": "729:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 44,
												"id": 70,
												"nodeType": "Return",
												"src": "722:15:0"
											}
										]
									},
									"functionSelector": "29dcb0cf",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deadline",
									"nameLocation": "539:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "547:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "570:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 42,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "570:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:8:0"
									},
									"scope": 73,
									"src": "530:214:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 74,
							"src": "170:576:0",
							"usedErrors": []
						}
					],
					"src": "32:714:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 75,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 76,
								"nodeType": "StructuredDocumentation",
								"src": "117:709:1",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
							},
							"fullyImplemented": true,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "SafeCast",
							"nameLocation": "835:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1201:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 85,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1219:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 88,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1233:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 87,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "1233:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			}
																		],
																		"id": 86,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1228:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1228:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint224",
																		"typeString": "type(uint224)"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1228:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															},
															"src": "1219:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1247:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															},
															"value": "SafeCast: value doesn't fit in 224 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1211:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 97,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1314:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1306:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 95,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "1306:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 83,
												"id": 99,
												"nodeType": "Return",
												"src": "1299:21:1"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "850:280:1",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "1144:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1162:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1154:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:15:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1192:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 81,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:9:1"
									},
									"scope": 466,
									"src": "1135:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1684:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 110,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1702:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1716:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 112,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "1716:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			}
																		],
																		"id": 111,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1711:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1711:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint128",
																		"typeString": "type(uint128)"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1711:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1702:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1730:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1694:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1694:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1797:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1789:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 120,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1789:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 108,
												"id": 124,
												"nodeType": "Return",
												"src": "1782:21:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1333:280:1",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "1627:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1645:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1637:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1675:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 106,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:9:1"
									},
									"scope": 466,
									"src": "1618:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2161:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2179:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2193:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			},
																			"typeName": {
																				"id": 137,
																				"name": "uint96",
																				"nodeType": "ElementaryTypeName",
																				"src": "2193:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			}
																		],
																		"id": 136,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2188:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2188:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint96",
																		"typeString": "type(uint96)"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2188:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "2179:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2206:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															},
															"value": "SafeCast: value doesn't fit in 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2171:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2171:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 147,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2271:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2264:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 145,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2264:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 133,
												"id": 149,
												"nodeType": "Return",
												"src": "2257:20:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1816:276:1",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "2106:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2123:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2115:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:15:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2153:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 131,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2153:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:8:1"
									},
									"scope": 466,
									"src": "2097:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "2635:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 160,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "2653:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2667:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 162,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "2667:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			}
																		],
																		"id": 161,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2662:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2662:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint64",
																		"typeString": "type(uint64)"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2662:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "2653:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2680:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2645:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2745:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2738:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 170,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "2738:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 158,
												"id": 174,
												"nodeType": "Return",
												"src": "2731:20:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "2290:276:1",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "2580:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2597:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2589:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:15:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2627:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 156,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2627:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:8:1"
									},
									"scope": 466,
									"src": "2571:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "3109:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 185,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "3127:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3141:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 187,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3141:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			}
																		],
																		"id": 186,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3136:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3136:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint32",
																		"typeString": "type(uint32)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3136:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "3127:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3154:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3119:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3119:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3119:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3219:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3212:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 195,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3212:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 183,
												"id": 199,
												"nodeType": "Return",
												"src": "3205:20:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "2764:276:1",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "3054:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3071:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3063:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:15:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3101:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 181,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3101:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:8:1"
									},
									"scope": 466,
									"src": "3045:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "3583:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 210,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "3601:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3615:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 212,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "3615:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			}
																		],
																		"id": 211,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3610:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3610:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint16",
																		"typeString": "type(uint16)"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3610:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "3601:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3628:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3593:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3693:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3686:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 220,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3686:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3686:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 208,
												"id": 224,
												"nodeType": "Return",
												"src": "3679:20:1"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "3238:276:1",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "3528:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3545:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3537:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:15:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3575:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 206,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3575:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:8:1"
									},
									"scope": 466,
									"src": "3519:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "4052:120:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "4070:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4084:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 237,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "4084:5:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		],
																		"id": 236,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4079:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4079:11:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint8",
																		"typeString": "type(uint8)"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "4079:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4070:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4096:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "4062:74:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 247,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "4159:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4153:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 245,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4153:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 233,
												"id": 249,
												"nodeType": "Return",
												"src": "4146:19:1"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3712:273:1",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "3999:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:15:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4045:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 231,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4045:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:7:1"
									},
									"scope": 466,
									"src": "3990:182:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "4408:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 260,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "4426:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4435:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4426:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c7565206d75737420626520706f736974697665",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4438:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															},
															"value": "SafeCast: value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4418:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4418:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "4418:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 268,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4498:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4490:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4490:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4490:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 270,
												"nodeType": "Return",
												"src": "4483:21:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "4178:160:1",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "4352:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4369:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "4362:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 253,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:14:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "4399:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:9:1"
									},
									"scope": 466,
									"src": "4343:168:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "4935:153:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 281,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "4953:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4967:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 283,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4967:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 282,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4962:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4962:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "4962:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4953:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 288,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "4982:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 290,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4996:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 289,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4991:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4991:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "4991:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4982:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4953:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5009:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4945:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4945:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4945:106:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "5075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5068:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 299,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "5068:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5068:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 279,
												"id": 303,
												"nodeType": "Return",
												"src": "5061:20:1"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "4517:350:1",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "4881:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4897:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4890:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 274,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4890:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:14:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4927:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 277,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4927:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4926:8:1"
									},
									"scope": 466,
									"src": "4872:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5505:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5523:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5537:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 316,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5537:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 315,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5532:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5532:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "5532:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5523:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5551:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5565:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 323,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5565:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 322,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5560:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5560:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5560:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5551:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5523:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5577:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "5515:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 334,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "5641:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5635:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int64_$",
															"typeString": "type(int64)"
														},
														"typeName": {
															"id": 332,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "5635:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5635:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 312,
												"id": 336,
												"nodeType": "Return",
												"src": "5628:19:1"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5094:345:1",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "5453:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5461:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 307,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5461:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:14:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5498:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 310,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "5498:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:7:1"
									},
									"scope": 466,
									"src": "5444:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "6071:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "6089:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 349,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6103:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 348,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6098:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6098:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6089:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 354,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "6117:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6131:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 356,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6131:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 355,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6126:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6126:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6126:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6117:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6089:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6143:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6081:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "6081:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 367,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6207:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6201:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int32_$",
															"typeString": "type(int32)"
														},
														"typeName": {
															"id": 365,
															"name": "int32",
															"nodeType": "ElementaryTypeName",
															"src": "6201:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"functionReturnParameters": 345,
												"id": 369,
												"nodeType": "Return",
												"src": "6194:19:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5660:345:1",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "6019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6034:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6027:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 340,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6027:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:14:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6064:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 343,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "6064:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6063:7:1"
									},
									"scope": 466,
									"src": "6010:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "6637:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 380,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "6655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6669:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 382,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6669:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 381,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6664:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6664:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6664:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6655:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "6683:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6697:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 389,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6697:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 388,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6692:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6692:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6692:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6683:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6655:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6709:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6647:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6647:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "6647:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6773:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6767:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int16_$",
															"typeString": "type(int16)"
														},
														"typeName": {
															"id": 398,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "6767:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6767:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"functionReturnParameters": 378,
												"id": 402,
												"nodeType": "Return",
												"src": "6760:19:1"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "6226:345:1",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "6585:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6600:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6593:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 373,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:14:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6630:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 376,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "6630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6629:7:1"
									},
									"scope": 466,
									"src": "6576:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "7197:145:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 413,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "7215:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7229:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 415,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7229:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 414,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7224:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7224:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "7224:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7215:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 420,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "7242:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7256:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 422,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7256:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 421,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7251:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7251:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7251:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7242:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7215:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7267:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7207:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7207:100:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 433,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7329:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7324:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 431,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "7324:4:1",
															"typeDescriptions": {}
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7324:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"functionReturnParameters": 411,
												"id": 435,
												"nodeType": "Return",
												"src": "7317:18:1"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "6792:341:1",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "7147:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7161:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7154:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 406,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7154:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:14:1"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7191:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 409,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "7191:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7190:6:1"
									},
									"scope": 466,
									"src": "7138:204:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "7582:233:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "7699:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7721:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 450,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7721:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					}
																				],
																				"id": 449,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "7716:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7716:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_int256",
																				"typeString": "type(int256)"
																			}
																		},
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "7716:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7708:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 447,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7708:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7708:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7699:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7735:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															},
															"value": "SafeCast: value doesn't fit in an int256"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7691:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7691:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "7691:87:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "7802:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7795:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 459,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7795:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 444,
												"id": 463,
												"nodeType": "Return",
												"src": "7788:20:1"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "7348:165:1",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "7527:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7544:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7536:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:15:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7574:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 442,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7574:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:8:1"
									},
									"scope": 466,
									"src": "7518:297:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 467,
							"src": "827:6990:1",
							"usedErrors": []
						}
					],
					"src": "92:7726:1"
				},
				"id": 1
			}
		}
	}
}