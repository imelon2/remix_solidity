{
	"id": "595569b53db7d7042a2e3d5c21718959",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// import \"@openzeppelin/contracts/utils/Timers.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\ncontract test {\n\n\n    function keccak256test() public returns(bytes memory) {\n        // return uint256(keccak256(bytes(\"description\")));\n        // return bytes(\"description\");\n        // return uint256(keccak256(bytes(\"description\")));\n        return abi.encode(1,45804,5000);\n    }\n\n\n    function votingDelay() public pure returns(uint256) {\n        return 1;\n    }\n\n    function votingPeriod() public pure returns(uint256) {\n        return 45818; // 1week\n    }\n\n    function snapshot() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n\n        return snapshot;\n    }\n\n    function deadline() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n        uint64 deadline = snapshot + uint64(votingPeriod());\n\n        return deadline;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"test": {
					"abi": [
						{
							"inputs": [],
							"name": "deadline",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "keccak256test",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".workspaces/default_workspace/unMiracle/test.sol\":170:1016  contract test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":170:1016  contract test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02a251a3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29dcb0cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3932abb1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8c492a76\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9711715a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":544:635  function votingPeriod() public pure returns(uint256) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":800:1014  function deadline() public view returns(uint64) {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":461:538  function votingDelay() public pure returns(uint256) {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:454  function keccak256test() public returns(bytes memory) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":641:794  function snapshot() public view returns(uint64) {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":544:635  function votingPeriod() public pure returns(uint256) {... */\n    tag_9:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":588:595  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":614:619  45818 */\n      0xb2fa\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":607:619  return 45818 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":544:635  function votingPeriod() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":800:1014  function deadline() public view returns(uint64) {... */\n    tag_13:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":840:846  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":858:873  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":906:919  votingDelay() */\n      tag_28\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":906:917  votingDelay */\n      tag_17\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":906:919  votingDelay() */\n      jump\t// in\n    tag_28:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":883:895  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":876:920  uint64(block.number) + uint64(votingDelay()) */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":858:920  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":930:945  uint64 deadline */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":966:980  votingPeriod() */\n      tag_31\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":966:978  votingPeriod */\n      tag_9\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":966:980  votingPeriod() */\n      jump\t// in\n    tag_31:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":948:956  snapshot */\n      dup3\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":948:981  snapshot + uint64(votingPeriod()) */\n      tag_32\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_32:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":930:981  uint64 deadline = snapshot + uint64(votingPeriod()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":999:1007  deadline */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":992:1007  return deadline */\n      swap3\n      pop\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":800:1014  function deadline() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":461:538  function votingDelay() public pure returns(uint256) {... */\n    tag_17:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":504:511  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":530:531  1 */\n      0x01\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":523:531  return 1 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":461:538  function votingDelay() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:454  function keccak256test() public returns(bytes memory) {... */\n    tag_20:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":232:244  bytes memory */\n      0x60\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":434:435  1 */\n      0x01\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":436:441  45804 */\n      0xb2ec\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":442:446  5000 */\n      0x1388\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":423:447  abi.encode(1,45804,5000) */\n      add(0x20, mload(0x40))\n      tag_35\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":416:447  return abi.encode(1,45804,5000) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:454  function keccak256test() public returns(bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":641:794  function snapshot() public view returns(uint64) {... */\n    tag_24:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":681:687  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":699:714  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":747:760  votingDelay() */\n      tag_38\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":747:758  votingDelay */\n      tag_17\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":747:760  votingDelay() */\n      jump\t// in\n    tag_38:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":724:736  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":717:761  uint64(block.number) + uint64(votingDelay()) */\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":699:761  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":779:787  snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":772:787  return snapshot */\n      swap2\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":641:794  function snapshot() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:367   */\n    tag_41:\n        /* \"#utility.yul\":93:96   */\n      0x00\n        /* \"#utility.yul\":121:159   */\n      tag_43\n        /* \"#utility.yul\":153:158   */\n      dup3\n        /* \"#utility.yul\":121:159   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":175:245   */\n      tag_45\n        /* \"#utility.yul\":238:244   */\n      dup2\n        /* \"#utility.yul\":233:236   */\n      dup6\n        /* \"#utility.yul\":175:245   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":168:245   */\n      swap4\n      pop\n        /* \"#utility.yul\":254:306   */\n      tag_47\n        /* \"#utility.yul\":299:305   */\n      dup2\n        /* \"#utility.yul\":294:297   */\n      dup6\n        /* \"#utility.yul\":287:291   */\n      0x20\n        /* \"#utility.yul\":280:285   */\n      dup7\n        /* \"#utility.yul\":276:292   */\n      add\n        /* \"#utility.yul\":254:306   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":331:360   */\n      tag_49\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":331:360   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":326:329   */\n      dup5\n        /* \"#utility.yul\":322:361   */\n      add\n        /* \"#utility.yul\":315:361   */\n      swap2\n      pop\n        /* \"#utility.yul\":97:367   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":373:516   */\n    tag_51:\n        /* \"#utility.yul\":466:509   */\n      tag_53\n        /* \"#utility.yul\":503:508   */\n      dup2\n        /* \"#utility.yul\":466:509   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":461:464   */\n      dup3\n        /* \"#utility.yul\":454:510   */\n      mstore\n        /* \"#utility.yul\":444:516   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":522:675   */\n    tag_55:\n        /* \"#utility.yul\":620:668   */\n      tag_57\n        /* \"#utility.yul\":662:667   */\n      dup2\n        /* \"#utility.yul\":620:668   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":615:618   */\n      dup3\n        /* \"#utility.yul\":608:669   */\n      mstore\n        /* \"#utility.yul\":598:675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":681:832   */\n    tag_59:\n        /* \"#utility.yul\":778:825   */\n      tag_61\n        /* \"#utility.yul\":819:824   */\n      dup2\n        /* \"#utility.yul\":778:825   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":773:776   */\n      dup3\n        /* \"#utility.yul\":766:826   */\n      mstore\n        /* \"#utility.yul\":756:832   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":838:956   */\n    tag_63:\n        /* \"#utility.yul\":925:949   */\n      tag_65\n        /* \"#utility.yul\":943:948   */\n      dup2\n        /* \"#utility.yul\":925:949   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":920:923   */\n      dup3\n        /* \"#utility.yul\":913:950   */\n      mstore\n        /* \"#utility.yul\":903:956   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":962:1077   */\n    tag_67:\n        /* \"#utility.yul\":1047:1070   */\n      tag_69\n        /* \"#utility.yul\":1064:1069   */\n      dup2\n        /* \"#utility.yul\":1047:1070   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1042:1045   */\n      dup3\n        /* \"#utility.yul\":1035:1071   */\n      mstore\n        /* \"#utility.yul\":1025:1077   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1083:1392   */\n    tag_22:\n        /* \"#utility.yul\":1194:1198   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1221:1230   */\n      dup3\n        /* \"#utility.yul\":1217:1235   */\n      add\n        /* \"#utility.yul\":1209:1235   */\n      swap1\n      pop\n        /* \"#utility.yul\":1281:1290   */\n      dup2\n        /* \"#utility.yul\":1275:1279   */\n      dup2\n        /* \"#utility.yul\":1271:1291   */\n      sub\n        /* \"#utility.yul\":1267:1268   */\n      0x00\n        /* \"#utility.yul\":1256:1265   */\n      dup4\n        /* \"#utility.yul\":1252:1269   */\n      add\n        /* \"#utility.yul\":1245:1292   */\n      mstore\n        /* \"#utility.yul\":1309:1385   */\n      tag_72\n        /* \"#utility.yul\":1380:1384   */\n      dup2\n        /* \"#utility.yul\":1371:1377   */\n      dup5\n        /* \"#utility.yul\":1309:1385   */\n      tag_41\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1301:1385   */\n      swap1\n      pop\n        /* \"#utility.yul\":1199:1392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1398:1894   */\n    tag_36:\n        /* \"#utility.yul\":1574:1578   */\n      0x00\n        /* \"#utility.yul\":1612:1614   */\n      0x60\n        /* \"#utility.yul\":1601:1610   */\n      dup3\n        /* \"#utility.yul\":1597:1615   */\n      add\n        /* \"#utility.yul\":1589:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1625:1702   */\n      tag_74\n        /* \"#utility.yul\":1699:1700   */\n      0x00\n        /* \"#utility.yul\":1688:1697   */\n      dup4\n        /* \"#utility.yul\":1684:1701   */\n      add\n        /* \"#utility.yul\":1675:1681   */\n      dup7\n        /* \"#utility.yul\":1625:1702   */\n      tag_51\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1712:1795   */\n      tag_75\n        /* \"#utility.yul\":1791:1793   */\n      0x20\n        /* \"#utility.yul\":1780:1789   */\n      dup4\n        /* \"#utility.yul\":1776:1794   */\n      add\n        /* \"#utility.yul\":1767:1773   */\n      dup6\n        /* \"#utility.yul\":1712:1795   */\n      tag_55\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1805:1887   */\n      tag_76\n        /* \"#utility.yul\":1883:1885   */\n      0x40\n        /* \"#utility.yul\":1872:1881   */\n      dup4\n        /* \"#utility.yul\":1868:1886   */\n      add\n        /* \"#utility.yul\":1859:1865   */\n      dup5\n        /* \"#utility.yul\":1805:1887   */\n      tag_59\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1579:1894   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1900:2122   */\n    tag_11:\n        /* \"#utility.yul\":1993:1997   */\n      0x00\n        /* \"#utility.yul\":2031:2033   */\n      0x20\n        /* \"#utility.yul\":2020:2029   */\n      dup3\n        /* \"#utility.yul\":2016:2034   */\n      add\n        /* \"#utility.yul\":2008:2034   */\n      swap1\n      pop\n        /* \"#utility.yul\":2044:2115   */\n      tag_78\n        /* \"#utility.yul\":2112:2113   */\n      0x00\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2097:2114   */\n      add\n        /* \"#utility.yul\":2088:2094   */\n      dup5\n        /* \"#utility.yul\":2044:2115   */\n      tag_63\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1998:2122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2128:2346   */\n    tag_15:\n        /* \"#utility.yul\":2219:2223   */\n      0x00\n        /* \"#utility.yul\":2257:2259   */\n      0x20\n        /* \"#utility.yul\":2246:2255   */\n      dup3\n        /* \"#utility.yul\":2242:2260   */\n      add\n        /* \"#utility.yul\":2234:2260   */\n      swap1\n      pop\n        /* \"#utility.yul\":2270:2339   */\n      tag_80\n        /* \"#utility.yul\":2336:2337   */\n      0x00\n        /* \"#utility.yul\":2325:2334   */\n      dup4\n        /* \"#utility.yul\":2321:2338   */\n      add\n        /* \"#utility.yul\":2312:2318   */\n      dup5\n        /* \"#utility.yul\":2270:2339   */\n      tag_67\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2224:2346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2352:2450   */\n    tag_44:\n        /* \"#utility.yul\":2403:2409   */\n      0x00\n        /* \"#utility.yul\":2437:2442   */\n      dup2\n        /* \"#utility.yul\":2431:2443   */\n      mload\n        /* \"#utility.yul\":2421:2443   */\n      swap1\n      pop\n        /* \"#utility.yul\":2410:2450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2624   */\n    tag_46:\n        /* \"#utility.yul\":2539:2550   */\n      0x00\n        /* \"#utility.yul\":2573:2579   */\n      dup3\n        /* \"#utility.yul\":2568:2571   */\n      dup3\n        /* \"#utility.yul\":2561:2580   */\n      mstore\n        /* \"#utility.yul\":2613:2617   */\n      0x20\n        /* \"#utility.yul\":2608:2611   */\n      dup3\n        /* \"#utility.yul\":2604:2618   */\n      add\n        /* \"#utility.yul\":2589:2618   */\n      swap1\n      pop\n        /* \"#utility.yul\":2551:2624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2630:2884   */\n    tag_30:\n        /* \"#utility.yul\":2669:2672   */\n      0x00\n        /* \"#utility.yul\":2688:2707   */\n      tag_84\n        /* \"#utility.yul\":2705:2706   */\n      dup3\n        /* \"#utility.yul\":2688:2707   */\n      tag_70\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2683:2707   */\n      swap2\n      pop\n        /* \"#utility.yul\":2721:2740   */\n      tag_85\n        /* \"#utility.yul\":2738:2739   */\n      dup4\n        /* \"#utility.yul\":2721:2740   */\n      tag_70\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2716:2740   */\n      swap3\n      pop\n        /* \"#utility.yul\":2826:2827   */\n      dup3\n        /* \"#utility.yul\":2806:2824   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2802:2828   */\n      sub\n        /* \"#utility.yul\":2799:2800   */\n      dup3\n        /* \"#utility.yul\":2796:2829   */\n      gt\n        /* \"#utility.yul\":2793:2795   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2832:2850   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2793:2795   */\n    tag_86:\n        /* \"#utility.yul\":2876:2877   */\n      dup3\n        /* \"#utility.yul\":2873:2874   */\n      dup3\n        /* \"#utility.yul\":2869:2878   */\n      add\n        /* \"#utility.yul\":2862:2878   */\n      swap1\n      pop\n        /* \"#utility.yul\":2673:2884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2890:2979   */\n    tag_89:\n        /* \"#utility.yul\":2926:2933   */\n      0x00\n        /* \"#utility.yul\":2966:2972   */\n      0xffff\n        /* \"#utility.yul\":2959:2964   */\n      dup3\n        /* \"#utility.yul\":2955:2973   */\n      and\n        /* \"#utility.yul\":2944:2973   */\n      swap1\n      pop\n        /* \"#utility.yul\":2934:2979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2985:3062   */\n    tag_66:\n        /* \"#utility.yul\":3022:3029   */\n      0x00\n        /* \"#utility.yul\":3051:3056   */\n      dup2\n        /* \"#utility.yul\":3040:3056   */\n      swap1\n      pop\n        /* \"#utility.yul\":3030:3062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3169   */\n    tag_70:\n        /* \"#utility.yul\":3104:3111   */\n      0x00\n        /* \"#utility.yul\":3144:3162   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3137:3142   */\n      dup3\n        /* \"#utility.yul\":3133:3163   */\n      and\n        /* \"#utility.yul\":3122:3163   */\n      swap1\n      pop\n        /* \"#utility.yul\":3112:3169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3261   */\n    tag_93:\n        /* \"#utility.yul\":3210:3217   */\n      0x00\n        /* \"#utility.yul\":3250:3254   */\n      0xff\n        /* \"#utility.yul\":3243:3248   */\n      dup3\n        /* \"#utility.yul\":3239:3255   */\n      and\n        /* \"#utility.yul\":3228:3255   */\n      swap1\n      pop\n        /* \"#utility.yul\":3218:3261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3267:3384   */\n    tag_54:\n        /* \"#utility.yul\":3323:3332   */\n      0x00\n        /* \"#utility.yul\":3356:3378   */\n      tag_96\n        /* \"#utility.yul\":3372:3377   */\n      dup3\n        /* \"#utility.yul\":3356:3378   */\n      tag_93\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3343:3378   */\n      swap1\n      pop\n        /* \"#utility.yul\":3333:3384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3390:3513   */\n    tag_58:\n        /* \"#utility.yul\":3451:3460   */\n      0x00\n        /* \"#utility.yul\":3484:3507   */\n      tag_98\n        /* \"#utility.yul\":3501:3506   */\n      dup3\n        /* \"#utility.yul\":3484:3507   */\n      tag_89\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3471:3507   */\n      swap1\n      pop\n        /* \"#utility.yul\":3461:3513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3519:3641   */\n    tag_62:\n        /* \"#utility.yul\":3579:3588   */\n      0x00\n        /* \"#utility.yul\":3612:3635   */\n      tag_100\n        /* \"#utility.yul\":3629:3634   */\n      dup3\n        /* \"#utility.yul\":3612:3635   */\n      tag_89\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3599:3635   */\n      swap1\n      pop\n        /* \"#utility.yul\":3589:3641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3647:3954   */\n    tag_48:\n        /* \"#utility.yul\":3715:3716   */\n      0x00\n        /* \"#utility.yul\":3725:3838   */\n    tag_102:\n        /* \"#utility.yul\":3739:3745   */\n      dup4\n        /* \"#utility.yul\":3736:3737   */\n      dup2\n        /* \"#utility.yul\":3733:3746   */\n      lt\n        /* \"#utility.yul\":3725:3838   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3824:3825   */\n      dup1\n        /* \"#utility.yul\":3819:3822   */\n      dup3\n        /* \"#utility.yul\":3815:3826   */\n      add\n        /* \"#utility.yul\":3809:3827   */\n      mload\n        /* \"#utility.yul\":3805:3806   */\n      dup2\n        /* \"#utility.yul\":3800:3803   */\n      dup5\n        /* \"#utility.yul\":3796:3807   */\n      add\n        /* \"#utility.yul\":3789:3828   */\n      mstore\n        /* \"#utility.yul\":3761:3763   */\n      0x20\n        /* \"#utility.yul\":3758:3759   */\n      dup2\n        /* \"#utility.yul\":3754:3764   */\n      add\n        /* \"#utility.yul\":3749:3764   */\n      swap1\n      pop\n        /* \"#utility.yul\":3725:3838   */\n      jump(tag_102)\n    tag_104:\n        /* \"#utility.yul\":3856:3862   */\n      dup4\n        /* \"#utility.yul\":3853:3854   */\n      dup2\n        /* \"#utility.yul\":3850:3863   */\n      gt\n        /* \"#utility.yul\":3847:3849   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":3936:3937   */\n      0x00\n        /* \"#utility.yul\":3927:3933   */\n      dup5\n        /* \"#utility.yul\":3922:3925   */\n      dup5\n        /* \"#utility.yul\":3918:3934   */\n      add\n        /* \"#utility.yul\":3911:3938   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n    tag_105:\n        /* \"#utility.yul\":3696:3954   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3960:4140   */\n    tag_88:\n        /* \"#utility.yul\":4008:4085   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4005:4006   */\n      0x00\n        /* \"#utility.yul\":3998:4086   */\n      mstore\n        /* \"#utility.yul\":4105:4109   */\n      0x11\n        /* \"#utility.yul\":4102:4103   */\n      0x04\n        /* \"#utility.yul\":4095:4110   */\n      mstore\n        /* \"#utility.yul\":4129:4133   */\n      0x24\n        /* \"#utility.yul\":4126:4127   */\n      0x00\n        /* \"#utility.yul\":4119:4134   */\n      revert\n        /* \"#utility.yul\":4146:4248   */\n    tag_50:\n        /* \"#utility.yul\":4187:4193   */\n      0x00\n        /* \"#utility.yul\":4238:4240   */\n      0x1f\n        /* \"#utility.yul\":4234:4241   */\n      not\n        /* \"#utility.yul\":4229:4231   */\n      0x1f\n        /* \"#utility.yul\":4222:4227   */\n      dup4\n        /* \"#utility.yul\":4218:4232   */\n      add\n        /* \"#utility.yul\":4214:4242   */\n      and\n        /* \"#utility.yul\":4204:4242   */\n      swap1\n      pop\n        /* \"#utility.yul\":4194:4248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b78c66d45079cb304d42dbe473c8ae131a280b976b33fbb4a81fcd06375f63b864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610410806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806302a251a31461005c57806329dcb0cf1461007a5780633932abb1146100985780638c492a76146100b65780639711715a146100d4575b600080fd5b6100646100f2565b6040516100719190610268565b60405180910390f35b6100826100fc565b60405161008f9190610283565b60405180910390f35b6100a0610133565b6040516100ad9190610268565b60405180910390f35b6100be61013c565b6040516100cb919061020f565b60405180910390f35b6100dc61016c565b6040516100e99190610283565b60405180910390f35b600061b2fa905090565b600080610107610133565b4361011291906102ba565b9050600061011e6100f2565b8261012991906102ba565b9050809250505090565b60006001905090565b6060600161b2ec61138860405160200161015893929190610231565b604051602081830303815290604052905090565b600080610177610133565b4361018291906102ba565b90508091505090565b60006101968261029e565b6101a081856102a9565b93506101b0818560208601610367565b6101b9816103c9565b840191505092915050565b6101cd81610331565b82525050565b6101dc81610343565b82525050565b6101eb81610355565b82525050565b6101fa81610306565b82525050565b61020981610310565b82525050565b60006020820190508181036000830152610229818461018b565b905092915050565b600060608201905061024660008301866101c4565b61025360208301856101d3565b61026060408301846101e2565b949350505050565b600060208201905061027d60008301846101f1565b92915050565b60006020820190506102986000830184610200565b92915050565b600081519050919050565b600082825260208201905092915050565b60006102c582610310565b91506102d083610310565b92508267ffffffffffffffff038211156102ed576102ec61039a565b5b828201905092915050565b600061ffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b600061033c82610324565b9050919050565b600061034e826102f8565b9050919050565b6000610360826102f8565b9050919050565b60005b8381101561038557808201518184015260208101905061036a565b83811115610394576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220b78c66d45079cb304d42dbe473c8ae131a280b976b33fbb4a81fcd06375f63b864736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8C492A76 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x107 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11E PUSH2 0xF2 JUMP JUMPDEST DUP3 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0xB2EC PUSH2 0x1388 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x158 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x177 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x29E JUMP JUMPDEST PUSH2 0x1A0 DUP2 DUP6 PUSH2 0x2A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x331 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1EB DUP2 PUSH2 0x355 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x306 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229 DUP2 DUP5 PUSH2 0x18B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x246 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x253 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x260 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x298 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 DUP3 PUSH2 0x310 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0 DUP4 PUSH2 0x310 JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2EC PUSH2 0x39A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP3 PUSH2 0x324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH2 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x385 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 DUP13 PUSH7 0xD45079CB304D42 0xDB 0xE4 PUSH20 0xC8AE131A280B976B33FBB4A81FCD06375F63B864 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "170:846:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4251:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "97:270:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "107:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "153:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "121:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "111:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "168:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "233:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "175:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "175:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "168:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "280:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "287:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "294:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "299:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "254:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "254:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "315:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "353:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "331:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "331:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "85:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "93:3:2",
														"type": ""
													}
												],
												"src": "7:360:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "444:72:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "461:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "503:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "466:36:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "466:43:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "454:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "454:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "454:56:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "432:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "439:3:2",
														"type": ""
													}
												],
												"src": "373:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:77:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "615:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "662:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_45804_by_1_to_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "620:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:48:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "608:61:2"
														}
													]
												},
												"name": "abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "586:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "593:3:2",
														"type": ""
													}
												],
												"src": "522:153:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "773:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "819:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_5000_by_1_to_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "778:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "778:47:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:60:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:60:2"
														}
													]
												},
												"name": "abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "744:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "751:3:2",
														"type": ""
													}
												],
												"src": "681:151:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "903:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "920:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "925:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "925:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "913:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "913:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "891:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "898:3:2",
														"type": ""
													}
												],
												"src": "838:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1025:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1042:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1064:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "1047:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1047:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1035:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1035:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1013:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1020:3:2",
														"type": ""
													}
												],
												"src": "962:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1199:193:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1209:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1221:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1209:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1256:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1267:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1252:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1252:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1275:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1271:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1301:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1371:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1380:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1309:61:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1301:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1171:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1183:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1194:4:2",
														"type": ""
													}
												],
												"src": "1083:309:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:315:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1589:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1601:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1612:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1597:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1589:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1675:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1688:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1699:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1684:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1625:49:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1625:77:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1767:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1791:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1776:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1712:54:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:83:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1712:83:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1859:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1872:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1868:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1868:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1805:53:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:82:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:82:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1_t_rational_45804_by_1_t_rational_5000_by_1__to_t_uint8_t_uint16_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1547:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1555:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1563:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:2",
														"type": ""
													}
												],
												"src": "1398:496:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1998:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2008:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2020:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2031:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2016:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2008:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2088:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2101:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2112:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2044:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2044:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1970:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1993:4:2",
														"type": ""
													}
												],
												"src": "1900:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2224:122:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2234:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2246:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2242:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2234:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2312:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2325:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2336:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2321:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2321:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2270:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2270:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2270:69:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2196:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2219:4:2",
														"type": ""
													}
												],
												"src": "2128:218:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2410:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2437:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2431:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2393:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2403:6:2",
														"type": ""
													}
												],
												"src": "2352:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2568:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2573:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2561:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2589:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2608:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2589:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2523:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2528:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2539:11:2",
														"type": ""
													}
												],
												"src": "2456:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2673:211:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2683:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2705:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "2688:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:19:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2683:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2716:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2738:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "2721:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:19:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2716:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2830:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2832:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2832:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2832:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2799:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2806:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2826:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:26:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2796:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:33:2"
															},
															"nodeType": "YulIf",
															"src": "2793:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2862:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2873:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2876:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2869:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2862:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2660:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2663:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2669:3:2",
														"type": ""
													}
												],
												"src": "2630:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2934:45:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2944:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2959:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2966:6:2",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:18:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2944:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2916:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2926:7:2",
														"type": ""
													}
												],
												"src": "2890:89:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3030:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3040:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3051:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3040:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3012:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3022:7:2",
														"type": ""
													}
												],
												"src": "2985:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:57:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3122:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3137:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3144:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:30:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3122:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3094:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3104:7:2",
														"type": ""
													}
												],
												"src": "3068:101:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3218:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3228:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3243:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3250:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3239:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3228:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3200:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3210:7:2",
														"type": ""
													}
												],
												"src": "3175:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3333:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3343:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3372:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "3356:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3356:22:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3343:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3313:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3323:9:2",
														"type": ""
													}
												],
												"src": "3267:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3461:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3471:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3501:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "3484:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:23:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3471:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_45804_by_1_to_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3441:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3451:9:2",
														"type": ""
													}
												],
												"src": "3390:123:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3589:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3599:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3629:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "3612:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:23:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3599:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_5000_by_1_to_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3569:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3579:9:2",
														"type": ""
													}
												],
												"src": "3519:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3696:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3706:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3715:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3710:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3775:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3800:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3805:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3796:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3796:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3819:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3824:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3815:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3815:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3809:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3809:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3789:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3789:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3789:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3736:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3739:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3733:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3747:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3749:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3758:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3754:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3749:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3729:3:2",
																"statements": []
															},
															"src": "3725:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3872:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3922:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3927:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3918:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3918:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3936:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3911:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3911:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3911:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3853:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3856:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3850:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:13:2"
															},
															"nodeType": "YulIf",
															"src": "3847:2:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3678:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3683:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3688:6:2",
														"type": ""
													}
												],
												"src": "3647:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3988:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3998:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4102:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4105:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4095:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4126:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4129:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4119:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4119:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3960:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4194:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4204:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4222:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4229:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4218:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4218:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4238:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4234:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4214:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4214:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4177:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4187:6:2",
														"type": ""
													}
												],
												"src": "4146:102:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_45804_by_1_to_t_uint16(value))\n    }\n\n    function abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_5000_by_1_to_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1_t_rational_45804_by_1_t_rational_5000_by_1__to_t_uint8_t_uint16_t_uint16__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_45804_by_1_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_5000_by_1_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(value)\n    }\n\n    function convert_t_rational_45804_by_1_to_t_uint16(value) -> converted {\n        converted := cleanup_t_uint16(value)\n    }\n\n    function convert_t_rational_5000_by_1_to_t_uint16(value) -> converted {\n        converted := cleanup_t_uint16(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806302a251a31461005c57806329dcb0cf1461007a5780633932abb1146100985780638c492a76146100b65780639711715a146100d4575b600080fd5b6100646100f2565b6040516100719190610268565b60405180910390f35b6100826100fc565b60405161008f9190610283565b60405180910390f35b6100a0610133565b6040516100ad9190610268565b60405180910390f35b6100be61013c565b6040516100cb919061020f565b60405180910390f35b6100dc61016c565b6040516100e99190610283565b60405180910390f35b600061b2fa905090565b600080610107610133565b4361011291906102ba565b9050600061011e6100f2565b8261012991906102ba565b9050809250505090565b60006001905090565b6060600161b2ec61138860405160200161015893929190610231565b604051602081830303815290604052905090565b600080610177610133565b4361018291906102ba565b90508091505090565b60006101968261029e565b6101a081856102a9565b93506101b0818560208601610367565b6101b9816103c9565b840191505092915050565b6101cd81610331565b82525050565b6101dc81610343565b82525050565b6101eb81610355565b82525050565b6101fa81610306565b82525050565b61020981610310565b82525050565b60006020820190508181036000830152610229818461018b565b905092915050565b600060608201905061024660008301866101c4565b61025360208301856101d3565b61026060408301846101e2565b949350505050565b600060208201905061027d60008301846101f1565b92915050565b60006020820190506102986000830184610200565b92915050565b600081519050919050565b600082825260208201905092915050565b60006102c582610310565b91506102d083610310565b92508267ffffffffffffffff038211156102ed576102ec61039a565b5b828201905092915050565b600061ffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b600061033c82610324565b9050919050565b600061034e826102f8565b9050919050565b6000610360826102f8565b9050919050565b60005b8381101561038557808201518184015260208101905061036a565b83811115610394576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220b78c66d45079cb304d42dbe473c8ae131a280b976b33fbb4a81fcd06375f63b864736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8C492A76 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x107 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11E PUSH2 0xF2 JUMP JUMPDEST DUP3 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH2 0xB2EC PUSH2 0x1388 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x158 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x177 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x29E JUMP JUMPDEST PUSH2 0x1A0 DUP2 DUP6 PUSH2 0x2A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x331 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1EB DUP2 PUSH2 0x355 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x306 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229 DUP2 DUP5 PUSH2 0x18B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x246 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x253 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x260 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x298 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 DUP3 PUSH2 0x310 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0 DUP4 PUSH2 0x310 JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2EC PUSH2 0x39A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP3 PUSH2 0x324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH2 0x2F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x385 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 DUP13 PUSH7 0xD45079CB304D42 0xDB 0xE4 PUSH20 0xC8AE131A280B976B33FBB4A81FCD06375F63B864 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "170:846:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:214;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;461:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;192:262;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;641:153;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;544:91;588:7;614:5;607:12;;544:91;:::o;800:214::-;840:6;858:15;906:13;:11;:13::i;:::-;883:12;876:44;;;;:::i;:::-;858:62;;930:15;966:14;:12;:14::i;:::-;948:8;:33;;;;:::i;:::-;930:51;;999:8;992:15;;;;800:214;:::o;461:77::-;504:7;530:1;523:8;;461:77;:::o;192:262::-;232:12;434:1;436:5;442:4;423:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;416:31;;192:262;:::o;641:153::-;681:6;699:15;747:13;:11;:13::i;:::-;724:12;717:44;;;;:::i;:::-;699:62;;779:8;772:15;;;641:153;:::o;7:360:2:-;93:3;121:38;153:5;121:38;:::i;:::-;175:70;238:6;233:3;175:70;:::i;:::-;168:77;;254:52;299:6;294:3;287:4;280:5;276:16;254:52;:::i;:::-;331:29;353:6;331:29;:::i;:::-;326:3;322:39;315:46;;97:270;;;;;:::o;373:143::-;466:43;503:5;466:43;:::i;:::-;461:3;454:56;444:72;;:::o;522:153::-;620:48;662:5;620:48;:::i;:::-;615:3;608:61;598:77;;:::o;681:151::-;778:47;819:5;778:47;:::i;:::-;773:3;766:60;756:76;;:::o;838:118::-;925:24;943:5;925:24;:::i;:::-;920:3;913:37;903:53;;:::o;962:115::-;1047:23;1064:5;1047:23;:::i;:::-;1042:3;1035:36;1025:52;;:::o;1083:309::-;1194:4;1232:2;1221:9;1217:18;1209:26;;1281:9;1275:4;1271:20;1267:1;1256:9;1252:17;1245:47;1309:76;1380:4;1371:6;1309:76;:::i;:::-;1301:84;;1199:193;;;;:::o;1398:496::-;1574:4;1612:2;1601:9;1597:18;1589:26;;1625:77;1699:1;1688:9;1684:17;1675:6;1625:77;:::i;:::-;1712:83;1791:2;1780:9;1776:18;1767:6;1712:83;:::i;:::-;1805:82;1883:2;1872:9;1868:18;1859:6;1805:82;:::i;:::-;1579:315;;;;;;:::o;1900:222::-;1993:4;2031:2;2020:9;2016:18;2008:26;;2044:71;2112:1;2101:9;2097:17;2088:6;2044:71;:::i;:::-;1998:124;;;;:::o;2128:218::-;2219:4;2257:2;2246:9;2242:18;2234:26;;2270:69;2336:1;2325:9;2321:17;2312:6;2270:69;:::i;:::-;2224:122;;;;:::o;2352:98::-;2403:6;2437:5;2431:12;2421:22;;2410:40;;;:::o;2456:168::-;2539:11;2573:6;2568:3;2561:19;2613:4;2608:3;2604:14;2589:29;;2551:73;;;;:::o;2630:254::-;2669:3;2688:19;2705:1;2688:19;:::i;:::-;2683:24;;2721:19;2738:1;2721:19;:::i;:::-;2716:24;;2826:1;2806:18;2802:26;2799:1;2796:33;2793:2;;;2832:18;;:::i;:::-;2793:2;2876:1;2873;2869:9;2862:16;;2673:211;;;;:::o;2890:89::-;2926:7;2966:6;2959:5;2955:18;2944:29;;2934:45;;;:::o;2985:77::-;3022:7;3051:5;3040:16;;3030:32;;;:::o;3068:101::-;3104:7;3144:18;3137:5;3133:30;3122:41;;3112:57;;;:::o;3175:86::-;3210:7;3250:4;3243:5;3239:16;3228:27;;3218:43;;;:::o;3267:117::-;3323:9;3356:22;3372:5;3356:22;:::i;:::-;3343:35;;3333:51;;;:::o;3390:123::-;3451:9;3484:23;3501:5;3484:23;:::i;:::-;3471:36;;3461:52;;;:::o;3519:122::-;3579:9;3612:23;3629:5;3612:23;:::i;:::-;3599:36;;3589:52;;;:::o;3647:307::-;3715:1;3725:113;3739:6;3736:1;3733:13;3725:113;;;3824:1;3819:3;3815:11;3809:18;3805:1;3800:3;3796:11;3789:39;3761:2;3758:1;3754:10;3749:15;;3725:113;;;3856:6;3853:1;3850:13;3847:2;;;3936:1;3927:6;3922:3;3918:16;3911:27;3847:2;3696:258;;;;:::o;3960:180::-;4008:77;4005:1;3998:88;4105:4;4102:1;4095:15;4129:4;4126:1;4119:15;4146:102;4187:6;4238:2;4234:7;4229:2;4222:5;4218:14;4214:28;4204:38;;4194:54;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "208000",
								"executionCost": "251",
								"totalCost": "208251"
							},
							"external": {
								"deadline()": "infinite",
								"keccak256test()": "infinite",
								"snapshot()": "infinite",
								"votingDelay()": "359",
								"votingPeriod()": "315"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1016,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b78c66d45079cb304d42dbe473c8ae131a280b976b33fbb4a81fcd06375f63b864736f6c63430008040033",
									".code": [
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "2A251A3"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "29DCB0CF"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "3932ABB1"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C492A76"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "9711715A"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA"
										},
										{
											"begin": 607,
											"end": 619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 635,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 906,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 906,
											"end": 919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 919,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 906,
											"end": 919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 883,
											"end": 895,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 876,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 876,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 876,
											"end": 920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 876,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 876,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 858,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 930,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 966,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 948,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 948,
											"end": 981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 948,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 948,
											"end": 981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 948,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 930,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 1014,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 461,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 504,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 523,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 434,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "B2EC"
										},
										{
											"begin": 442,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1388"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 416,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 454,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 641,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 747,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 747,
											"end": 760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 760,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 747,
											"end": 760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 736,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 717,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 717,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 717,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 717,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 717,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 779,
											"end": 787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 772,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 772,
											"end": 787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 772,
											"end": 787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 794,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 367,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7,
											"end": 367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 93,
											"end": 96,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 153,
											"end": 158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 121,
											"end": 159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 175,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 233,
											"end": 236,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 175,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 245,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 254,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 294,
											"end": 297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 287,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 285,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 276,
											"end": 292,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 254,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 331,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 322,
											"end": 361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 315,
											"end": 361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 315,
											"end": 361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 373,
											"end": 516,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 373,
											"end": 516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 503,
											"end": 508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 461,
											"end": 464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 454,
											"end": 510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 444,
											"end": 516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 444,
											"end": 516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 444,
											"end": 516,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 675,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 522,
											"end": 675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 620,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 662,
											"end": 667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 620,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 620,
											"end": 668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 668,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 620,
											"end": 668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 608,
											"end": 669,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 598,
											"end": 675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 598,
											"end": 675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 598,
											"end": 675,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 832,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 681,
											"end": 832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 778,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 778,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 778,
											"end": 825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 778,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 773,
											"end": 776,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 766,
											"end": 826,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 756,
											"end": 832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 832,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 838,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 838,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 920,
											"end": 923,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 913,
											"end": 950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 956,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 1077,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 962,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1047,
											"end": 1070,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1047,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1083,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1083,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1291,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1380,
											"end": 1384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1309,
											"end": 1385,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1309,
											"end": 1385,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1309,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1392,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1392,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1398,
											"end": 1894,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1398,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1699,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1625,
											"end": 1702,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1625,
											"end": 1702,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1625,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1712,
											"end": 1795,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1712,
											"end": 1795,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1712,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1883,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1805,
											"end": 1887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1887,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1805,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1894,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1894,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1894,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1900,
											"end": 2122,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1900,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2112,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2044,
											"end": 2115,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2044,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2122,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2122,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2128,
											"end": 2346,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2128,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2336,
											"end": 2337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2270,
											"end": 2339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2339,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2270,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2346,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2346,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2352,
											"end": 2450,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2352,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2456,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2456,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2571,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2617,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2624,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2624,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2630,
											"end": 2884,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2630,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2688,
											"end": 2707,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2688,
											"end": 2707,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2688,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2707,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2738,
											"end": 2739,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2740,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2829,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2884,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2890,
											"end": 2979,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2890,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 2959,
											"end": 2964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2979,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2985,
											"end": 3062,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2985,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3137,
											"end": 3142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3163,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3169,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3169,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3175,
											"end": 3261,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3175,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3254,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3255,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3267,
											"end": 3384,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3267,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3356,
											"end": 3378,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3356,
											"end": 3378,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3356,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3384,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3390,
											"end": 3513,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3390,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3501,
											"end": 3506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3484,
											"end": 3507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3484,
											"end": 3507,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3484,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3471,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3471,
											"end": 3507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3513,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3519,
											"end": 3641,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3519,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3629,
											"end": 3634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3589,
											"end": 3641,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3647,
											"end": 3954,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3647,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3746,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3725,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3863,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3954,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3960,
											"end": 4140,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3960,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4085,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4134,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4248,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4146,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4187,
											"end": 4193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4240,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4234,
											"end": 4241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4229,
											"end": 4231,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4222,
											"end": 4227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4242,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4204,
											"end": 4242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4204,
											"end": 4242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4194,
											"end": 4248,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4194,
											"end": 4248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4194,
											"end": 4248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4194,
											"end": 4248,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deadline()": "29dcb0cf",
							"keccak256test()": "8c492a76",
							"snapshot()": "9711715a",
							"votingDelay()": "3932abb1",
							"votingPeriod()": "02a251a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keccak256test\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".workspaces/default_workspace/unMiracle/test.sol\":\"test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".workspaces/default_workspace/unMiracle/test.sol\":{\"keccak256\":\"0x365618dc43c089bf4a272684e2054e6c695401431c62210d43f3686f5d11b3e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0db0f708d78da458c50cd7f5aabc7811f9a550d23029f465ae6ece3ccb52b6bf\",\"dweb:/ipfs/QmQJTgzv9YPn8bWg5yz6eBfwsAMUu6bijYTDwCJ7s1WwPP\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
									".code": [
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:27:9:\n   |\n27 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:26:5:\n   |\n26 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 794,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 641
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 714,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 699
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:33:9:\n   |\n33 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:26:5:\n   |\n26 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 794,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 641
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 873,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 858
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:34:9:\n   |\n34 |         uint64 deadline = snapshot + uint64(votingPeriod());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:32:5:\n   |\n32 |     function deadline() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1014,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 800
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 945,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 930
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> .workspaces/default_workspace/unMiracle/test.sol:10:5:\n   |\n10 |     function keccak256test() public returns(bytes memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 454,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 192
				},
				"type": "Warning"
			}
		],
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"ast": {
					"absolutePath": ".workspaces/default_workspace/unMiracle/test.sol",
					"exportedSymbols": {
						"SafeCast": [
							479
						],
						"test": [
							86
						]
					},
					"id": 87,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 87,
							"sourceUnit": 480,
							"src": "111:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "test",
							"nameLocation": "179:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "246:208:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "434:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "3435383034",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "436:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45804_by_1",
																"typeString": "int_const 45804"
															},
															"value": "45804"
														},
														{
															"hexValue": "35303030",
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "442:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_45804_by_1",
																"typeString": "int_const 45804"
															},
															{
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															}
														],
														"expression": {
															"id": 7,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "423:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "423:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 6,
												"id": 13,
												"nodeType": "Return",
												"src": "416:31:0"
											}
										]
									},
									"functionSelector": "8c492a76",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak256test",
									"nameLocation": "201:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "232:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:14:0"
									},
									"scope": 86,
									"src": "192:262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "513:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "530:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 19,
												"id": 21,
												"nodeType": "Return",
												"src": "523:8:0"
											}
										]
									},
									"functionSelector": "3932abb1",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingDelay",
									"nameLocation": "470:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "504:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:9:0"
									},
									"scope": 86,
									"src": "461:77:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "597:38:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3435383138",
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "614:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45818_by_1",
														"typeString": "int_const 45818"
													},
													"value": "45818"
												},
												"functionReturnParameters": 27,
												"id": 29,
												"nodeType": "Return",
												"src": "607:12:0"
											}
										]
									},
									"functionSelector": "02a251a3",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingPeriod",
									"nameLocation": "553:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "588:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:9:0"
									},
									"scope": 86,
									"src": "544:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "689:105:0",
										"statements": [
											{
												"assignments": [
													37
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "706:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "699:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 36,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "699:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 40,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "724:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "724:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 38,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "717:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "717:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "747:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "747:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "740:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 43,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "740:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "740:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "717:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "699:62:0"
											},
											{
												"expression": {
													"id": 50,
													"name": "snapshot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "779:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 35,
												"id": 51,
												"nodeType": "Return",
												"src": "772:15:0"
											}
										]
									},
									"functionSelector": "9711715a",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "snapshot",
									"nameLocation": "650:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "681:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 33,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "681:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:8:0"
									},
									"scope": 86,
									"src": "641:153:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "848:166:0",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "865:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "858:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 58,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 62,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "883:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "883:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "876:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 60,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "876:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "876:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 67,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "906:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "906:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 65,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "899:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "899:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "876:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:62:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "deadline",
														"nameLocation": "937:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "930:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 72,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "930:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 81,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 74,
														"name": "snapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "948:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 77,
																	"name": "votingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "966:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "966:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "959:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 75,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "959:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "959:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "948:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "930:51:0"
											},
											{
												"expression": {
													"id": 82,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "999:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 57,
												"id": 83,
												"nodeType": "Return",
												"src": "992:15:0"
											}
										]
									},
									"functionSelector": "29dcb0cf",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deadline",
									"nameLocation": "809:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "840:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 55,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:8:0"
									},
									"scope": 86,
									"src": "800:214:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 87,
							"src": "170:846:0",
							"usedErrors": []
						}
					],
					"src": "32:984:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							479
						]
					},
					"id": 480,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 88,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 89,
								"nodeType": "StructuredDocumentation",
								"src": "117:709:1",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
							},
							"fullyImplemented": true,
							"id": 479,
							"linearizedBaseContracts": [
								479
							],
							"name": "SafeCast",
							"nameLocation": "835:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1201:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "1219:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1233:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 100,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "1233:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			}
																		],
																		"id": 99,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1228:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1228:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint224",
																		"typeString": "type(uint224)"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1228:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															},
															"src": "1219:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1247:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															},
															"value": "SafeCast: value doesn't fit in 224 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1211:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 110,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1314:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1306:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 108,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "1306:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 96,
												"id": 112,
												"nodeType": "Return",
												"src": "1299:21:1"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "850:280:1",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "1144:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1162:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1154:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:15:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1192:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 94,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:9:1"
									},
									"scope": 479,
									"src": "1135:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "1684:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1702:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1716:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 125,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "1716:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			}
																		],
																		"id": 124,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1711:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1711:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint128",
																		"typeString": "type(uint128)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1711:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1702:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1730:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1694:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1694:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1797:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1789:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 133,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1789:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 121,
												"id": 137,
												"nodeType": "Return",
												"src": "1782:21:1"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1333:280:1",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "1627:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1645:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1637:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1675:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 119,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:9:1"
									},
									"scope": 479,
									"src": "1618:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "2161:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "2179:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2193:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			},
																			"typeName": {
																				"id": 150,
																				"name": "uint96",
																				"nodeType": "ElementaryTypeName",
																				"src": "2193:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			}
																		],
																		"id": 149,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2188:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2188:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint96",
																		"typeString": "type(uint96)"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2188:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "2179:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2206:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															},
															"value": "SafeCast: value doesn't fit in 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2171:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "2171:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "2271:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2264:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 158,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2264:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 146,
												"id": 162,
												"nodeType": "Return",
												"src": "2257:20:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1816:276:1",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "2106:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2123:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "2115:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:15:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "2153:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 144,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2153:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:8:1"
									},
									"scope": 479,
									"src": "2097:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2635:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 173,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2653:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2667:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 175,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "2667:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			}
																		],
																		"id": 174,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2662:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2662:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint64",
																		"typeString": "type(uint64)"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2662:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "2653:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2680:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2645:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2745:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2738:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 183,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "2738:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 171,
												"id": 187,
												"nodeType": "Return",
												"src": "2731:20:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "2290:276:1",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "2580:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2597:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2589:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:15:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2627:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 169,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2627:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:8:1"
									},
									"scope": 479,
									"src": "2571:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3109:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 198,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "3127:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3141:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 200,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3141:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			}
																		],
																		"id": 199,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3136:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3136:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint32",
																		"typeString": "type(uint32)"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3136:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "3127:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3154:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3119:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3119:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "3119:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3219:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3212:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 208,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3212:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 196,
												"id": 212,
												"nodeType": "Return",
												"src": "3205:20:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2764:276:1",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "3054:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3071:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3063:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:15:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3101:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 194,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3101:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:8:1"
									},
									"scope": 479,
									"src": "3045:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3583:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "3601:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3615:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 225,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "3615:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3610:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3610:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint16",
																		"typeString": "type(uint16)"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3610:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "3601:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3628:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3593:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 235,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3693:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3686:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 233,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3686:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3686:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 221,
												"id": 237,
												"nodeType": "Return",
												"src": "3679:20:1"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3238:276:1",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "3528:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3545:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3537:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:15:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3575:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 219,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3575:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:8:1"
									},
									"scope": 479,
									"src": "3519:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "4052:120:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4070:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4084:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 250,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "4084:5:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		],
																		"id": 249,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4079:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4079:11:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint8",
																		"typeString": "type(uint8)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "4079:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4070:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4096:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "4062:74:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 260,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4159:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4153:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 258,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4153:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 246,
												"id": 262,
												"nodeType": "Return",
												"src": "4146:19:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3712:273:1",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "3999:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:15:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4045:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 244,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4045:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:7:1"
									},
									"scope": 479,
									"src": "3990:182:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "4408:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 273,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "4426:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4435:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4426:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c7565206d75737420626520706f736974697665",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4438:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															},
															"value": "SafeCast: value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4418:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4418:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "4418:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4498:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4490:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4490:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4490:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 271,
												"id": 283,
												"nodeType": "Return",
												"src": "4483:21:1"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "4178:160:1",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "4352:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4369:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4362:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 266,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:14:1"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4399:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:9:1"
									},
									"scope": 479,
									"src": "4343:168:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "4935:153:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "4953:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4967:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 296,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4967:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 295,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4962:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4962:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "4962:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4953:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 301,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "4982:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 303,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4996:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 302,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4991:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4991:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "4991:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4982:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4953:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5009:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4945:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4945:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "4945:106:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 314,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5068:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 312,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "5068:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5068:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 292,
												"id": 316,
												"nodeType": "Return",
												"src": "5061:20:1"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "4517:350:1",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "4881:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4897:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4890:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 287,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4890:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:14:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4927:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 290,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4927:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4926:8:1"
									},
									"scope": 479,
									"src": "4872:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "5505:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 327,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "5523:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5537:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 329,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5537:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 328,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5532:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5532:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "5532:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5523:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "5551:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5565:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 336,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5565:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 335,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5560:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5560:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5560:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5551:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5523:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5577:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "5515:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5641:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5635:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int64_$",
															"typeString": "type(int64)"
														},
														"typeName": {
															"id": 345,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "5635:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5635:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 325,
												"id": 349,
												"nodeType": "Return",
												"src": "5628:19:1"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "5094:345:1",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "5453:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "5461:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 320,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5461:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:14:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "5498:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 323,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "5498:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:7:1"
									},
									"scope": 479,
									"src": "5444:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "6071:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 360,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "6089:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 362,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6103:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 361,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6098:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6098:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6089:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "6117:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6131:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 369,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6131:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 368,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6126:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6126:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6126:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6117:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6089:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6143:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6081:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "6081:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 380,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "6207:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6201:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int32_$",
															"typeString": "type(int32)"
														},
														"typeName": {
															"id": 378,
															"name": "int32",
															"nodeType": "ElementaryTypeName",
															"src": "6201:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"functionReturnParameters": 358,
												"id": 382,
												"nodeType": "Return",
												"src": "6194:19:1"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "5660:345:1",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "6019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6034:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "6027:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 353,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6027:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:14:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "6064:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 356,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "6064:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6063:7:1"
									},
									"scope": 479,
									"src": "6010:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "6637:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6669:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 395,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6669:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 394,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6664:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6664:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6664:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6655:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 400,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6683:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6697:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 402,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6697:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 401,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6692:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6692:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6692:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6683:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6655:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6709:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6647:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6647:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6647:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "6773:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6767:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int16_$",
															"typeString": "type(int16)"
														},
														"typeName": {
															"id": 411,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "6767:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6767:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"functionReturnParameters": 391,
												"id": 415,
												"nodeType": "Return",
												"src": "6760:19:1"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "6226:345:1",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "6585:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6600:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6593:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 386,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:14:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6630:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 389,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "6630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6629:7:1"
									},
									"scope": 479,
									"src": "6576:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "7197:145:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 426,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "7215:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7229:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7229:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 427,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7224:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7224:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "7224:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7215:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "7242:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7256:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 435,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7256:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 434,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7251:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7251:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7251:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7242:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7215:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7267:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7207:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "7207:100:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7329:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7324:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 444,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "7324:4:1",
															"typeDescriptions": {}
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7324:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"functionReturnParameters": 424,
												"id": 448,
												"nodeType": "Return",
												"src": "7317:18:1"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "6792:341:1",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "7147:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7161:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "7154:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 419,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7154:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:14:1"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "7191:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 422,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "7191:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7190:6:1"
									},
									"scope": 479,
									"src": "7138:204:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "7582:233:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7699:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7721:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 463,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7721:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					}
																				],
																				"id": 462,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "7716:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7716:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_int256",
																				"typeString": "type(int256)"
																			}
																		},
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "7716:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7708:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 460,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7708:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7708:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7699:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7735:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															},
															"value": "SafeCast: value doesn't fit in an int256"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7691:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7691:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "7691:87:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "7802:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7795:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 472,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7795:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 457,
												"id": 476,
												"nodeType": "Return",
												"src": "7788:20:1"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "7348:165:1",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "7527:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7544:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "7536:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:15:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "7574:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 455,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7574:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:8:1"
									},
									"scope": 479,
									"src": "7518:297:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 480,
							"src": "827:6990:1",
							"usedErrors": []
						}
					],
					"src": "92:7726:1"
				},
				"id": 1
			}
		}
	}
}