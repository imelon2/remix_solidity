{
	"id": "3849c662070ea126e36ff4f9df68403f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// import \"@openzeppelin/contracts/utils/Timers.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\ncontract test {\n\n\n    function keccak256test() public returns(bytes memory) {\n        // return uint256(keccak256(bytes(\"description\")));\n        return bytes(\"description\");\n        // return uint256(keccak256(bytes(\"description\")));\n        // return abi.encode([msg.sender],[0], [\"0xec9ec573cf97ad1c270be71ac1de3b382790cb346036130c7d7ff844bf8f4974\"], keccak256(bytes(\"description\")));\n    }\n\n\n    function votingDelay() public pure returns(uint256) {\n        return 1;\n    }\n\n    function votingPeriod() public pure returns(uint256) {\n        return 45818; // 1week\n    }\n\n    function snapshot() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n\n        return snapshot;\n    }\n\n    function deadline() public view returns(uint64) {\n        uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n        uint64 deadline = snapshot + uint64(votingPeriod());\n\n        return deadline;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"test": {
					"abi": [
						{
							"inputs": [],
							"name": "deadline",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "keccak256test",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".workspaces/default_workspace/unMiracle/test.sol\":170:1125  contract test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":170:1125  contract test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02a251a3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29dcb0cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3932abb1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8c492a76\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9711715a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":653:744  function votingPeriod() public pure returns(uint256) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":909:1123  function deadline() public view returns(uint64) {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":570:647  function votingDelay() public pure returns(uint256) {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:563  function keccak256test() public returns(bytes memory) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":750:903  function snapshot() public view returns(uint64) {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":653:744  function votingPeriod() public pure returns(uint256) {... */\n    tag_9:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":697:704  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":723:728  45818 */\n      0xb2fa\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":716:728  return 45818 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":653:744  function votingPeriod() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":909:1123  function deadline() public view returns(uint64) {... */\n    tag_13:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":949:955  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":967:982  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1015:1028  votingDelay() */\n      tag_28\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1015:1026  votingDelay */\n      tag_17\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1015:1028  votingDelay() */\n      jump\t// in\n    tag_28:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":992:1004  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":985:1029  uint64(block.number) + uint64(votingDelay()) */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":967:1029  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1039:1054  uint64 deadline */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1075:1089  votingPeriod() */\n      tag_31\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1075:1087  votingPeriod */\n      tag_9\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1075:1089  votingPeriod() */\n      jump\t// in\n    tag_31:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1057:1065  snapshot */\n      dup3\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1057:1090  snapshot + uint64(votingPeriod()) */\n      tag_32\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_32:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1039:1090  uint64 deadline = snapshot + uint64(votingPeriod()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1108:1116  deadline */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":1101:1116  return deadline */\n      swap3\n      pop\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":909:1123  function deadline() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":570:647  function votingDelay() public pure returns(uint256) {... */\n    tag_17:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":613:620  uint256 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":639:640  1 */\n      0x01\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":632:640  return 1 */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":570:647  function votingDelay() public pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:563  function keccak256test() public returns(bytes memory) {... */\n    tag_20:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":232:244  bytes memory */\n      0x60\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":323:343  bytes(\"description\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x6465736372697074696f6e000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":316:343  return bytes(\"description\") */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":192:563  function keccak256test() public returns(bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":750:903  function snapshot() public view returns(uint64) {... */\n    tag_24:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":790:796  uint64 */\n      0x00\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":808:823  uint64 snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":856:869  votingDelay() */\n      tag_36\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":856:867  votingDelay */\n      tag_17\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":856:869  votingDelay() */\n      jump\t// in\n    tag_36:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":833:845  block.number */\n      number\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":826:870  uint64(block.number) + uint64(votingDelay()) */\n      tag_37\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_37:\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":808:870  uint64 snapshot = uint64(block.number) + uint64(votingDelay()) */\n      swap1\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":888:896  snapshot */\n      dup1\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":881:896  return snapshot */\n      swap2\n      pop\n      pop\n        /* \".workspaces/default_workspace/unMiracle/test.sol\":750:903  function snapshot() public view returns(uint64) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:367   */\n    tag_39:\n        /* \"#utility.yul\":93:96   */\n      0x00\n        /* \"#utility.yul\":121:159   */\n      tag_41\n        /* \"#utility.yul\":153:158   */\n      dup3\n        /* \"#utility.yul\":121:159   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":175:245   */\n      tag_43\n        /* \"#utility.yul\":238:244   */\n      dup2\n        /* \"#utility.yul\":233:236   */\n      dup6\n        /* \"#utility.yul\":175:245   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":168:245   */\n      swap4\n      pop\n        /* \"#utility.yul\":254:306   */\n      tag_45\n        /* \"#utility.yul\":299:305   */\n      dup2\n        /* \"#utility.yul\":294:297   */\n      dup6\n        /* \"#utility.yul\":287:291   */\n      0x20\n        /* \"#utility.yul\":280:285   */\n      dup7\n        /* \"#utility.yul\":276:292   */\n      add\n        /* \"#utility.yul\":254:306   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":331:360   */\n      tag_47\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":331:360   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":326:329   */\n      dup5\n        /* \"#utility.yul\":322:361   */\n      add\n        /* \"#utility.yul\":315:361   */\n      swap2\n      pop\n        /* \"#utility.yul\":97:367   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":373:491   */\n    tag_49:\n        /* \"#utility.yul\":460:484   */\n      tag_51\n        /* \"#utility.yul\":478:483   */\n      dup2\n        /* \"#utility.yul\":460:484   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":455:458   */\n      dup3\n        /* \"#utility.yul\":448:485   */\n      mstore\n        /* \"#utility.yul\":438:491   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:612   */\n    tag_53:\n        /* \"#utility.yul\":582:605   */\n      tag_55\n        /* \"#utility.yul\":599:604   */\n      dup2\n        /* \"#utility.yul\":582:605   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":577:580   */\n      dup3\n        /* \"#utility.yul\":570:606   */\n      mstore\n        /* \"#utility.yul\":560:612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":618:927   */\n    tag_22:\n        /* \"#utility.yul\":729:733   */\n      0x00\n        /* \"#utility.yul\":767:769   */\n      0x20\n        /* \"#utility.yul\":756:765   */\n      dup3\n        /* \"#utility.yul\":752:770   */\n      add\n        /* \"#utility.yul\":744:770   */\n      swap1\n      pop\n        /* \"#utility.yul\":816:825   */\n      dup2\n        /* \"#utility.yul\":810:814   */\n      dup2\n        /* \"#utility.yul\":806:826   */\n      sub\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":780:827   */\n      mstore\n        /* \"#utility.yul\":844:920   */\n      tag_58\n        /* \"#utility.yul\":915:919   */\n      dup2\n        /* \"#utility.yul\":906:912   */\n      dup5\n        /* \"#utility.yul\":844:920   */\n      tag_39\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":836:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":734:927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":933:1155   */\n    tag_11:\n        /* \"#utility.yul\":1026:1030   */\n      0x00\n        /* \"#utility.yul\":1064:1066   */\n      0x20\n        /* \"#utility.yul\":1053:1062   */\n      dup3\n        /* \"#utility.yul\":1049:1067   */\n      add\n        /* \"#utility.yul\":1041:1067   */\n      swap1\n      pop\n        /* \"#utility.yul\":1077:1148   */\n      tag_60\n        /* \"#utility.yul\":1145:1146   */\n      0x00\n        /* \"#utility.yul\":1134:1143   */\n      dup4\n        /* \"#utility.yul\":1130:1147   */\n      add\n        /* \"#utility.yul\":1121:1127   */\n      dup5\n        /* \"#utility.yul\":1077:1148   */\n      tag_49\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1031:1155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1379   */\n    tag_15:\n        /* \"#utility.yul\":1252:1256   */\n      0x00\n        /* \"#utility.yul\":1290:1292   */\n      0x20\n        /* \"#utility.yul\":1279:1288   */\n      dup3\n        /* \"#utility.yul\":1275:1293   */\n      add\n        /* \"#utility.yul\":1267:1293   */\n      swap1\n      pop\n        /* \"#utility.yul\":1303:1372   */\n      tag_62\n        /* \"#utility.yul\":1369:1370   */\n      0x00\n        /* \"#utility.yul\":1358:1367   */\n      dup4\n        /* \"#utility.yul\":1354:1371   */\n      add\n        /* \"#utility.yul\":1345:1351   */\n      dup5\n        /* \"#utility.yul\":1303:1372   */\n      tag_53\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1257:1379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1385:1483   */\n    tag_42:\n        /* \"#utility.yul\":1436:1442   */\n      0x00\n        /* \"#utility.yul\":1470:1475   */\n      dup2\n        /* \"#utility.yul\":1464:1476   */\n      mload\n        /* \"#utility.yul\":1454:1476   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1489:1657   */\n    tag_44:\n        /* \"#utility.yul\":1572:1583   */\n      0x00\n        /* \"#utility.yul\":1606:1612   */\n      dup3\n        /* \"#utility.yul\":1601:1604   */\n      dup3\n        /* \"#utility.yul\":1594:1613   */\n      mstore\n        /* \"#utility.yul\":1646:1650   */\n      0x20\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1637:1651   */\n      add\n        /* \"#utility.yul\":1622:1651   */\n      swap1\n      pop\n        /* \"#utility.yul\":1584:1657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1663:1917   */\n    tag_30:\n        /* \"#utility.yul\":1702:1705   */\n      0x00\n        /* \"#utility.yul\":1721:1740   */\n      tag_66\n        /* \"#utility.yul\":1738:1739   */\n      dup3\n        /* \"#utility.yul\":1721:1740   */\n      tag_56\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1716:1740   */\n      swap2\n      pop\n        /* \"#utility.yul\":1754:1773   */\n      tag_67\n        /* \"#utility.yul\":1771:1772   */\n      dup4\n        /* \"#utility.yul\":1754:1773   */\n      tag_56\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1749:1773   */\n      swap3\n      pop\n        /* \"#utility.yul\":1859:1860   */\n      dup3\n        /* \"#utility.yul\":1839:1857   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1835:1861   */\n      sub\n        /* \"#utility.yul\":1832:1833   */\n      dup3\n        /* \"#utility.yul\":1829:1862   */\n      gt\n        /* \"#utility.yul\":1826:1828   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1865:1883   */\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1826:1828   */\n    tag_68:\n        /* \"#utility.yul\":1909:1910   */\n      dup3\n        /* \"#utility.yul\":1906:1907   */\n      dup3\n        /* \"#utility.yul\":1902:1911   */\n      add\n        /* \"#utility.yul\":1895:1911   */\n      swap1\n      pop\n        /* \"#utility.yul\":1706:1917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1923:2000   */\n    tag_52:\n        /* \"#utility.yul\":1960:1967   */\n      0x00\n        /* \"#utility.yul\":1989:1994   */\n      dup2\n        /* \"#utility.yul\":1978:1994   */\n      swap1\n      pop\n        /* \"#utility.yul\":1968:2000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2006:2107   */\n    tag_56:\n        /* \"#utility.yul\":2042:2049   */\n      0x00\n        /* \"#utility.yul\":2082:2100   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2075:2080   */\n      dup3\n        /* \"#utility.yul\":2071:2101   */\n      and\n        /* \"#utility.yul\":2060:2101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2113:2420   */\n    tag_46:\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2191:2304   */\n    tag_74:\n        /* \"#utility.yul\":2205:2211   */\n      dup4\n        /* \"#utility.yul\":2202:2203   */\n      dup2\n        /* \"#utility.yul\":2199:2212   */\n      lt\n        /* \"#utility.yul\":2191:2304   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2290:2291   */\n      dup1\n        /* \"#utility.yul\":2285:2288   */\n      dup3\n        /* \"#utility.yul\":2281:2292   */\n      add\n        /* \"#utility.yul\":2275:2293   */\n      mload\n        /* \"#utility.yul\":2271:2272   */\n      dup2\n        /* \"#utility.yul\":2266:2269   */\n      dup5\n        /* \"#utility.yul\":2262:2273   */\n      add\n        /* \"#utility.yul\":2255:2294   */\n      mstore\n        /* \"#utility.yul\":2227:2229   */\n      0x20\n        /* \"#utility.yul\":2224:2225   */\n      dup2\n        /* \"#utility.yul\":2220:2230   */\n      add\n        /* \"#utility.yul\":2215:2230   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2304   */\n      jump(tag_74)\n    tag_76:\n        /* \"#utility.yul\":2322:2328   */\n      dup4\n        /* \"#utility.yul\":2319:2320   */\n      dup2\n        /* \"#utility.yul\":2316:2329   */\n      gt\n        /* \"#utility.yul\":2313:2315   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2402:2403   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup5\n        /* \"#utility.yul\":2388:2391   */\n      dup5\n        /* \"#utility.yul\":2384:2400   */\n      add\n        /* \"#utility.yul\":2377:2404   */\n      mstore\n        /* \"#utility.yul\":2313:2315   */\n    tag_77:\n        /* \"#utility.yul\":2162:2420   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2426:2606   */\n    tag_70:\n        /* \"#utility.yul\":2474:2551   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2471:2472   */\n      0x00\n        /* \"#utility.yul\":2464:2552   */\n      mstore\n        /* \"#utility.yul\":2571:2575   */\n      0x11\n        /* \"#utility.yul\":2568:2569   */\n      0x04\n        /* \"#utility.yul\":2561:2576   */\n      mstore\n        /* \"#utility.yul\":2595:2599   */\n      0x24\n        /* \"#utility.yul\":2592:2593   */\n      0x00\n        /* \"#utility.yul\":2585:2600   */\n      revert\n        /* \"#utility.yul\":2612:2714   */\n    tag_48:\n        /* \"#utility.yul\":2653:2659   */\n      0x00\n        /* \"#utility.yul\":2704:2706   */\n      0x1f\n        /* \"#utility.yul\":2700:2707   */\n      not\n        /* \"#utility.yul\":2695:2697   */\n      0x1f\n        /* \"#utility.yul\":2688:2693   */\n      dup4\n        /* \"#utility.yul\":2684:2698   */\n      add\n        /* \"#utility.yul\":2680:2708   */\n      and\n        /* \"#utility.yul\":2670:2708   */\n      swap1\n      pop\n        /* \"#utility.yul\":2660:2714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b7fbaf57934d991e75e585661c380352f58d05fba3be09376a2518ef309bc4c564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610368806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806302a251a31461005c57806329dcb0cf1461007a5780633932abb1146100985780638c492a76146100b65780639711715a146100d4575b600080fd5b6100646100f2565b6040516100719190610211565b60405180910390f35b6100826100fc565b60405161008f919061022c565b60405180910390f35b6100a0610133565b6040516100ad9190610211565b60405180910390f35b6100be61013c565b6040516100cb91906101ef565b60405180910390f35b6100dc610179565b6040516100e9919061022c565b60405180910390f35b600061b2fa905090565b600080610107610133565b436101129190610263565b9050600061011e6100f2565b826101299190610263565b9050809250505090565b60006001905090565b60606040518060400160405280600b81526020017f6465736372697074696f6e000000000000000000000000000000000000000000815250905090565b600080610184610133565b4361018f9190610263565b90508091505090565b60006101a382610247565b6101ad8185610252565b93506101bd8185602086016102bf565b6101c681610321565b840191505092915050565b6101da816102a1565b82525050565b6101e9816102ab565b82525050565b600060208201905081810360008301526102098184610198565b905092915050565b600060208201905061022660008301846101d1565b92915050565b600060208201905061024160008301846101e0565b92915050565b600081519050919050565b600082825260208201905092915050565b600061026e826102ab565b9150610279836102ab565b92508267ffffffffffffffff03821115610296576102956102f2565b5b828201905092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60005b838110156102dd5780820151818401526020810190506102c2565b838111156102ec576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220b7fbaf57934d991e75e585661c380352f58d05fba3be09376a2518ef309bc4c564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8C492A76 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x107 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11E PUSH2 0xF2 JUMP JUMPDEST DUP3 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6465736372697074696F6E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x184 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x1AD DUP2 DUP6 PUSH2 0x252 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x2A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E9 DUP2 PUSH2 0x2AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x209 DUP2 DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x226 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E DUP3 PUSH2 0x2AB JUMP JUMPDEST SWAP2 POP PUSH2 0x279 DUP4 PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x296 JUMPI PUSH2 0x295 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xFB 0xAF JUMPI SWAP4 0x4D SWAP10 0x1E PUSH22 0xE585661C380352F58D05FBA3BE09376A2518EF309BC4 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "170:955:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2717:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "97:270:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "107:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "153:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "121:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "111:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "168:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "233:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "175:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "175:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "168:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "280:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "287:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "294:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "299:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "254:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "254:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "315:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "353:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "331:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "331:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "85:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "93:3:2",
														"type": ""
													}
												],
												"src": "7:360:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "438:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "455:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "478:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "460:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "460:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "448:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "448:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "448:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "426:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "433:3:2",
														"type": ""
													}
												],
												"src": "373:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "560:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "599:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "582:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "548:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "555:3:2",
														"type": ""
													}
												],
												"src": "497:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "734:193:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "744:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "756:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "752:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "752:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "744:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "810:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "816:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "806:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "806:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "780:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "780:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "836:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "906:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "915:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "844:61:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "836:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "706:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "718:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "729:4:2",
														"type": ""
													}
												],
												"src": "618:309:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1031:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1041:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1053:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1049:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1041:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1121:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1134:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1145:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1130:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1077:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1077:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1077:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1003:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1015:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1026:4:2",
														"type": ""
													}
												],
												"src": "933:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1257:122:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1267:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1279:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1275:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1267:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1345:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1369:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1303:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1303:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1303:69:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1241:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1252:4:2",
														"type": ""
													}
												],
												"src": "1161:218:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1443:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1454:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1470:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1464:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1426:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1436:6:2",
														"type": ""
													}
												],
												"src": "1385:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1584:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1601:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1606:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1594:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1622:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1622:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1556:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1561:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1572:11:2",
														"type": ""
													}
												],
												"src": "1489:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1706:211:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1716:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1738:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "1721:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:19:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1716:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1749:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1771:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "1754:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:19:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1749:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1863:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1865:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1865:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1865:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1832:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1859:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1835:26:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1829:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:2"
															},
															"nodeType": "YulIf",
															"src": "1826:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1895:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1906:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1909:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1902:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1693:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1696:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1702:3:2",
														"type": ""
													}
												],
												"src": "1663:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1968:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1978:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1989:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1978:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1950:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1960:7:2",
														"type": ""
													}
												],
												"src": "1923:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:57:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2060:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2075:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2082:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2071:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:30:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2060:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2032:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2042:7:2",
														"type": ""
													}
												],
												"src": "2006:101:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2162:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2172:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2181:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2176:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2241:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2266:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2271:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2262:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2262:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2285:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2290:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2281:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2281:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2275:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2275:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2255:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2255:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2255:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2202:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2205:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2199:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2213:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2215:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2224:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2227:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2220:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2220:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2215:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2195:3:2",
																"statements": []
															},
															"src": "2191:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2388:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2393:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2384:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2384:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2402:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2377:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2377:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2377:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2319:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2316:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:13:2"
															},
															"nodeType": "YulIf",
															"src": "2313:2:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2144:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2149:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2154:6:2",
														"type": ""
													}
												],
												"src": "2113:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2454:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2471:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2474:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2464:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2571:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2561:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2595:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2426:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2660:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2670:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2688:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2695:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2684:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2684:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2704:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2700:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2680:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2670:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2643:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2653:6:2",
														"type": ""
													}
												],
												"src": "2612:102:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806302a251a31461005c57806329dcb0cf1461007a5780633932abb1146100985780638c492a76146100b65780639711715a146100d4575b600080fd5b6100646100f2565b6040516100719190610211565b60405180910390f35b6100826100fc565b60405161008f919061022c565b60405180910390f35b6100a0610133565b6040516100ad9190610211565b60405180910390f35b6100be61013c565b6040516100cb91906101ef565b60405180910390f35b6100dc610179565b6040516100e9919061022c565b60405180910390f35b600061b2fa905090565b600080610107610133565b436101129190610263565b9050600061011e6100f2565b826101299190610263565b9050809250505090565b60006001905090565b60606040518060400160405280600b81526020017f6465736372697074696f6e000000000000000000000000000000000000000000815250905090565b600080610184610133565b4361018f9190610263565b90508091505090565b60006101a382610247565b6101ad8185610252565b93506101bd8185602086016102bf565b6101c681610321565b840191505092915050565b6101da816102a1565b82525050565b6101e9816102ab565b82525050565b600060208201905081810360008301526102098184610198565b905092915050565b600060208201905061022660008301846101d1565b92915050565b600060208201905061024160008301846101e0565b92915050565b600081519050919050565b600082825260208201905092915050565b600061026e826102ab565b9150610279836102ab565b92508267ffffffffffffffff03821115610296576102956102f2565b5b828201905092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60005b838110156102dd5780820151818401526020810190506102c2565b838111156102ec576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220b7fbaf57934d991e75e585661c380352f58d05fba3be09376a2518ef309bc4c564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8C492A76 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xB2FA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x107 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11E PUSH2 0xF2 JUMP JUMPDEST DUP3 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6465736372697074696F6E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x184 PUSH2 0x133 JUMP JUMPDEST NUMBER PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x1AD DUP2 DUP6 PUSH2 0x252 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x2A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E9 DUP2 PUSH2 0x2AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x209 DUP2 DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x226 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E DUP3 PUSH2 0x2AB JUMP JUMPDEST SWAP2 POP PUSH2 0x279 DUP4 PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x296 JUMPI PUSH2 0x295 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xFB 0xAF JUMPI SWAP4 0x4D SWAP10 0x1E PUSH22 0xE585661C380352F58D05FBA3BE09376A2518EF309BC4 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "170:955:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:214;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;570:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;192:371;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;750:153;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;653:91;697:7;723:5;716:12;;653:91;:::o;909:214::-;949:6;967:15;1015:13;:11;:13::i;:::-;992:12;985:44;;;;:::i;:::-;967:62;;1039:15;1075:14;:12;:14::i;:::-;1057:8;:33;;;;:::i;:::-;1039:51;;1108:8;1101:15;;;;909:214;:::o;570:77::-;613:7;639:1;632:8;;570:77;:::o;192:371::-;232:12;323:20;;;;;;;;;;;;;;;;;316:27;;192:371;:::o;750:153::-;790:6;808:15;856:13;:11;:13::i;:::-;833:12;826:44;;;;:::i;:::-;808:62;;888:8;881:15;;;750:153;:::o;7:360:2:-;93:3;121:38;153:5;121:38;:::i;:::-;175:70;238:6;233:3;175:70;:::i;:::-;168:77;;254:52;299:6;294:3;287:4;280:5;276:16;254:52;:::i;:::-;331:29;353:6;331:29;:::i;:::-;326:3;322:39;315:46;;97:270;;;;;:::o;373:118::-;460:24;478:5;460:24;:::i;:::-;455:3;448:37;438:53;;:::o;497:115::-;582:23;599:5;582:23;:::i;:::-;577:3;570:36;560:52;;:::o;618:309::-;729:4;767:2;756:9;752:18;744:26;;816:9;810:4;806:20;802:1;791:9;787:17;780:47;844:76;915:4;906:6;844:76;:::i;:::-;836:84;;734:193;;;;:::o;933:222::-;1026:4;1064:2;1053:9;1049:18;1041:26;;1077:71;1145:1;1134:9;1130:17;1121:6;1077:71;:::i;:::-;1031:124;;;;:::o;1161:218::-;1252:4;1290:2;1279:9;1275:18;1267:26;;1303:69;1369:1;1358:9;1354:17;1345:6;1303:69;:::i;:::-;1257:122;;;;:::o;1385:98::-;1436:6;1470:5;1464:12;1454:22;;1443:40;;;:::o;1489:168::-;1572:11;1606:6;1601:3;1594:19;1646:4;1641:3;1637:14;1622:29;;1584:73;;;;:::o;1663:254::-;1702:3;1721:19;1738:1;1721:19;:::i;:::-;1716:24;;1754:19;1771:1;1754:19;:::i;:::-;1749:24;;1859:1;1839:18;1835:26;1832:1;1829:33;1826:2;;;1865:18;;:::i;:::-;1826:2;1909:1;1906;1902:9;1895:16;;1706:211;;;;:::o;1923:77::-;1960:7;1989:5;1978:16;;1968:32;;;:::o;2006:101::-;2042:7;2082:18;2075:5;2071:30;2060:41;;2050:57;;;:::o;2113:307::-;2181:1;2191:113;2205:6;2202:1;2199:13;2191:113;;;2290:1;2285:3;2281:11;2275:18;2271:1;2266:3;2262:11;2255:39;2227:2;2224:1;2220:10;2215:15;;2191:113;;;2322:6;2319:1;2316:13;2313:2;;;2402:1;2393:6;2388:3;2384:16;2377:27;2313:2;2162:258;;;;:::o;2426:180::-;2474:77;2471:1;2464:88;2571:4;2568:1;2561:15;2595:4;2592:1;2585:15;2612:102;2653:6;2704:2;2700:7;2695:2;2688:5;2684:14;2680:28;2670:38;;2660:54;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "174400",
								"executionCost": "220",
								"totalCost": "174620"
							},
							"external": {
								"deadline()": "infinite",
								"keccak256test()": "infinite",
								"snapshot()": "infinite",
								"votingDelay()": "359",
								"votingPeriod()": "315"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1125,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7fbaf57934d991e75e585661c380352f58d05fba3be09376a2518ef309bc4c564736f6c63430008040033",
									".code": [
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "2A251A3"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "29DCB0CF"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "3932ABB1"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "8C492A76"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "9711715A"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 1125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 653,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 697,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA"
										},
										{
											"begin": 716,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1015,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1015,
											"end": 1028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1015,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1015,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1004,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 985,
											"end": 1029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 985,
											"end": 1029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1029,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 985,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1089,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1075,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 1123,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 570,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 632,
											"end": 640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 647,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 323,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 323,
											"end": 343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "6465736372697074696F6E000000000000000000000000000000000000000000"
										},
										{
											"begin": 323,
											"end": 343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 563,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 750,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 790,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 856,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 856,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 845,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 826,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 826,
											"end": 870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 826,
											"end": 870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 826,
											"end": 870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 826,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 826,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 881,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 881,
											"end": 896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 881,
											"end": 896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 903,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 367,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7,
											"end": 367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 93,
											"end": 96,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 153,
											"end": 158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 121,
											"end": 159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 175,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 233,
											"end": 236,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 175,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 245,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 254,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 294,
											"end": 297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 287,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 285,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 276,
											"end": 292,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 254,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 331,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 322,
											"end": 361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 315,
											"end": 361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 315,
											"end": 361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 367,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 373,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 373,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 460,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 478,
											"end": 483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 460,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 460,
											"end": 484,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 484,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 460,
											"end": 484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 455,
											"end": 458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 448,
											"end": 485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 438,
											"end": 491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 491,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 497,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 582,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 582,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 582,
											"end": 605,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 582,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 570,
											"end": 606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 560,
											"end": 612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 560,
											"end": 612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 560,
											"end": 612,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 618,
											"end": 927,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 618,
											"end": 927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 729,
											"end": 733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 752,
											"end": 770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 744,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 744,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 816,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 810,
											"end": 814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 806,
											"end": 826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 844,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 915,
											"end": 919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 844,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 844,
											"end": 920,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 844,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 844,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 927,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 734,
											"end": 927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 734,
											"end": 927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 927,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1145,
											"end": 1146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1155,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1155,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1161,
											"end": 1379,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1161,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1292,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1351,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1303,
											"end": 1372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1303,
											"end": 1372,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1303,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1379,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1385,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1385,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1476,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1483,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1489,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1489,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1650,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1657,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1657,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1663,
											"end": 1917,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1663,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1754,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1917,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1917,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1923,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1923,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1994,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2006,
											"end": 2107,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2006,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2107,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2107,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2113,
											"end": 2420,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2113,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2288,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2292,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2269,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2191,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2400,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2420,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2426,
											"end": 2606,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2426,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2474,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2471,
											"end": 2472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2600,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2612,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2700,
											"end": 2707,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2688,
											"end": 2693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2714,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deadline()": "29dcb0cf",
							"keccak256test()": "8c492a76",
							"snapshot()": "9711715a",
							"votingDelay()": "3932abb1",
							"votingPeriod()": "02a251a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keccak256test\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".workspaces/default_workspace/unMiracle/test.sol\":\"test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".workspaces/default_workspace/unMiracle/test.sol\":{\"keccak256\":\"0x2817dad47292d0a6fcbd0595a20655fe0aa99064820ee21b1c47dd3dd47fee05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3df9ba09fe1b4bdabecc966c2bc44f2d8b107245ba997eb75de480bf747dcf\",\"dweb:/ipfs/QmatixUN7tAA3tAmhbkokRJTNAQDZZMmha2gzmfVjBToMR\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":827:7817  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD1 0xFB CREATE CALLDATASIZE EXTCODEHASH 0x21 CALLDATASIZE 0xC2 0xE8 PUSH23 0x818346AB1AA4035D59F0C0811CFF01F4D0A02163C06473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "827:6990:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 827,
									"end": 7817,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095d1fbf0363f2136c2e876818346ab1aa4035d59f0c0811cff01f4d0a02163c064736f6c63430008040033",
									".code": [
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 7817,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:27:9:\n   |\n27 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:26:5:\n   |\n26 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 903,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 750
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 823,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 808
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:33:9:\n   |\n33 |         uint64 snapshot = uint64(block.number) + uint64(votingDelay());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:26:5:\n   |\n26 |     function snapshot() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 903,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 750
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 982,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 967
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .workspaces/default_workspace/unMiracle/test.sol:34:9:\n   |\n34 |         uint64 deadline = snapshot + uint64(votingPeriod());\n   |         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .workspaces/default_workspace/unMiracle/test.sol:32:5:\n   |\n32 |     function deadline() public view returns(uint64) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1123,
						"file": ".workspaces/default_workspace/unMiracle/test.sol",
						"message": "The shadowed declaration is here:",
						"start": 909
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1054,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 1039
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> .workspaces/default_workspace/unMiracle/test.sol:10:5:\n   |\n10 |     function keccak256test() public returns(bytes memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 563,
					"file": ".workspaces/default_workspace/unMiracle/test.sol",
					"start": 192
				},
				"type": "Warning"
			}
		],
		"sources": {
			".workspaces/default_workspace/unMiracle/test.sol": {
				"ast": {
					"absolutePath": ".workspaces/default_workspace/unMiracle/test.sol",
					"exportedSymbols": {
						"SafeCast": [
							477
						],
						"test": [
							84
						]
					},
					"id": 85,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 85,
							"sourceUnit": 478,
							"src": "111:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "test",
							"nameLocation": "179:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "246:317:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "6465736372697074696f6e",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "329:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1596dc38e2ac5a6ddc5e019af4adcc1e017a04f510d57e69d6879d5d2996bb8e",
																"typeString": "literal_string \"description\""
															},
															"value": "description"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1596dc38e2ac5a6ddc5e019af4adcc1e017a04f510d57e69d6879d5d2996bb8e",
																"typeString": "literal_string \"description\""
															}
														],
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "323:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 7,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "323:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "323:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 6,
												"id": 11,
												"nodeType": "Return",
												"src": "316:27:0"
											}
										]
									},
									"functionSelector": "8c492a76",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak256test",
									"nameLocation": "201:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "232:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:14:0"
									},
									"scope": 84,
									"src": "192:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "622:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "639:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 17,
												"id": 19,
												"nodeType": "Return",
												"src": "632:8:0"
											}
										]
									},
									"functionSelector": "3932abb1",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingDelay",
									"nameLocation": "579:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "613:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:9:0"
									},
									"scope": 84,
									"src": "570:77:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "706:38:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3435383138",
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45818_by_1",
														"typeString": "int_const 45818"
													},
													"value": "45818"
												},
												"functionReturnParameters": 25,
												"id": 27,
												"nodeType": "Return",
												"src": "716:12:0"
											}
										]
									},
									"functionSelector": "02a251a3",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "votingPeriod",
									"nameLocation": "662:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "697:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:9:0"
									},
									"scope": 84,
									"src": "653:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "798:105:0",
										"statements": [
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "815:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "808:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 34,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "808:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 38,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "833:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "833:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "826:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 36,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "826:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "826:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 43,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "856:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "856:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "849:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 41,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "849:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "849:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "826:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "808:62:0"
											},
											{
												"expression": {
													"id": 48,
													"name": "snapshot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "888:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 33,
												"id": 49,
												"nodeType": "Return",
												"src": "881:15:0"
											}
										]
									},
									"functionSelector": "9711715a",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "snapshot",
									"nameLocation": "759:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "790:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 31,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:8:0"
									},
									"scope": 84,
									"src": "750:153:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "957:166:0",
										"statements": [
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"mutability": "mutable",
														"name": "snapshot",
														"nameLocation": "974:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 82,
														"src": "967:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 56,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "967:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 60,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "992:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "992:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "985:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 58,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "985:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "985:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "votingDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1015:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1015:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 63,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1008:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1008:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "985:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:62:0"
											},
											{
												"assignments": [
													71
												],
												"declarations": [
													{
														"constant": false,
														"id": 71,
														"mutability": "mutable",
														"name": "deadline",
														"nameLocation": "1046:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 82,
														"src": "1039:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 70,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 72,
														"name": "snapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1057:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 75,
																	"name": "votingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1075:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																		"typeString": "function () pure returns (uint256)"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1075:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1068:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 73,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1068:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1068:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1057:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1039:51:0"
											},
											{
												"expression": {
													"id": 80,
													"name": "deadline",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "1108:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 55,
												"id": 81,
												"nodeType": "Return",
												"src": "1101:15:0"
											}
										]
									},
									"functionSelector": "29dcb0cf",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deadline",
									"nameLocation": "918:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "949:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 53,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "949:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:8:0"
									},
									"scope": 84,
									"src": "909:214:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 85,
							"src": "170:955:0",
							"usedErrors": []
						}
					],
					"src": "32:1093:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 86,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 87,
								"nodeType": "StructuredDocumentation",
								"src": "117:709:1",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "SafeCast",
							"nameLocation": "835:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1201:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "1219:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 99,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1233:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 98,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "1233:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			}
																		],
																		"id": 97,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1228:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1228:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint224",
																		"typeString": "type(uint224)"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1228:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															},
															"src": "1219:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1247:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															},
															"value": "SafeCast: value doesn't fit in 224 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 224 bits\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1211:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 108,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1314:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1306:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 106,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "1306:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 94,
												"id": 110,
												"nodeType": "Return",
												"src": "1299:21:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "850:280:1",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "1144:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1162:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1154:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:15:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1192:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 92,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:9:1"
									},
									"scope": 477,
									"src": "1135:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1684:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 121,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1702:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1716:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 123,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "1716:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			}
																		],
																		"id": 122,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1711:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1711:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint128",
																		"typeString": "type(uint128)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1711:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1702:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1730:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1694:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1694:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1797:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1789:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 131,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1789:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 119,
												"id": 135,
												"nodeType": "Return",
												"src": "1782:21:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "1333:280:1",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "1627:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1645:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1637:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1675:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 117,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:9:1"
									},
									"scope": 477,
									"src": "1618:192:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "2161:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "2179:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2193:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			},
																			"typeName": {
																				"id": 148,
																				"name": "uint96",
																				"nodeType": "ElementaryTypeName",
																				"src": "2193:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint96_$",
																				"typeString": "type(uint96)"
																			}
																		],
																		"id": 147,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2188:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2188:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint96",
																		"typeString": "type(uint96)"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2188:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "2179:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2206:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															},
															"value": "SafeCast: value doesn't fit in 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 96 bits\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2171:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2171:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "2271:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2264:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 156,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2264:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 144,
												"id": 160,
												"nodeType": "Return",
												"src": "2257:20:1"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "1816:276:1",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "2106:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2123:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2115:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:15:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2153:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 142,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2153:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:8:1"
									},
									"scope": 477,
									"src": "2097:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "2635:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 171,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "2653:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2667:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 173,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "2667:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			}
																		],
																		"id": 172,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2662:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2662:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint64",
																		"typeString": "type(uint64)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2662:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "2653:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2680:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2645:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2745:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2738:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 181,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "2738:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 169,
												"id": 185,
												"nodeType": "Return",
												"src": "2731:20:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2290:276:1",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "2580:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2597:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2589:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:15:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2627:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 167,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2627:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:8:1"
									},
									"scope": 477,
									"src": "2571:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "3109:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "3127:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3141:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 198,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3141:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			}
																		],
																		"id": 197,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3136:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3136:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint32",
																		"typeString": "type(uint32)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3136:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "3127:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3154:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3119:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3119:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "3119:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "3219:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3212:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 206,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3212:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 194,
												"id": 210,
												"nodeType": "Return",
												"src": "3205:20:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2764:276:1",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "3054:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3071:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3063:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:15:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3101:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 192,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3101:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:8:1"
									},
									"scope": 477,
									"src": "3045:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3583:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "3601:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3615:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 223,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "3615:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			}
																		],
																		"id": 222,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3610:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3610:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint16",
																		"typeString": "type(uint16)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3610:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "3601:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3628:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3593:76:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3693:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3686:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 231,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3686:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3686:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 219,
												"id": 235,
												"nodeType": "Return",
												"src": "3679:20:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "3238:276:1",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "3528:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3545:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3537:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:15:1"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3575:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 217,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3575:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:8:1"
									},
									"scope": 477,
									"src": "3519:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "4052:120:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "4070:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4084:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 248,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "4084:5:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		],
																		"id": 247,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4079:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4079:11:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint8",
																		"typeString": "type(uint8)"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "4079:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4070:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4096:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "4062:74:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4159:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4153:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 256,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4153:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 244,
												"id": 260,
												"nodeType": "Return",
												"src": "4146:19:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3712:273:1",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "3999:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4045:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 242,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4045:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:7:1"
									},
									"scope": 477,
									"src": "3990:182:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "4408:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "4426:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4435:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4426:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c7565206d75737420626520706f736974697665",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4438:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															},
															"value": "SafeCast: value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4418:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4418:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4418:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4498:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4490:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4490:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4490:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 281,
												"nodeType": "Return",
												"src": "4483:21:1"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "4178:160:1",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "4352:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4369:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4362:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 264,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:14:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4399:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:9:1"
									},
									"scope": 477,
									"src": "4343:168:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "4935:153:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 292,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "4953:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4967:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 294,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4967:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 293,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4962:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4962:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "4962:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4953:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 299,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "4982:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 301,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "4996:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				}
																			],
																			"id": 300,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "4991:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4991:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int128",
																			"typeString": "type(int128)"
																		}
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "4991:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4982:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4953:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5009:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4945:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4945:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "4945:106:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5068:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 310,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "5068:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5068:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 290,
												"id": 314,
												"nodeType": "Return",
												"src": "5061:20:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "4517:350:1",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "4881:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4897:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4890:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 285,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4890:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:14:1"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4927:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 288,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4927:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4926:8:1"
									},
									"scope": 477,
									"src": "4872:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "5505:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 325,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "5523:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5537:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 327,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5537:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 326,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5532:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5532:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "5532:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5523:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "5551:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5565:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				},
																				"typeName": {
																					"id": 334,
																					"name": "int64",
																					"nodeType": "ElementaryTypeName",
																					"src": "5565:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int64_$",
																					"typeString": "type(int64)"
																				}
																			],
																			"id": 333,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5560:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5560:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int64",
																			"typeString": "type(int64)"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5560:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int64",
																		"typeString": "int64"
																	}
																},
																"src": "5551:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5523:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5577:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "5515:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5641:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5635:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int64_$",
															"typeString": "type(int64)"
														},
														"typeName": {
															"id": 343,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "5635:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5635:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 323,
												"id": 347,
												"nodeType": "Return",
												"src": "5628:19:1"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "5094:345:1",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "5453:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5461:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5461:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:14:1"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5498:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 321,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "5498:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:7:1"
									},
									"scope": 477,
									"src": "5444:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "6071:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6089:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 360,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6103:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 359,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6098:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6098:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6089:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 365,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6117:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6131:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				},
																				"typeName": {
																					"id": 367,
																					"name": "int32",
																					"nodeType": "ElementaryTypeName",
																					"src": "6131:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int32_$",
																					"typeString": "type(int32)"
																				}
																			],
																			"id": 366,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6126:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6126:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int32",
																			"typeString": "type(int32)"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6126:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6117:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6089:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6143:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6081:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "6081:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6207:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6201:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int32_$",
															"typeString": "type(int32)"
														},
														"typeName": {
															"id": 376,
															"name": "int32",
															"nodeType": "ElementaryTypeName",
															"src": "6201:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"functionReturnParameters": 356,
												"id": 380,
												"nodeType": "Return",
												"src": "6194:19:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5660:345:1",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "6019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6034:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6027:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 351,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6027:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:14:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6064:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 354,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "6064:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6063:7:1"
									},
									"scope": 477,
									"src": "6010:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "6637:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "6655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6669:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 393,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6669:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 392,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6664:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6664:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "6664:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6655:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "6683:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6697:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				},
																				"typeName": {
																					"id": 400,
																					"name": "int16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6697:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int16_$",
																					"typeString": "type(int16)"
																				}
																			],
																			"id": 399,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6692:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6692:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int16",
																			"typeString": "type(int16)"
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6692:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "6683:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6655:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6709:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6647:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6647:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "6647:103:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "6773:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6767:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int16_$",
															"typeString": "type(int16)"
														},
														"typeName": {
															"id": 409,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "6767:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6767:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"functionReturnParameters": 389,
												"id": 413,
												"nodeType": "Return",
												"src": "6760:19:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "6226:345:1",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "6585:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6600:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6593:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 384,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:14:1"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6630:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 387,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "6630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6629:7:1"
									},
									"scope": 477,
									"src": "6576:210:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "7197:145:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 424,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "7215:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7229:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 426,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7229:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 425,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7224:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7224:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"src": "7224:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7215:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "7242:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7256:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				},
																				"typeName": {
																					"id": 433,
																					"name": "int8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7256:4:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_int8_$",
																					"typeString": "type(int8)"
																				}
																			],
																			"id": 432,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7251:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7251:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_int8",
																			"typeString": "type(int8)"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7251:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int8",
																		"typeString": "int8"
																	}
																},
																"src": "7242:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7215:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7267:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7207:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "7207:100:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "7329:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7324:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 442,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "7324:4:1",
															"typeDescriptions": {}
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7324:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"functionReturnParameters": 422,
												"id": 446,
												"nodeType": "Return",
												"src": "7317:18:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "6792:341:1",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "7147:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7161:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "7154:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 417,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7154:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:14:1"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "7191:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 420,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "7191:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7190:6:1"
									},
									"scope": 477,
									"src": "7138:204:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7582:233:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "7699:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7721:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 461,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7721:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					}
																				],
																				"id": 460,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "7716:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7716:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_int256",
																				"typeString": "type(int256)"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "7716:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7708:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 458,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7708:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7708:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7699:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7735:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															},
															"value": "SafeCast: value doesn't fit in an int256"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															}
														],
														"id": 456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7691:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7691:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "7691:87:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 472,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "7802:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7795:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 470,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7795:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 455,
												"id": 474,
												"nodeType": "Return",
												"src": "7788:20:1"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "7348:165:1",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "7527:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7544:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7536:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:15:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7574:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 453,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7574:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:8:1"
									},
									"scope": 477,
									"src": "7518:297:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "827:6990:1",
							"usedErrors": []
						}
					],
					"src": "92:7726:1"
				},
				"id": 1
			}
		}
	}
}